<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <meta name="nodejs.org:node-version" content="v18.9.1">
  <title>Node.js v18.9.1 Documentation</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic&display=fallback">
  <link rel="stylesheet" href="assets/style.css">
  <link rel="stylesheet" href="assets/hljs.css">
  <link rel="canonical" href="https://nodejs.org/api/all.html">
  <script async defer src="assets/api.js" type="text/javascript"></script>
  <style>@media(max-width:598px){.with-47-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:582px){.with-45-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:526px){.with-38-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:622px){.with-50-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:542px){.with-40-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1080px){.with-73-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:686px){.with-58-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1072px){.with-72-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:654px){.with-54-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:606px){.with-48-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1048px){.with-69-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1144px){.with-81-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:590px){.with-46-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:638px){.with-52-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1176px){.with-85-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:558px){.with-42-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:718px){.with-62-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:646px){.with-53-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:630px){.with-51-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:294px){.with-9-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:374px){.with-19-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:518px){.with-37-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:742px){.with-65-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:326px){.with-13-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:446px){.with-28-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:566px){.with-43-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:710px){.with-61-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:398px){.with-22-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:670px){.with-56-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:334px){.with-14-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:366px){.with-18-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:318px){.with-12-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:342px){.with-15-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:662px){.with-55-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:734px){.with-64-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:694px){.with-59-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:574px){.with-44-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:758px){.with-67-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:726px){.with-63-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:702px){.with-60-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:1096px){.with-75-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:534px){.with-39-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:462px){.with-30-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:286px){.with-8-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:430px){.with-26-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:550px){.with-41-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:750px){.with-66-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:494px){.with-34-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:454px){.with-29-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:478px){.with-32-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:614px){.with-49-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:350px){.with-16-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}@media(max-width:358px){.with-17-chars>.js-flavor-selector{float:none;margin:0 0 1em auto;}}</style>
</head>
<body class="alt apidoc" id="api-section-all">
  <div id="content" class="clearfix">
    <div id="column2" class="interior">
      <div id="intro" class="interior">
        <a href="/" title="Go back to the home page">
          Node.js
        </a>
      </div>
      <ul>
<li><a href="documentation.html" class="nav-documentation">About this documentation</a></li>
<li><a href="synopsis.html" class="nav-synopsis">Usage and example</a></li>
</ul>
<hr class="line">
<ul>
<li><a href="assert.html" class="nav-assert">Assertion testing</a></li>
<li><a href="async_context.html" class="nav-async_context">Asynchronous context tracking</a></li>
<li><a href="async_hooks.html" class="nav-async_hooks">Async hooks</a></li>
<li><a href="buffer.html" class="nav-buffer">Buffer</a></li>
<li><a href="addons.html" class="nav-addons">C++ addons</a></li>
<li><a href="n-api.html" class="nav-n-api">C/C++ addons with Node-API</a></li>
<li><a href="embedding.html" class="nav-embedding">C++ embedder API</a></li>
<li><a href="child_process.html" class="nav-child_process">Child processes</a></li>
<li><a href="cluster.html" class="nav-cluster">Cluster</a></li>
<li><a href="cli.html" class="nav-cli">Command-line options</a></li>
<li><a href="console.html" class="nav-console">Console</a></li>
<li><a href="corepack.html" class="nav-corepack">Corepack</a></li>
<li><a href="crypto.html" class="nav-crypto">Crypto</a></li>
<li><a href="debugger.html" class="nav-debugger">Debugger</a></li>
<li><a href="deprecations.html" class="nav-deprecations">Deprecated APIs</a></li>
<li><a href="diagnostics_channel.html" class="nav-diagnostics_channel">Diagnostics Channel</a></li>
<li><a href="dns.html" class="nav-dns">DNS</a></li>
<li><a href="domain.html" class="nav-domain">Domain</a></li>
<li><a href="errors.html" class="nav-errors">Errors</a></li>
<li><a href="events.html" class="nav-events">Events</a></li>
<li><a href="fs.html" class="nav-fs">File system</a></li>
<li><a href="globals.html" class="nav-globals">Globals</a></li>
<li><a href="http.html" class="nav-http">HTTP</a></li>
<li><a href="http2.html" class="nav-http2">HTTP/2</a></li>
<li><a href="https.html" class="nav-https">HTTPS</a></li>
<li><a href="inspector.html" class="nav-inspector">Inspector</a></li>
<li><a href="intl.html" class="nav-intl">Internationalization</a></li>
<li><a href="modules.html" class="nav-modules">Modules: CommonJS modules</a></li>
<li><a href="esm.html" class="nav-esm">Modules: ECMAScript modules</a></li>
<li><a href="module.html" class="nav-module">Modules: <code>node:module</code> API</a></li>
<li><a href="packages.html" class="nav-packages">Modules: Packages</a></li>
<li><a href="net.html" class="nav-net">Net</a></li>
<li><a href="os.html" class="nav-os">OS</a></li>
<li><a href="path.html" class="nav-path">Path</a></li>
<li><a href="perf_hooks.html" class="nav-perf_hooks">Performance hooks</a></li>
<li><a href="policy.html" class="nav-policy">Policies</a></li>
<li><a href="process.html" class="nav-process">Process</a></li>
<li><a href="punycode.html" class="nav-punycode">Punycode</a></li>
<li><a href="querystring.html" class="nav-querystring">Query strings</a></li>
<li><a href="readline.html" class="nav-readline">Readline</a></li>
<li><a href="repl.html" class="nav-repl">REPL</a></li>
<li><a href="report.html" class="nav-report">Report</a></li>
<li><a href="stream.html" class="nav-stream">Stream</a></li>
<li><a href="string_decoder.html" class="nav-string_decoder">String decoder</a></li>
<li><a href="test.html" class="nav-test">Test runner</a></li>
<li><a href="timers.html" class="nav-timers">Timers</a></li>
<li><a href="tls.html" class="nav-tls">TLS/SSL</a></li>
<li><a href="tracing.html" class="nav-tracing">Trace events</a></li>
<li><a href="tty.html" class="nav-tty">TTY</a></li>
<li><a href="dgram.html" class="nav-dgram">UDP/datagram</a></li>
<li><a href="url.html" class="nav-url">URL</a></li>
<li><a href="util.html" class="nav-util">Utilities</a></li>
<li><a href="v8.html" class="nav-v8">V8</a></li>
<li><a href="vm.html" class="nav-vm">VM</a></li>
<li><a href="wasi.html" class="nav-wasi">WASI</a></li>
<li><a href="webcrypto.html" class="nav-webcrypto">Web Crypto API</a></li>
<li><a href="webstreams.html" class="nav-webstreams">Web Streams API</a></li>
<li><a href="worker_threads.html" class="nav-worker_threads">Worker threads</a></li>
<li><a href="zlib.html" class="nav-zlib">Zlib</a></li>
</ul>
<hr class="line">
<ul>
<li><a href="https://github.com/nodejs/node" class="nav-https-github-com-nodejs-node">Code repository and issue tracker</a></li>
</ul>
    </div>

    <div id="column1" data-id="all" class="interior">
      <header class="header">
        <div class="header-container">
          <h1>Node.js v18.9.1 documentation</h1>
          <button class="theme-toggle-btn" id="theme-toggle-btn" title="Toggle dark mode/light mode" aria-label="Toggle dark mode/light mode" hidden>
            <svg xmlns="http://www.w3.org/2000/svg" class="icon dark-icon" height="24" width="24">
              <path fill="none" d="M0 0h24v24H0z" />
              <path d="M11.1 12.08c-2.33-4.51-.5-8.48.53-10.07C6.27 2.2 1.98 6.59 1.98 12c0 .14.02.28.02.42.62-.27 1.29-.42 2-.42 1.66 0 3.18.83 4.1 2.15A4.01 4.01 0 0111 18c0 1.52-.87 2.83-2.12 3.51.98.32 2.03.5 3.11.5 3.5 0 6.58-1.8 8.37-4.52-2.36.23-6.98-.97-9.26-5.41z"/>
              <path d="M7 16h-.18C6.4 14.84 5.3 14 4 14c-1.66 0-3 1.34-3 3s1.34 3 3 3h3c1.1 0 2-.9 2-2s-.9-2-2-2z"/>
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" class="icon light-icon" height="24" width="24">
              <path d="M0 0h24v24H0z" fill="none" />
              <path d="M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z"/>
            </svg>
          </button>
        </div>
        <div id="gtoc">
          <ul>
            <li class="pinned-header">Node.js v18.9.1</li>
            
            
            
    <li class="picker-header">
      <a href="#">
        <span class="collapsed-arrow">&#x25ba;</span><span class="expanded-arrow">&#x25bc;</span>
        Other versions
      </a>
      <div class="picker"><ol id="alt-docs"><li><a href="https://nodejs.org/docs/latest-v18.x/api/all.html">18.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v17.x/api/all.html">17.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v16.x/api/all.html">16.x <b>LTS</b></a></li>
<li><a href="https://nodejs.org/docs/latest-v15.x/api/all.html">15.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v14.x/api/all.html">14.x <b>LTS</b></a></li>
<li><a href="https://nodejs.org/docs/latest-v13.x/api/all.html">13.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v12.x/api/all.html">12.x <b>LTS</b></a></li>
<li><a href="https://nodejs.org/docs/latest-v11.x/api/all.html">11.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v10.x/api/all.html">10.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v9.x/api/all.html">9.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v8.x/api/all.html">8.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v7.x/api/all.html">7.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v6.x/api/all.html">6.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v5.x/api/all.html">5.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v4.x/api/all.html">4.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v0.12.x/api/all.html">0.12.x</a></li>
<li><a href="https://nodejs.org/docs/latest-v0.10.x/api/all.html">0.10.x</a></li></ol></div>
    </li>
  
            <li class="picker-header">
              <a href="#">
                <span class="collapsed-arrow">&#x25ba;</span><span class="expanded-arrow">&#x25bc;</span>
                Options
              </a>
        
              <div class="picker">
                <ul>
                  <li>
                    <a href="index.html">View on single page</a>
                  </li>
                  <li>
                    <a href="all.json">View as JSON</a>
                  </li>
                      
                </ul>
              </div>
            </li>
          </ul>
        </div>
        <hr>
      </header>

      <!-- TOC --><details id="toc" open><summary>Table of contents</summary>
<ul>
<li><a href="#all_documentation_about-this-documentation">About this documentation</a>
<ul>
<li><a href="#all_documentation_contributing">Contributing</a></li>
<li><a href="#all_documentation_stability-index">Stability index</a></li>
<li><a href="#all_documentation_stability-overview">Stability overview</a></li>
<li><a href="#all_documentation_json-output">JSON output</a></li>
<li><a href="#all_documentation_system-calls-and-man-pages">System calls and man pages</a></li>
</ul>
</li>
<li><a href="#all_synopsis_usage-and-example">Usage and example</a>
<ul>
<li><a href="#all_synopsis_usage">Usage</a></li>
<li><a href="#all_synopsis_example">Example</a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_assert_assert">Assert</a></span>
<ul>
<li><a href="#all_assert_strict-assertion-mode">Strict assertion mode</a></li>
<li><a href="#all_assert_legacy-assertion-mode">Legacy assertion mode</a></li>
<li><a href="#all_assert_class-assertassertionerror">Class: assert.AssertionError</a>
<ul>
<li><a href="#all_assert_new-assertassertionerroroptions"><code>new assert.AssertionError(options)</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_assert_class-assertcalltracker">Class: <code>assert.CallTracker</code></a></span>
<ul>
<li><a href="#all_assert_new-assertcalltracker"><code>new assert.CallTracker()</code></a></li>
<li><a href="#all_assert_trackercallsfn-exact"><code>tracker.calls([fn][, exact])</code></a></li>
<li><a href="#all_assert_trackergetcallsfn"><code>tracker.getCalls(fn)</code></a></li>
<li><a href="#all_assert_trackerreport"><code>tracker.report()</code></a></li>
<li><a href="#all_assert_trackerresetfn"><code>tracker.reset([fn])</code></a></li>
<li><a href="#all_assert_trackerverify"><code>tracker.verify()</code></a></li>
</ul>
</li>
<li><a href="#all_assert_assertvalue-message"><code>assert(value[, message])</code></a></li>
<li><a href="#all_assert_assertdeepequalactual-expected-message"><code>assert.deepEqual(actual, expected[, message])</code></a>
<ul>
<li><a href="#all_assert_comparison-details">Comparison details</a></li>
</ul>
</li>
<li><a href="#all_assert_assertdeepstrictequalactual-expected-message"><code>assert.deepStrictEqual(actual, expected[, message])</code></a>
<ul>
<li><a href="#all_assert_comparison-details_1">Comparison details</a></li>
</ul>
</li>
<li><a href="#all_assert_assertdoesnotmatchstring-regexp-message"><code>assert.doesNotMatch(string, regexp[, message])</code></a></li>
<li><a href="#all_assert_assertdoesnotrejectasyncfn-error-message"><code>assert.doesNotReject(asyncFn[, error][, message])</code></a></li>
<li><a href="#all_assert_assertdoesnotthrowfn-error-message"><code>assert.doesNotThrow(fn[, error][, message])</code></a></li>
<li><a href="#all_assert_assertequalactual-expected-message"><code>assert.equal(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertfailmessage"><code>assert.fail([message])</code></a></li>
<li><span class="stability_0"><a href="#all_assert_assertfailactual-expected-message-operator-stackstartfn"><code>assert.fail(actual, expected[, message[, operator[, stackStartFn]]])</code></a></span></li>
<li><a href="#all_assert_assertiferrorvalue"><code>assert.ifError(value)</code></a></li>
<li><a href="#all_assert_assertmatchstring-regexp-message"><code>assert.match(string, regexp[, message])</code></a></li>
<li><a href="#all_assert_assertnotdeepequalactual-expected-message"><code>assert.notDeepEqual(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertnotdeepstrictequalactual-expected-message"><code>assert.notDeepStrictEqual(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertnotequalactual-expected-message"><code>assert.notEqual(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertnotstrictequalactual-expected-message"><code>assert.notStrictEqual(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertokvalue-message"><code>assert.ok(value[, message])</code></a></li>
<li><a href="#all_assert_assertrejectsasyncfn-error-message"><code>assert.rejects(asyncFn[, error][, message])</code></a></li>
<li><span class="stability_1"><a href="#all_assert_assertsnapshotvalue-name"><code>assert.snapshot(value, name)</code></a></span></li>
<li><a href="#all_assert_assertstrictequalactual-expected-message"><code>assert.strictEqual(actual, expected[, message])</code></a></li>
<li><a href="#all_assert_assertthrowsfn-error-message"><code>assert.throws(fn[, error][, message])</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_async_context_asynchronous-context-tracking">Asynchronous context tracking</a></span>
<ul>
<li><a href="#all_async_context_introduction">Introduction</a></li>
<li><a href="#all_async_context_class-asynclocalstorage">Class: <code>AsyncLocalStorage</code></a>
<ul>
<li><a href="#all_async_context_new-asynclocalstorage"><code>new AsyncLocalStorage()</code></a></li>
<li><span class="stability_1"><a href="#all_async_context_asynclocalstoragedisable"><code>asyncLocalStorage.disable()</code></a></span></li>
<li><a href="#all_async_context_asynclocalstoragegetstore"><code>asyncLocalStorage.getStore()</code></a></li>
<li><span class="stability_1"><a href="#all_async_context_asynclocalstorageenterwithstore"><code>asyncLocalStorage.enterWith(store)</code></a></span></li>
<li><a href="#all_async_context_asynclocalstoragerunstore-callback-args"><code>asyncLocalStorage.run(store, callback[, ...args])</code></a></li>
<li><span class="stability_1"><a href="#all_async_context_asynclocalstorageexitcallback-args"><code>asyncLocalStorage.exit(callback[, ...args])</code></a></span></li>
<li><a href="#all_async_context_usage-with-asyncawait">Usage with <code>async/await</code></a></li>
<li><a href="#all_async_context_troubleshooting-context-loss">Troubleshooting: Context loss</a></li>
</ul>
</li>
<li><a href="#all_async_context_class-asyncresource">Class: <code>AsyncResource</code></a>
<ul>
<li><a href="#all_async_context_new-asyncresourcetype-options"><code>new AsyncResource(type[, options])</code></a></li>
<li><a href="#all_async_context_static-method-asyncresourcebindfn-type-thisarg">Static method: <code>AsyncResource.bind(fn[, type[, thisArg]])</code></a></li>
<li><a href="#all_async_context_asyncresourcebindfn-thisarg"><code>asyncResource.bind(fn[, thisArg])</code></a></li>
<li><a href="#all_async_context_asyncresourceruninasyncscopefn-thisarg-args"><code>asyncResource.runInAsyncScope(fn[, thisArg, ...args])</code></a></li>
<li><a href="#all_async_context_asyncresourceemitdestroy"><code>asyncResource.emitDestroy()</code></a></li>
<li><a href="#all_async_context_asyncresourceasyncid"><code>asyncResource.asyncId()</code></a></li>
<li><a href="#all_async_context_asyncresourcetriggerasyncid"><code>asyncResource.triggerAsyncId()</code></a></li>
<li><a href="#all_async_context_using-asyncresource-for-a-worker-thread-pool">Using <code>AsyncResource</code> for a <code>Worker</code> thread pool</a></li>
<li><a href="#all_async_context_integrating-asyncresource-with-eventemitter">Integrating <code>AsyncResource</code> with <code>EventEmitter</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_async_hooks_async-hooks">Async hooks</a></span>
<ul>
<li><a href="#all_async_hooks_terminology">Terminology</a></li>
<li><a href="#all_async_hooks_overview">Overview</a></li>
<li><a href="#all_async_hooks_async_hookscreatehookcallbacks"><code>async_hooks.createHook(callbacks)</code></a>
<ul>
<li><a href="#all_async_hooks_error-handling">Error handling</a></li>
<li><a href="#all_async_hooks_printing-in-asynchook-callbacks">Printing in <code>AsyncHook</code> callbacks</a></li>
</ul>
</li>
<li><a href="#all_async_hooks_class-asynchook">Class: <code>AsyncHook</code></a>
<ul>
<li><a href="#all_async_hooks_asynchookenable"><code>asyncHook.enable()</code></a></li>
<li><a href="#all_async_hooks_asynchookdisable"><code>asyncHook.disable()</code></a></li>
<li><a href="#all_async_hooks_hook-callbacks">Hook callbacks</a>
<ul>
<li><a href="#all_async_hooks_initasyncid-type-triggerasyncid-resource"><code>init(asyncId, type, triggerAsyncId, resource)</code></a>
<ul>
<li><a href="#all_async_hooks_type"><code>type</code></a></li>
<li><a href="#all_async_hooks_triggerasyncid"><code>triggerAsyncId</code></a></li>
<li><a href="#all_async_hooks_resource"><code>resource</code></a></li>
<li><a href="#all_async_hooks_asynchronous-context-example">Asynchronous context example</a></li>
</ul>
</li>
<li><a href="#all_async_hooks_beforeasyncid"><code>before(asyncId)</code></a></li>
<li><a href="#all_async_hooks_afterasyncid"><code>after(asyncId)</code></a></li>
<li><a href="#all_async_hooks_destroyasyncid"><code>destroy(asyncId)</code></a></li>
<li><a href="#all_async_hooks_promiseresolveasyncid"><code>promiseResolve(asyncId)</code></a></li>
</ul>
</li>
<li><a href="#all_async_hooks_async_hooksexecutionasyncresource"><code>async_hooks.executionAsyncResource()</code></a></li>
<li><a href="#all_async_hooks_async_hooksexecutionasyncid"><code>async_hooks.executionAsyncId()</code></a></li>
<li><a href="#all_async_hooks_async_hookstriggerasyncid"><code>async_hooks.triggerAsyncId()</code></a></li>
<li><a href="#all_async_hooks_async_hooksasyncwrapproviders"><code>async_hooks.asyncWrapProviders</code></a></li>
</ul>
</li>
<li><a href="#all_async_hooks_promise-execution-tracking">Promise execution tracking</a></li>
<li><a href="#all_async_hooks_javascript-embedder-api">JavaScript embedder API</a>
<ul>
<li><a href="#all_async_hooks_class-asyncresource">Class: <code>AsyncResource</code></a></li>
</ul>
</li>
<li><a href="#all_async_hooks_class-asynclocalstorage">Class: <code>AsyncLocalStorage</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_buffer_buffer">Buffer</a></span>
<ul>
<li><a href="#all_buffer_buffers-and-character-encodings">Buffers and character encodings</a></li>
<li><a href="#all_buffer_buffers-and-typedarrays">Buffers and TypedArrays</a></li>
<li><a href="#all_buffer_buffers-and-iteration">Buffers and iteration</a></li>
<li><a href="#all_buffer_class-blob">Class: <code>Blob</code></a>
<ul>
<li><a href="#all_buffer_new-bufferblobsources-options"><code>new buffer.Blob([sources[, options]])</code></a></li>
<li><a href="#all_buffer_blobarraybuffer"><code>blob.arrayBuffer()</code></a></li>
<li><a href="#all_buffer_blobsize"><code>blob.size</code></a></li>
<li><a href="#all_buffer_blobslicestart-end-type"><code>blob.slice([start[, end[, type]]])</code></a></li>
<li><a href="#all_buffer_blobstream"><code>blob.stream()</code></a></li>
<li><a href="#all_buffer_blobtext"><code>blob.text()</code></a></li>
<li><a href="#all_buffer_blobtype"><code>blob.type</code></a></li>
<li><a href="#all_buffer_blob-objects-and-messagechannel"><code>Blob</code> objects and <code>MessageChannel</code></a></li>
</ul>
</li>
<li><a href="#all_buffer_class-buffer">Class: <code>Buffer</code></a>
<ul>
<li><a href="#all_buffer_static-method-bufferallocsize-fill-encoding">Static method: <code>Buffer.alloc(size[, fill[, encoding]])</code></a></li>
<li><a href="#all_buffer_static-method-bufferallocunsafesize">Static method: <code>Buffer.allocUnsafe(size)</code></a></li>
<li><a href="#all_buffer_static-method-bufferallocunsafeslowsize">Static method: <code>Buffer.allocUnsafeSlow(size)</code></a></li>
<li><a href="#all_buffer_static-method-bufferbytelengthstring-encoding">Static method: <code>Buffer.byteLength(string[, encoding])</code></a></li>
<li><a href="#all_buffer_static-method-buffercomparebuf1-buf2">Static method: <code>Buffer.compare(buf1, buf2)</code></a></li>
<li><a href="#all_buffer_static-method-bufferconcatlist-totallength">Static method: <code>Buffer.concat(list[, totalLength])</code></a></li>
<li><a href="#all_buffer_static-method-bufferfromarray">Static method: <code>Buffer.from(array)</code></a></li>
<li><a href="#all_buffer_static-method-bufferfromarraybuffer-byteoffset-length">Static method: <code>Buffer.from(arrayBuffer[, byteOffset[, length]])</code></a></li>
<li><a href="#all_buffer_static-method-bufferfrombuffer">Static method: <code>Buffer.from(buffer)</code></a></li>
<li><a href="#all_buffer_static-method-bufferfromobject-offsetorencoding-length">Static method: <code>Buffer.from(object[, offsetOrEncoding[, length]])</code></a></li>
<li><a href="#all_buffer_static-method-bufferfromstring-encoding">Static method: <code>Buffer.from(string[, encoding])</code></a></li>
<li><a href="#all_buffer_static-method-bufferisbufferobj">Static method: <code>Buffer.isBuffer(obj)</code></a></li>
<li><a href="#all_buffer_static-method-bufferisencodingencoding">Static method: <code>Buffer.isEncoding(encoding)</code></a></li>
<li><a href="#all_buffer_class-property-bufferpoolsize">Class property: <code>Buffer.poolSize</code></a></li>
<li><a href="#all_buffer_bufindex"><code>buf[index]</code></a></li>
<li><a href="#all_buffer_bufbuffer"><code>buf.buffer</code></a></li>
<li><a href="#all_buffer_bufbyteoffset"><code>buf.byteOffset</code></a></li>
<li><a href="#all_buffer_bufcomparetarget-targetstart-targetend-sourcestart-sourceend"><code>buf.compare(target[, targetStart[, targetEnd[, sourceStart[, sourceEnd]]]])</code></a></li>
<li><a href="#all_buffer_bufcopytarget-targetstart-sourcestart-sourceend"><code>buf.copy(target[, targetStart[, sourceStart[, sourceEnd]]])</code></a></li>
<li><a href="#all_buffer_bufentries"><code>buf.entries()</code></a></li>
<li><a href="#all_buffer_bufequalsotherbuffer"><code>buf.equals(otherBuffer)</code></a></li>
<li><a href="#all_buffer_buffillvalue-offset-end-encoding"><code>buf.fill(value[, offset[, end]][, encoding])</code></a></li>
<li><a href="#all_buffer_bufincludesvalue-byteoffset-encoding"><code>buf.includes(value[, byteOffset][, encoding])</code></a></li>
<li><a href="#all_buffer_bufindexofvalue-byteoffset-encoding"><code>buf.indexOf(value[, byteOffset][, encoding])</code></a></li>
<li><a href="#all_buffer_bufkeys"><code>buf.keys()</code></a></li>
<li><a href="#all_buffer_buflastindexofvalue-byteoffset-encoding"><code>buf.lastIndexOf(value[, byteOffset][, encoding])</code></a></li>
<li><a href="#all_buffer_buflength"><code>buf.length</code></a></li>
<li><span class="stability_0"><a href="#all_buffer_bufparent"><code>buf.parent</code></a></span></li>
<li><a href="#all_buffer_bufreadbigint64beoffset"><code>buf.readBigInt64BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadbigint64leoffset"><code>buf.readBigInt64LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadbiguint64beoffset"><code>buf.readBigUInt64BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadbiguint64leoffset"><code>buf.readBigUInt64LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaddoublebeoffset"><code>buf.readDoubleBE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaddoubleleoffset"><code>buf.readDoubleLE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadfloatbeoffset"><code>buf.readFloatBE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadfloatleoffset"><code>buf.readFloatLE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadint8offset"><code>buf.readInt8([offset])</code></a></li>
<li><a href="#all_buffer_bufreadint16beoffset"><code>buf.readInt16BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadint16leoffset"><code>buf.readInt16LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadint32beoffset"><code>buf.readInt32BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadint32leoffset"><code>buf.readInt32LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreadintbeoffset-bytelength"><code>buf.readIntBE(offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufreadintleoffset-bytelength"><code>buf.readIntLE(offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufreaduint8offset"><code>buf.readUInt8([offset])</code></a></li>
<li><a href="#all_buffer_bufreaduint16beoffset"><code>buf.readUInt16BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaduint16leoffset"><code>buf.readUInt16LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaduint32beoffset"><code>buf.readUInt32BE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaduint32leoffset"><code>buf.readUInt32LE([offset])</code></a></li>
<li><a href="#all_buffer_bufreaduintbeoffset-bytelength"><code>buf.readUIntBE(offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufreaduintleoffset-bytelength"><code>buf.readUIntLE(offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufsubarraystart-end"><code>buf.subarray([start[, end]])</code></a></li>
<li><span class="stability_0"><a href="#all_buffer_bufslicestart-end"><code>buf.slice([start[, end]])</code></a></span></li>
<li><a href="#all_buffer_bufswap16"><code>buf.swap16()</code></a></li>
<li><a href="#all_buffer_bufswap32"><code>buf.swap32()</code></a></li>
<li><a href="#all_buffer_bufswap64"><code>buf.swap64()</code></a></li>
<li><a href="#all_buffer_buftojson"><code>buf.toJSON()</code></a></li>
<li><a href="#all_buffer_buftostringencoding-start-end"><code>buf.toString([encoding[, start[, end]]])</code></a></li>
<li><a href="#all_buffer_bufvalues"><code>buf.values()</code></a></li>
<li><a href="#all_buffer_bufwritestring-offset-length-encoding"><code>buf.write(string[, offset[, length]][, encoding])</code></a></li>
<li><a href="#all_buffer_bufwritebigint64bevalue-offset"><code>buf.writeBigInt64BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritebigint64levalue-offset"><code>buf.writeBigInt64LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritebiguint64bevalue-offset"><code>buf.writeBigUInt64BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritebiguint64levalue-offset"><code>buf.writeBigUInt64LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritedoublebevalue-offset"><code>buf.writeDoubleBE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritedoublelevalue-offset"><code>buf.writeDoubleLE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritefloatbevalue-offset"><code>buf.writeFloatBE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwritefloatlevalue-offset"><code>buf.writeFloatLE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteint8value-offset"><code>buf.writeInt8(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteint16bevalue-offset"><code>buf.writeInt16BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteint16levalue-offset"><code>buf.writeInt16LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteint32bevalue-offset"><code>buf.writeInt32BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteint32levalue-offset"><code>buf.writeInt32LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteintbevalue-offset-bytelength"><code>buf.writeIntBE(value, offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufwriteintlevalue-offset-bytelength"><code>buf.writeIntLE(value, offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufwriteuint8value-offset"><code>buf.writeUInt8(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteuint16bevalue-offset"><code>buf.writeUInt16BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteuint16levalue-offset"><code>buf.writeUInt16LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteuint32bevalue-offset"><code>buf.writeUInt32BE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteuint32levalue-offset"><code>buf.writeUInt32LE(value[, offset])</code></a></li>
<li><a href="#all_buffer_bufwriteuintbevalue-offset-bytelength"><code>buf.writeUIntBE(value, offset, byteLength)</code></a></li>
<li><a href="#all_buffer_bufwriteuintlevalue-offset-bytelength"><code>buf.writeUIntLE(value, offset, byteLength)</code></a></li>
<li><span class="stability_0"><a href="#all_buffer_new-bufferarray"><code>new Buffer(array)</code></a></span></li>
<li><span class="stability_0"><a href="#all_buffer_new-bufferarraybuffer-byteoffset-length"><code>new Buffer(arrayBuffer[, byteOffset[, length]])</code></a></span></li>
<li><span class="stability_0"><a href="#all_buffer_new-bufferbuffer"><code>new Buffer(buffer)</code></a></span></li>
<li><span class="stability_0"><a href="#all_buffer_new-buffersize"><code>new Buffer(size)</code></a></span></li>
<li><span class="stability_0"><a href="#all_buffer_new-bufferstring-encoding"><code>new Buffer(string[, encoding])</code></a></span></li>
</ul>
</li>
<li><a href="#all_buffer_nodebuffer-module-apis"><code>node:buffer</code> module APIs</a>
<ul>
<li><span class="stability_3"><a href="#all_buffer_bufferatobdata"><code>buffer.atob(data)</code></a></span></li>
<li><span class="stability_3"><a href="#all_buffer_bufferbtoadata"><code>buffer.btoa(data)</code></a></span></li>
<li><a href="#all_buffer_bufferinspect_max_bytes"><code>buffer.INSPECT_MAX_BYTES</code></a></li>
<li><a href="#all_buffer_bufferkmaxlength"><code>buffer.kMaxLength</code></a></li>
<li><a href="#all_buffer_bufferkstringmaxlength"><code>buffer.kStringMaxLength</code></a></li>
<li><span class="stability_1"><a href="#all_buffer_bufferresolveobjecturlid"><code>buffer.resolveObjectURL(id)</code></a></span></li>
<li><a href="#all_buffer_buffertranscodesource-fromenc-toenc"><code>buffer.transcode(source, fromEnc, toEnc)</code></a></li>
<li><span class="stability_0"><a href="#all_buffer_class-slowbuffer">Class: <code>SlowBuffer</code></a></span>
<ul>
<li><span class="stability_0"><a href="#all_buffer_new-slowbuffersize"><code>new SlowBuffer(size)</code></a></span></li>
</ul>
</li>
<li><a href="#all_buffer_buffer-constants">Buffer constants</a>
<ul>
<li><a href="#all_buffer_bufferconstantsmax_length"><code>buffer.constants.MAX_LENGTH</code></a></li>
<li><a href="#all_buffer_bufferconstantsmax_string_length"><code>buffer.constants.MAX_STRING_LENGTH</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_buffer_bufferfrom-bufferalloc-and-bufferallocunsafe"><code>Buffer.from()</code>, <code>Buffer.alloc()</code>, and <code>Buffer.allocUnsafe()</code></a>
<ul>
<li><a href="#all_buffer_the---zero-fill-buffers-command-line-option">The <code>--zero-fill-buffers</code> command-line option</a></li>
<li><a href="#all_buffer_what-makes-bufferallocunsafe-and-bufferallocunsafeslow-unsafe">What makes <code>Buffer.allocUnsafe()</code> and <code>Buffer.allocUnsafeSlow()</code> "unsafe"?</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_addons_c-addons">C++ addons</a>
<ul>
<li><a href="#all_addons_hello-world">Hello world</a>
<ul>
<li><a href="#all_addons_context-aware-addons">Context-aware addons</a>
<ul>
<li><a href="#all_addons_worker-support">Worker support</a></li>
</ul>
</li>
<li><a href="#all_addons_building">Building</a></li>
<li><a href="#all_addons_linking-to-libraries-included-with-nodejs">Linking to libraries included with Node.js</a></li>
<li><a href="#all_addons_loading-addons-using-require">Loading addons using <code>require()</code></a></li>
</ul>
</li>
<li><a href="#all_addons_native-abstractions-for-nodejs">Native abstractions for Node.js</a></li>
<li><span class="stability_2"><a href="#all_addons_node-api">Node-API</a></span></li>
<li><a href="#all_addons_addon-examples">Addon examples</a>
<ul>
<li><a href="#all_addons_function-arguments">Function arguments</a></li>
<li><a href="#all_addons_callbacks">Callbacks</a></li>
<li><a href="#all_addons_object-factory">Object factory</a></li>
<li><a href="#all_addons_function-factory">Function factory</a></li>
<li><a href="#all_addons_wrapping-c-objects">Wrapping C++ objects</a></li>
<li><a href="#all_addons_factory-of-wrapped-objects">Factory of wrapped objects</a></li>
<li><a href="#all_addons_passing-wrapped-objects-around">Passing wrapped objects around</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_n-api_node-api">Node-API</a></span>
<ul>
<li><a href="#all_n-api_implications-of-abi-stability">Implications of ABI stability</a></li>
<li><a href="#all_n-api_building">Building</a>
<ul>
<li><a href="#all_n-api_build-tools">Build tools</a>
<ul>
<li><a href="#all_n-api_node-gyp">node-gyp</a></li>
<li><a href="#all_n-api_cmakejs">CMake.js</a></li>
</ul>
</li>
<li><a href="#all_n-api_uploading-precompiled-binaries">Uploading precompiled binaries</a>
<ul>
<li><a href="#all_n-api_node-pre-gyp">node-pre-gyp</a></li>
<li><a href="#all_n-api_prebuild">prebuild</a></li>
<li><a href="#all_n-api_prebuildify">prebuildify</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_usage">Usage</a></li>
<li><a href="#all_n-api_node-api-version-matrix">Node-API version matrix</a></li>
<li><a href="#all_n-api_environment-life-cycle-apis">Environment life cycle APIs</a>
<ul>
<li><a href="#all_n-api_napi_set_instance_data"><code>napi_set_instance_data</code></a></li>
<li><a href="#all_n-api_napi_get_instance_data"><code>napi_get_instance_data</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_basic-node-api-data-types">Basic Node-API data types</a>
<ul>
<li><a href="#all_n-api_napi_status"><code>napi_status</code></a></li>
<li><a href="#all_n-api_napi_extended_error_info"><code>napi_extended_error_info</code></a></li>
<li><a href="#all_n-api_napi_env"><code>napi_env</code></a></li>
<li><a href="#all_n-api_napi_value"><code>napi_value</code></a></li>
<li><a href="#all_n-api_napi_threadsafe_function"><code>napi_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_threadsafe_function_release_mode"><code>napi_threadsafe_function_release_mode</code></a></li>
<li><a href="#all_n-api_napi_threadsafe_function_call_mode"><code>napi_threadsafe_function_call_mode</code></a></li>
<li><a href="#all_n-api_node-api-memory-management-types">Node-API memory management types</a>
<ul>
<li><a href="#all_n-api_napi_handle_scope"><code>napi_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_escapable_handle_scope"><code>napi_escapable_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_ref"><code>napi_ref</code></a></li>
<li><a href="#all_n-api_napi_type_tag"><code>napi_type_tag</code></a></li>
<li><a href="#all_n-api_napi_async_cleanup_hook_handle"><code>napi_async_cleanup_hook_handle</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_node-api-callback-types">Node-API callback types</a>
<ul>
<li><a href="#all_n-api_napi_callback_info"><code>napi_callback_info</code></a></li>
<li><a href="#all_n-api_napi_callback"><code>napi_callback</code></a></li>
<li><a href="#all_n-api_napi_finalize"><code>napi_finalize</code></a></li>
<li><a href="#all_n-api_napi_async_execute_callback"><code>napi_async_execute_callback</code></a></li>
<li><a href="#all_n-api_napi_async_complete_callback"><code>napi_async_complete_callback</code></a></li>
<li><a href="#all_n-api_napi_threadsafe_function_call_js"><code>napi_threadsafe_function_call_js</code></a></li>
<li><a href="#all_n-api_napi_async_cleanup_hook"><code>napi_async_cleanup_hook</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_error-handling">Error handling</a>
<ul>
<li><a href="#all_n-api_return-values">Return values</a>
<ul>
<li><a href="#all_n-api_napi_get_last_error_info"><code>napi_get_last_error_info</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_exceptions">Exceptions</a>
<ul>
<li><a href="#all_n-api_napi_throw"><code>napi_throw</code></a></li>
<li><a href="#all_n-api_napi_throw_error"><code>napi_throw_error</code></a></li>
<li><a href="#all_n-api_napi_throw_type_error"><code>napi_throw_type_error</code></a></li>
<li><a href="#all_n-api_napi_throw_range_error"><code>napi_throw_range_error</code></a></li>
<li><span class="stability_1"><a href="#all_n-api_node_api_throw_syntax_error"><code>node_api_throw_syntax_error</code></a></span></li>
<li><a href="#all_n-api_napi_is_error"><code>napi_is_error</code></a></li>
<li><a href="#all_n-api_napi_create_error"><code>napi_create_error</code></a></li>
<li><a href="#all_n-api_napi_create_type_error"><code>napi_create_type_error</code></a></li>
<li><a href="#all_n-api_napi_create_range_error"><code>napi_create_range_error</code></a></li>
<li><span class="stability_1"><a href="#all_n-api_node_api_create_syntax_error"><code>node_api_create_syntax_error</code></a></span></li>
<li><a href="#all_n-api_napi_get_and_clear_last_exception"><code>napi_get_and_clear_last_exception</code></a></li>
<li><a href="#all_n-api_napi_is_exception_pending"><code>napi_is_exception_pending</code></a></li>
<li><a href="#all_n-api_napi_fatal_exception"><code>napi_fatal_exception</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_fatal-errors">Fatal errors</a>
<ul>
<li><a href="#all_n-api_napi_fatal_error"><code>napi_fatal_error</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_object-lifetime-management">Object lifetime management</a>
<ul>
<li><a href="#all_n-api_making-handle-lifespan-shorter-than-that-of-the-native-method">Making handle lifespan shorter than that of the native method</a>
<ul>
<li><a href="#all_n-api_napi_open_handle_scope"><code>napi_open_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_close_handle_scope"><code>napi_close_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_open_escapable_handle_scope"><code>napi_open_escapable_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_close_escapable_handle_scope"><code>napi_close_escapable_handle_scope</code></a></li>
<li><a href="#all_n-api_napi_escape_handle"><code>napi_escape_handle</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_references-to-objects-with-a-lifespan-longer-than-that-of-the-native-method">References to objects with a lifespan longer than that of the native method</a>
<ul>
<li><a href="#all_n-api_napi_create_reference"><code>napi_create_reference</code></a></li>
<li><a href="#all_n-api_napi_delete_reference"><code>napi_delete_reference</code></a></li>
<li><a href="#all_n-api_napi_reference_ref"><code>napi_reference_ref</code></a></li>
<li><a href="#all_n-api_napi_reference_unref"><code>napi_reference_unref</code></a></li>
<li><a href="#all_n-api_napi_get_reference_value"><code>napi_get_reference_value</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_cleanup-on-exit-of-the-current-nodejs-instance">Cleanup on exit of the current Node.js instance</a>
<ul>
<li><a href="#all_n-api_napi_add_env_cleanup_hook"><code>napi_add_env_cleanup_hook</code></a></li>
<li><a href="#all_n-api_napi_remove_env_cleanup_hook"><code>napi_remove_env_cleanup_hook</code></a></li>
<li><a href="#all_n-api_napi_add_async_cleanup_hook"><code>napi_add_async_cleanup_hook</code></a></li>
<li><a href="#all_n-api_napi_remove_async_cleanup_hook"><code>napi_remove_async_cleanup_hook</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_module-registration">Module registration</a></li>
<li><a href="#all_n-api_working-with-javascript-values">Working with JavaScript values</a>
<ul>
<li><a href="#all_n-api_enum-types">Enum types</a>
<ul>
<li><a href="#all_n-api_napi_key_collection_mode"><code>napi_key_collection_mode</code></a></li>
<li><a href="#all_n-api_napi_key_filter"><code>napi_key_filter</code></a></li>
<li><a href="#all_n-api_napi_key_conversion"><code>napi_key_conversion</code></a></li>
<li><a href="#all_n-api_napi_valuetype"><code>napi_valuetype</code></a></li>
<li><a href="#all_n-api_napi_typedarray_type"><code>napi_typedarray_type</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_object-creation-functions">Object creation functions</a>
<ul>
<li><a href="#all_n-api_napi_create_array"><code>napi_create_array</code></a></li>
<li><a href="#all_n-api_napi_create_array_with_length"><code>napi_create_array_with_length</code></a></li>
<li><a href="#all_n-api_napi_create_arraybuffer"><code>napi_create_arraybuffer</code></a></li>
<li><a href="#all_n-api_napi_create_buffer"><code>napi_create_buffer</code></a></li>
<li><a href="#all_n-api_napi_create_buffer_copy"><code>napi_create_buffer_copy</code></a></li>
<li><a href="#all_n-api_napi_create_date"><code>napi_create_date</code></a></li>
<li><a href="#all_n-api_napi_create_external"><code>napi_create_external</code></a></li>
<li><a href="#all_n-api_napi_create_external_arraybuffer"><code>napi_create_external_arraybuffer</code></a></li>
<li><a href="#all_n-api_napi_create_external_buffer"><code>napi_create_external_buffer</code></a></li>
<li><a href="#all_n-api_napi_create_object"><code>napi_create_object</code></a></li>
<li><a href="#all_n-api_napi_create_symbol"><code>napi_create_symbol</code></a></li>
<li><span class="stability_1"><a href="#all_n-api_node_api_symbol_for"><code>node_api_symbol_for</code></a></span></li>
<li><a href="#all_n-api_napi_create_typedarray"><code>napi_create_typedarray</code></a></li>
<li><a href="#all_n-api_napi_create_dataview"><code>napi_create_dataview</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_functions-to-convert-from-c-types-to-node-api">Functions to convert from C types to Node-API</a>
<ul>
<li><a href="#all_n-api_napi_create_int32"><code>napi_create_int32</code></a></li>
<li><a href="#all_n-api_napi_create_uint32"><code>napi_create_uint32</code></a></li>
<li><a href="#all_n-api_napi_create_int64"><code>napi_create_int64</code></a></li>
<li><a href="#all_n-api_napi_create_double"><code>napi_create_double</code></a></li>
<li><a href="#all_n-api_napi_create_bigint_int64"><code>napi_create_bigint_int64</code></a></li>
<li><a href="#all_n-api_napi_create_bigint_uint64"><code>napi_create_bigint_uint64</code></a></li>
<li><a href="#all_n-api_napi_create_bigint_words"><code>napi_create_bigint_words</code></a></li>
<li><a href="#all_n-api_napi_create_string_latin1"><code>napi_create_string_latin1</code></a></li>
<li><a href="#all_n-api_napi_create_string_utf16"><code>napi_create_string_utf16</code></a></li>
<li><a href="#all_n-api_napi_create_string_utf8"><code>napi_create_string_utf8</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_functions-to-convert-from-node-api-to-c-types">Functions to convert from Node-API to C types</a>
<ul>
<li><a href="#all_n-api_napi_get_array_length"><code>napi_get_array_length</code></a></li>
<li><a href="#all_n-api_napi_get_arraybuffer_info"><code>napi_get_arraybuffer_info</code></a></li>
<li><a href="#all_n-api_napi_get_buffer_info"><code>napi_get_buffer_info</code></a></li>
<li><a href="#all_n-api_napi_get_prototype"><code>napi_get_prototype</code></a></li>
<li><a href="#all_n-api_napi_get_typedarray_info"><code>napi_get_typedarray_info</code></a></li>
<li><a href="#all_n-api_napi_get_dataview_info"><code>napi_get_dataview_info</code></a></li>
<li><a href="#all_n-api_napi_get_date_value"><code>napi_get_date_value</code></a></li>
<li><a href="#all_n-api_napi_get_value_bool"><code>napi_get_value_bool</code></a></li>
<li><a href="#all_n-api_napi_get_value_double"><code>napi_get_value_double</code></a></li>
<li><a href="#all_n-api_napi_get_value_bigint_int64"><code>napi_get_value_bigint_int64</code></a></li>
<li><a href="#all_n-api_napi_get_value_bigint_uint64"><code>napi_get_value_bigint_uint64</code></a></li>
<li><a href="#all_n-api_napi_get_value_bigint_words"><code>napi_get_value_bigint_words</code></a></li>
<li><a href="#all_n-api_napi_get_value_external"><code>napi_get_value_external</code></a></li>
<li><a href="#all_n-api_napi_get_value_int32"><code>napi_get_value_int32</code></a></li>
<li><a href="#all_n-api_napi_get_value_int64"><code>napi_get_value_int64</code></a></li>
<li><a href="#all_n-api_napi_get_value_string_latin1"><code>napi_get_value_string_latin1</code></a></li>
<li><a href="#all_n-api_napi_get_value_string_utf8"><code>napi_get_value_string_utf8</code></a></li>
<li><a href="#all_n-api_napi_get_value_string_utf16"><code>napi_get_value_string_utf16</code></a></li>
<li><a href="#all_n-api_napi_get_value_uint32"><code>napi_get_value_uint32</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_functions-to-get-global-instances">Functions to get global instances</a>
<ul>
<li><a href="#all_n-api_napi_get_boolean"><code>napi_get_boolean</code></a></li>
<li><a href="#all_n-api_napi_get_global"><code>napi_get_global</code></a></li>
<li><a href="#all_n-api_napi_get_null"><code>napi_get_null</code></a></li>
<li><a href="#all_n-api_napi_get_undefined"><code>napi_get_undefined</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_working-with-javascript-values-and-abstract-operations">Working with JavaScript values and abstract operations</a>
<ul>
<li><a href="#all_n-api_napi_coerce_to_bool"><code>napi_coerce_to_bool</code></a></li>
<li><a href="#all_n-api_napi_coerce_to_number"><code>napi_coerce_to_number</code></a></li>
<li><a href="#all_n-api_napi_coerce_to_object"><code>napi_coerce_to_object</code></a></li>
<li><a href="#all_n-api_napi_coerce_to_string"><code>napi_coerce_to_string</code></a></li>
<li><a href="#all_n-api_napi_typeof"><code>napi_typeof</code></a></li>
<li><a href="#all_n-api_napi_instanceof"><code>napi_instanceof</code></a></li>
<li><a href="#all_n-api_napi_is_array"><code>napi_is_array</code></a></li>
<li><a href="#all_n-api_napi_is_arraybuffer"><code>napi_is_arraybuffer</code></a></li>
<li><a href="#all_n-api_napi_is_buffer"><code>napi_is_buffer</code></a></li>
<li><a href="#all_n-api_napi_is_date"><code>napi_is_date</code></a></li>
<li><a href="#all_n-api_napi_is_error_1"><code>napi_is_error</code></a></li>
<li><a href="#all_n-api_napi_is_typedarray"><code>napi_is_typedarray</code></a></li>
<li><a href="#all_n-api_napi_is_dataview"><code>napi_is_dataview</code></a></li>
<li><a href="#all_n-api_napi_strict_equals"><code>napi_strict_equals</code></a></li>
<li><a href="#all_n-api_napi_detach_arraybuffer"><code>napi_detach_arraybuffer</code></a></li>
<li><a href="#all_n-api_napi_is_detached_arraybuffer"><code>napi_is_detached_arraybuffer</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_working-with-javascript-properties">Working with JavaScript properties</a>
<ul>
<li><a href="#all_n-api_structures">Structures</a>
<ul>
<li><a href="#all_n-api_napi_property_attributes"><code>napi_property_attributes</code></a></li>
<li><a href="#all_n-api_napi_property_descriptor"><code>napi_property_descriptor</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_functions">Functions</a>
<ul>
<li><a href="#all_n-api_napi_get_property_names"><code>napi_get_property_names</code></a></li>
<li><a href="#all_n-api_napi_get_all_property_names"><code>napi_get_all_property_names</code></a></li>
<li><a href="#all_n-api_napi_set_property"><code>napi_set_property</code></a></li>
<li><a href="#all_n-api_napi_get_property"><code>napi_get_property</code></a></li>
<li><a href="#all_n-api_napi_has_property"><code>napi_has_property</code></a></li>
<li><a href="#all_n-api_napi_delete_property"><code>napi_delete_property</code></a></li>
<li><a href="#all_n-api_napi_has_own_property"><code>napi_has_own_property</code></a></li>
<li><a href="#all_n-api_napi_set_named_property"><code>napi_set_named_property</code></a></li>
<li><a href="#all_n-api_napi_get_named_property"><code>napi_get_named_property</code></a></li>
<li><a href="#all_n-api_napi_has_named_property"><code>napi_has_named_property</code></a></li>
<li><a href="#all_n-api_napi_set_element"><code>napi_set_element</code></a></li>
<li><a href="#all_n-api_napi_get_element"><code>napi_get_element</code></a></li>
<li><a href="#all_n-api_napi_has_element"><code>napi_has_element</code></a></li>
<li><a href="#all_n-api_napi_delete_element"><code>napi_delete_element</code></a></li>
<li><a href="#all_n-api_napi_define_properties"><code>napi_define_properties</code></a></li>
<li><a href="#all_n-api_napi_object_freeze"><code>napi_object_freeze</code></a></li>
<li><a href="#all_n-api_napi_object_seal"><code>napi_object_seal</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_n-api_working-with-javascript-functions">Working with JavaScript functions</a>
<ul>
<li><a href="#all_n-api_napi_call_function"><code>napi_call_function</code></a></li>
<li><a href="#all_n-api_napi_create_function"><code>napi_create_function</code></a></li>
<li><a href="#all_n-api_napi_get_cb_info"><code>napi_get_cb_info</code></a></li>
<li><a href="#all_n-api_napi_get_new_target"><code>napi_get_new_target</code></a></li>
<li><a href="#all_n-api_napi_new_instance"><code>napi_new_instance</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_object-wrap">Object wrap</a>
<ul>
<li><a href="#all_n-api_napi_define_class"><code>napi_define_class</code></a></li>
<li><a href="#all_n-api_napi_wrap"><code>napi_wrap</code></a></li>
<li><a href="#all_n-api_napi_unwrap"><code>napi_unwrap</code></a></li>
<li><a href="#all_n-api_napi_remove_wrap"><code>napi_remove_wrap</code></a></li>
<li><a href="#all_n-api_napi_type_tag_object"><code>napi_type_tag_object</code></a></li>
<li><a href="#all_n-api_napi_check_object_type_tag"><code>napi_check_object_type_tag</code></a></li>
<li><a href="#all_n-api_napi_add_finalizer"><code>napi_add_finalizer</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_simple-asynchronous-operations">Simple asynchronous operations</a>
<ul>
<li><a href="#all_n-api_napi_create_async_work"><code>napi_create_async_work</code></a></li>
<li><a href="#all_n-api_napi_delete_async_work"><code>napi_delete_async_work</code></a></li>
<li><a href="#all_n-api_napi_queue_async_work"><code>napi_queue_async_work</code></a></li>
<li><a href="#all_n-api_napi_cancel_async_work"><code>napi_cancel_async_work</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_custom-asynchronous-operations">Custom asynchronous operations</a>
<ul>
<li><a href="#all_n-api_napi_async_init"><code>napi_async_init</code></a></li>
<li><a href="#all_n-api_napi_async_destroy"><code>napi_async_destroy</code></a></li>
<li><a href="#all_n-api_napi_make_callback"><code>napi_make_callback</code></a></li>
<li><a href="#all_n-api_napi_open_callback_scope"><code>napi_open_callback_scope</code></a></li>
<li><a href="#all_n-api_napi_close_callback_scope"><code>napi_close_callback_scope</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_version-management">Version management</a>
<ul>
<li><a href="#all_n-api_napi_get_node_version"><code>napi_get_node_version</code></a></li>
<li><a href="#all_n-api_napi_get_version"><code>napi_get_version</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_memory-management">Memory management</a>
<ul>
<li><a href="#all_n-api_napi_adjust_external_memory"><code>napi_adjust_external_memory</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_promises">Promises</a>
<ul>
<li><a href="#all_n-api_napi_create_promise"><code>napi_create_promise</code></a></li>
<li><a href="#all_n-api_napi_resolve_deferred"><code>napi_resolve_deferred</code></a></li>
<li><a href="#all_n-api_napi_reject_deferred"><code>napi_reject_deferred</code></a></li>
<li><a href="#all_n-api_napi_is_promise"><code>napi_is_promise</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_script-execution">Script execution</a>
<ul>
<li><a href="#all_n-api_napi_run_script"><code>napi_run_script</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_libuv-event-loop">libuv event loop</a>
<ul>
<li><a href="#all_n-api_napi_get_uv_event_loop"><code>napi_get_uv_event_loop</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_asynchronous-thread-safe-function-calls">Asynchronous thread-safe function calls</a>
<ul>
<li><a href="#all_n-api_calling-a-thread-safe-function">Calling a thread-safe function</a></li>
<li><a href="#all_n-api_reference-counting-of-thread-safe-functions">Reference counting of thread-safe functions</a></li>
<li><a href="#all_n-api_deciding-whether-to-keep-the-process-running">Deciding whether to keep the process running</a></li>
<li><a href="#all_n-api_napi_create_threadsafe_function"><code>napi_create_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_get_threadsafe_function_context"><code>napi_get_threadsafe_function_context</code></a></li>
<li><a href="#all_n-api_napi_call_threadsafe_function"><code>napi_call_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_acquire_threadsafe_function"><code>napi_acquire_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_release_threadsafe_function"><code>napi_release_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_ref_threadsafe_function"><code>napi_ref_threadsafe_function</code></a></li>
<li><a href="#all_n-api_napi_unref_threadsafe_function"><code>napi_unref_threadsafe_function</code></a></li>
</ul>
</li>
<li><a href="#all_n-api_miscellaneous-utilities">Miscellaneous utilities</a>
<ul>
<li><span class="stability_1"><a href="#all_n-api_node_api_get_module_file_name"><code>node_api_get_module_file_name</code></a></span></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_embedding_c-embedder-api">C++ embedder API</a>
<ul>
<li><a href="#all_embedding_example-embedding-application">Example embedding application</a>
<ul>
<li><a href="#all_embedding_setting-up-per-process-state">Setting up per-process state</a></li>
<li><a href="#all_embedding_per-instance-state">Per-instance state</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_child_process_child-process">Child process</a></span>
<ul>
<li><a href="#all_child_process_asynchronous-process-creation">Asynchronous process creation</a>
<ul>
<li><a href="#all_child_process_spawning-bat-and-cmd-files-on-windows">Spawning <code>.bat</code> and <code>.cmd</code> files on Windows</a></li>
<li><a href="#all_child_process_child_processexeccommand-options-callback"><code>child_process.exec(command[, options][, callback])</code></a></li>
<li><a href="#all_child_process_child_processexecfilefile-args-options-callback"><code>child_process.execFile(file[, args][, options][, callback])</code></a></li>
<li><a href="#all_child_process_child_processforkmodulepath-args-options"><code>child_process.fork(modulePath[, args][, options])</code></a></li>
<li><a href="#all_child_process_child_processspawncommand-args-options"><code>child_process.spawn(command[, args][, options])</code></a>
<ul>
<li><a href="#all_child_process_optionsdetached"><code>options.detached</code></a></li>
<li><a href="#all_child_process_optionsstdio"><code>options.stdio</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_child_process_synchronous-process-creation">Synchronous process creation</a>
<ul>
<li><a href="#all_child_process_child_processexecfilesyncfile-args-options"><code>child_process.execFileSync(file[, args][, options])</code></a></li>
<li><a href="#all_child_process_child_processexecsynccommand-options"><code>child_process.execSync(command[, options])</code></a></li>
<li><a href="#all_child_process_child_processspawnsynccommand-args-options"><code>child_process.spawnSync(command[, args][, options])</code></a></li>
</ul>
</li>
<li><a href="#all_child_process_class-childprocess">Class: <code>ChildProcess</code></a>
<ul>
<li><a href="#all_child_process_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_child_process_event-disconnect">Event: <code>'disconnect'</code></a></li>
<li><a href="#all_child_process_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_child_process_event-exit">Event: <code>'exit'</code></a></li>
<li><a href="#all_child_process_event-message">Event: <code>'message'</code></a></li>
<li><a href="#all_child_process_event-spawn">Event: <code>'spawn'</code></a></li>
<li><a href="#all_child_process_subprocesschannel"><code>subprocess.channel</code></a>
<ul>
<li><a href="#all_child_process_subprocesschannelref"><code>subprocess.channel.ref()</code></a></li>
<li><a href="#all_child_process_subprocesschannelunref"><code>subprocess.channel.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_child_process_subprocessconnected"><code>subprocess.connected</code></a></li>
<li><a href="#all_child_process_subprocessdisconnect"><code>subprocess.disconnect()</code></a></li>
<li><a href="#all_child_process_subprocessexitcode"><code>subprocess.exitCode</code></a></li>
<li><a href="#all_child_process_subprocesskillsignal"><code>subprocess.kill([signal])</code></a></li>
<li><a href="#all_child_process_subprocesskilled"><code>subprocess.killed</code></a></li>
<li><a href="#all_child_process_subprocesspid"><code>subprocess.pid</code></a></li>
<li><a href="#all_child_process_subprocessref"><code>subprocess.ref()</code></a></li>
<li><a href="#all_child_process_subprocesssendmessage-sendhandle-options-callback"><code>subprocess.send(message[, sendHandle[, options]][, callback])</code></a>
<ul>
<li><a href="#all_child_process_example-sending-a-server-object">Example: sending a server object</a></li>
<li><a href="#all_child_process_example-sending-a-socket-object">Example: sending a socket object</a></li>
</ul>
</li>
<li><a href="#all_child_process_subprocesssignalcode"><code>subprocess.signalCode</code></a></li>
<li><a href="#all_child_process_subprocessspawnargs"><code>subprocess.spawnargs</code></a></li>
<li><a href="#all_child_process_subprocessspawnfile"><code>subprocess.spawnfile</code></a></li>
<li><a href="#all_child_process_subprocessstderr"><code>subprocess.stderr</code></a></li>
<li><a href="#all_child_process_subprocessstdin"><code>subprocess.stdin</code></a></li>
<li><a href="#all_child_process_subprocessstdio"><code>subprocess.stdio</code></a></li>
<li><a href="#all_child_process_subprocessstdout"><code>subprocess.stdout</code></a></li>
<li><a href="#all_child_process_subprocessunref"><code>subprocess.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_child_process_maxbuffer-and-unicode"><code>maxBuffer</code> and Unicode</a></li>
<li><a href="#all_child_process_shell-requirements">Shell requirements</a></li>
<li><a href="#all_child_process_default-windows-shell">Default Windows shell</a></li>
<li><a href="#all_child_process_advanced-serialization">Advanced serialization</a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_cluster_cluster">Cluster</a></span>
<ul>
<li><a href="#all_cluster_how-it-works">How it works</a></li>
<li><a href="#all_cluster_class-worker">Class: <code>Worker</code></a>
<ul>
<li><a href="#all_cluster_event-disconnect">Event: <code>'disconnect'</code></a></li>
<li><a href="#all_cluster_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_cluster_event-exit">Event: <code>'exit'</code></a></li>
<li><a href="#all_cluster_event-listening">Event: <code>'listening'</code></a></li>
<li><a href="#all_cluster_event-message">Event: <code>'message'</code></a></li>
<li><a href="#all_cluster_event-online">Event: <code>'online'</code></a></li>
<li><a href="#all_cluster_workerdisconnect"><code>worker.disconnect()</code></a></li>
<li><a href="#all_cluster_workerexitedafterdisconnect"><code>worker.exitedAfterDisconnect</code></a></li>
<li><a href="#all_cluster_workerid"><code>worker.id</code></a></li>
<li><a href="#all_cluster_workerisconnected"><code>worker.isConnected()</code></a></li>
<li><a href="#all_cluster_workerisdead"><code>worker.isDead()</code></a></li>
<li><a href="#all_cluster_workerkillsignal"><code>worker.kill([signal])</code></a></li>
<li><a href="#all_cluster_workerprocess"><code>worker.process</code></a></li>
<li><a href="#all_cluster_workersendmessage-sendhandle-options-callback"><code>worker.send(message[, sendHandle[, options]][, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_cluster_event-disconnect_1">Event: <code>'disconnect'</code></a></li>
<li><a href="#all_cluster_event-exit_1">Event: <code>'exit'</code></a></li>
<li><a href="#all_cluster_event-fork">Event: <code>'fork'</code></a></li>
<li><a href="#all_cluster_event-listening_1">Event: <code>'listening'</code></a></li>
<li><a href="#all_cluster_event-message_1">Event: <code>'message'</code></a></li>
<li><a href="#all_cluster_event-online_1">Event: <code>'online'</code></a></li>
<li><a href="#all_cluster_event-setup">Event: <code>'setup'</code></a></li>
<li><a href="#all_cluster_clusterdisconnectcallback"><code>cluster.disconnect([callback])</code></a></li>
<li><a href="#all_cluster_clusterforkenv"><code>cluster.fork([env])</code></a></li>
<li><a href="#all_cluster_clusterismaster"><code>cluster.isMaster</code></a></li>
<li><a href="#all_cluster_clusterisprimary"><code>cluster.isPrimary</code></a></li>
<li><a href="#all_cluster_clusterisworker"><code>cluster.isWorker</code></a></li>
<li><a href="#all_cluster_clusterschedulingpolicy"><code>cluster.schedulingPolicy</code></a></li>
<li><a href="#all_cluster_clustersettings"><code>cluster.settings</code></a></li>
<li><a href="#all_cluster_clustersetupmastersettings"><code>cluster.setupMaster([settings])</code></a></li>
<li><a href="#all_cluster_clustersetupprimarysettings"><code>cluster.setupPrimary([settings])</code></a></li>
<li><a href="#all_cluster_clusterworker"><code>cluster.worker</code></a></li>
<li><a href="#all_cluster_clusterworkers"><code>cluster.workers</code></a></li>
</ul>
</li>
<li><a href="#all_cli_command-line-api">Command-line API</a>
<ul>
<li><a href="#all_cli_synopsis">Synopsis</a></li>
<li><a href="#all_cli_program-entry-point">Program entry point</a>
<ul>
<li><a href="#all_cli_ecmascript-modules-loader-entry-point-caveat">ECMAScript modules loader entry point caveat</a></li>
</ul>
</li>
<li><a href="#all_cli_options">Options</a>
<ul>
<li><a href="#all_cli_-"><code>-</code></a></li>
<li><a href="#all_cli_--"><code>--</code></a></li>
<li><a href="#all_cli_--abort-on-uncaught-exception"><code>--abort-on-uncaught-exception</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--build-snapshot"><code>--build-snapshot</code></a></span></li>
<li><a href="#all_cli_--completion-bash"><code>--completion-bash</code></a></li>
<li><span class="stability_1"><a href="#all_cli_-ccondition---conditionscondition"><code>-C=condition</code>, <code>--conditions=condition</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--cpu-prof"><code>--cpu-prof</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--cpu-prof-dir"><code>--cpu-prof-dir</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--cpu-prof-interval"><code>--cpu-prof-interval</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--cpu-prof-name"><code>--cpu-prof-name</code></a></span></li>
<li><a href="#all_cli_--diagnostic-dirdirectory"><code>--diagnostic-dir=directory</code></a></li>
<li><a href="#all_cli_--disable-protomode"><code>--disable-proto=mode</code></a></li>
<li><a href="#all_cli_--disallow-code-generation-from-strings"><code>--disallow-code-generation-from-strings</code></a></li>
<li><a href="#all_cli_--dns-result-orderorder"><code>--dns-result-order=order</code></a></li>
<li><a href="#all_cli_--enable-fips"><code>--enable-fips</code></a></li>
<li><a href="#all_cli_--enable-source-maps"><code>--enable-source-maps</code></a></li>
<li><a href="#all_cli_--experimental-global-customevent"><code>--experimental-global-customevent</code></a></li>
<li><a href="#all_cli_--experimental-global-webcrypto"><code>--experimental-global-webcrypto</code></a></li>
<li><a href="#all_cli_--experimental-import-meta-resolve"><code>--experimental-import-meta-resolve</code></a></li>
<li><a href="#all_cli_--experimental-loadermodule"><code>--experimental-loader=module</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--experimental-network-imports"><code>--experimental-network-imports</code></a></span></li>
<li><a href="#all_cli_--experimental-policy"><code>--experimental-policy</code></a></li>
<li><a href="#all_cli_--no-experimental-fetch"><code>--no-experimental-fetch</code></a></li>
<li><a href="#all_cli_--no-experimental-repl-await"><code>--no-experimental-repl-await</code></a></li>
<li><a href="#all_cli_--experimental-specifier-resolutionmode"><code>--experimental-specifier-resolution=mode</code></a></li>
<li><a href="#all_cli_--experimental-vm-modules"><code>--experimental-vm-modules</code></a></li>
<li><a href="#all_cli_--experimental-wasi-unstable-preview1"><code>--experimental-wasi-unstable-preview1</code></a></li>
<li><a href="#all_cli_--experimental-wasm-modules"><code>--experimental-wasm-modules</code></a></li>
<li><a href="#all_cli_--force-context-aware"><code>--force-context-aware</code></a></li>
<li><a href="#all_cli_--force-fips"><code>--force-fips</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--frozen-intrinsics"><code>--frozen-intrinsics</code></a></span></li>
<li><a href="#all_cli_--force-node-api-uncaught-exceptions-policy"><code>--force-node-api-uncaught-exceptions-policy</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--heapsnapshot-near-heap-limitmax_count"><code>--heapsnapshot-near-heap-limit=max_count</code></a></span></li>
<li><a href="#all_cli_--heapsnapshot-signalsignal"><code>--heapsnapshot-signal=signal</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--heap-prof"><code>--heap-prof</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--heap-prof-dir"><code>--heap-prof-dir</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--heap-prof-interval"><code>--heap-prof-interval</code></a></span></li>
<li><span class="stability_1"><a href="#all_cli_--heap-prof-name"><code>--heap-prof-name</code></a></span></li>
<li><a href="#all_cli_--icu-data-dirfile"><code>--icu-data-dir=file</code></a></li>
<li><a href="#all_cli_--input-typetype"><code>--input-type=type</code></a></li>
<li><a href="#all_cli_--inspect-brkhostport"><code>--inspect-brk[=[host:]port]</code></a></li>
<li><a href="#all_cli_--inspect-porthostport"><code>--inspect-port=[host:]port</code></a></li>
<li><a href="#all_cli_--inspecthostport"><code>--inspect[=[host:]port]</code></a>
<ul>
<li><a href="#all_cli_warning-binding-inspector-to-a-public-ipport-combination-is-insecure">Warning: binding inspector to a public IP:port combination is insecure</a></li>
</ul>
</li>
<li><a href="#all_cli_--inspect-publish-uidstderrhttp"><code>--inspect-publish-uid=stderr,http</code></a></li>
<li><a href="#all_cli_--insecure-http-parser"><code>--insecure-http-parser</code></a></li>
<li><a href="#all_cli_--jitless"><code>--jitless</code></a></li>
<li><a href="#all_cli_--max-http-header-sizesize"><code>--max-http-header-size=size</code></a></li>
<li><a href="#all_cli_--napi-modules"><code>--napi-modules</code></a></li>
<li><a href="#all_cli_--no-addons"><code>--no-addons</code></a></li>
<li><a href="#all_cli_--no-deprecation"><code>--no-deprecation</code></a></li>
<li><a href="#all_cli_--no-extra-info-on-fatal-exception"><code>--no-extra-info-on-fatal-exception</code></a></li>
<li><a href="#all_cli_--no-force-async-hooks-checks"><code>--no-force-async-hooks-checks</code></a></li>
<li><a href="#all_cli_--no-global-search-paths"><code>--no-global-search-paths</code></a></li>
<li><a href="#all_cli_--no-warnings"><code>--no-warnings</code></a></li>
<li><a href="#all_cli_--node-memory-debug"><code>--node-memory-debug</code></a></li>
<li><a href="#all_cli_--openssl-configfile"><code>--openssl-config=file</code></a></li>
<li><a href="#all_cli_--openssl-shared-config"><code>--openssl-shared-config</code></a></li>
<li><a href="#all_cli_--openssl-legacy-provider"><code>--openssl-legacy-provider</code></a></li>
<li><a href="#all_cli_--pending-deprecation"><code>--pending-deprecation</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--policy-integritysri"><code>--policy-integrity=sri</code></a></span></li>
<li><a href="#all_cli_--preserve-symlinks"><code>--preserve-symlinks</code></a></li>
<li><a href="#all_cli_--preserve-symlinks-main"><code>--preserve-symlinks-main</code></a></li>
<li><a href="#all_cli_--prof"><code>--prof</code></a></li>
<li><a href="#all_cli_--prof-process"><code>--prof-process</code></a></li>
<li><a href="#all_cli_--redirect-warningsfile"><code>--redirect-warnings=file</code></a></li>
<li><a href="#all_cli_--report-compact"><code>--report-compact</code></a></li>
<li><a href="#all_cli_--report-dirdirectory-report-directorydirectory"><code>--report-dir=directory</code>, <code>report-directory=directory</code></a></li>
<li><a href="#all_cli_--report-filenamefilename"><code>--report-filename=filename</code></a></li>
<li><a href="#all_cli_--report-on-fatalerror"><code>--report-on-fatalerror</code></a></li>
<li><a href="#all_cli_--report-on-signal"><code>--report-on-signal</code></a></li>
<li><a href="#all_cli_--report-signalsignal"><code>--report-signal=signal</code></a></li>
<li><a href="#all_cli_--report-uncaught-exception"><code>--report-uncaught-exception</code></a></li>
<li><a href="#all_cli_--secure-heapn"><code>--secure-heap=n</code></a></li>
<li><a href="#all_cli_--secure-heap-minn"><code>--secure-heap-min=n</code></a></li>
<li><span class="stability_1"><a href="#all_cli_--snapshot-blobpath"><code>--snapshot-blob=path</code></a></span></li>
<li><a href="#all_cli_--test"><code>--test</code></a></li>
<li><a href="#all_cli_--test-only"><code>--test-only</code></a></li>
<li><a href="#all_cli_--throw-deprecation"><code>--throw-deprecation</code></a></li>
<li><a href="#all_cli_--titletitle"><code>--title=title</code></a></li>
<li><a href="#all_cli_--tls-cipher-listlist"><code>--tls-cipher-list=list</code></a></li>
<li><a href="#all_cli_--tls-keylogfile"><code>--tls-keylog=file</code></a></li>
<li><a href="#all_cli_--tls-max-v12"><code>--tls-max-v1.2</code></a></li>
<li><a href="#all_cli_--tls-max-v13"><code>--tls-max-v1.3</code></a></li>
<li><a href="#all_cli_--tls-min-v10"><code>--tls-min-v1.0</code></a></li>
<li><a href="#all_cli_--tls-min-v11"><code>--tls-min-v1.1</code></a></li>
<li><a href="#all_cli_--tls-min-v12"><code>--tls-min-v1.2</code></a></li>
<li><a href="#all_cli_--tls-min-v13"><code>--tls-min-v1.3</code></a></li>
<li><span class="stability_0"><a href="#all_cli_--trace-atomics-wait"><code>--trace-atomics-wait</code></a></span></li>
<li><a href="#all_cli_--trace-deprecation"><code>--trace-deprecation</code></a></li>
<li><a href="#all_cli_--trace-event-categories"><code>--trace-event-categories</code></a></li>
<li><a href="#all_cli_--trace-event-file-pattern"><code>--trace-event-file-pattern</code></a></li>
<li><a href="#all_cli_--trace-events-enabled"><code>--trace-events-enabled</code></a></li>
<li><a href="#all_cli_--trace-exit"><code>--trace-exit</code></a></li>
<li><a href="#all_cli_--trace-sigint"><code>--trace-sigint</code></a></li>
<li><a href="#all_cli_--trace-sync-io"><code>--trace-sync-io</code></a></li>
<li><a href="#all_cli_--trace-tls"><code>--trace-tls</code></a></li>
<li><a href="#all_cli_--trace-uncaught"><code>--trace-uncaught</code></a></li>
<li><a href="#all_cli_--trace-warnings"><code>--trace-warnings</code></a></li>
<li><a href="#all_cli_--track-heap-objects"><code>--track-heap-objects</code></a></li>
<li><a href="#all_cli_--unhandled-rejectionsmode"><code>--unhandled-rejections=mode</code></a></li>
<li><a href="#all_cli_--update-assert-snapshot"><code>--update-assert-snapshot</code></a></li>
<li><a href="#all_cli_--use-bundled-ca---use-openssl-ca"><code>--use-bundled-ca</code>, <code>--use-openssl-ca</code></a></li>
<li><a href="#all_cli_--use-largepagesmode"><code>--use-largepages=mode</code></a></li>
<li><a href="#all_cli_--v8-options"><code>--v8-options</code></a></li>
<li><a href="#all_cli_--v8-pool-sizenum"><code>--v8-pool-size=num</code></a></li>
<li><a href="#all_cli_--zero-fill-buffers"><code>--zero-fill-buffers</code></a></li>
<li><a href="#all_cli_-c---check"><code>-c</code>, <code>--check</code></a></li>
<li><a href="#all_cli_-e---eval-script"><code>-e</code>, <code>--eval "script"</code></a></li>
<li><a href="#all_cli_-h---help"><code>-h</code>, <code>--help</code></a></li>
<li><a href="#all_cli_-i---interactive"><code>-i</code>, <code>--interactive</code></a></li>
<li><a href="#all_cli_-p---print-script"><code>-p</code>, <code>--print "script"</code></a></li>
<li><a href="#all_cli_-r---require-module"><code>-r</code>, <code>--require module</code></a></li>
<li><a href="#all_cli_-v---version"><code>-v</code>, <code>--version</code></a></li>
</ul>
</li>
<li><a href="#all_cli_environment-variables">Environment variables</a>
<ul>
<li><a href="#all_cli_force_color1-2-3"><code>FORCE_COLOR=[1, 2, 3]</code></a></li>
<li><a href="#all_cli_node_debugmodule"><code>NODE_DEBUG=module[,…]</code></a></li>
<li><a href="#all_cli_node_debug_nativemodule"><code>NODE_DEBUG_NATIVE=module[,…]</code></a></li>
<li><a href="#all_cli_node_disable_colors1"><code>NODE_DISABLE_COLORS=1</code></a></li>
<li><a href="#all_cli_node_extra_ca_certsfile"><code>NODE_EXTRA_CA_CERTS=file</code></a></li>
<li><a href="#all_cli_node_icu_datafile"><code>NODE_ICU_DATA=file</code></a></li>
<li><a href="#all_cli_node_no_warnings1"><code>NODE_NO_WARNINGS=1</code></a></li>
<li><a href="#all_cli_node_optionsoptions"><code>NODE_OPTIONS=options...</code></a></li>
<li><a href="#all_cli_node_pathpath"><code>NODE_PATH=path[:…]</code></a></li>
<li><a href="#all_cli_node_pending_deprecation1"><code>NODE_PENDING_DEPRECATION=1</code></a></li>
<li><a href="#all_cli_node_pending_pipe_instancesinstances"><code>NODE_PENDING_PIPE_INSTANCES=instances</code></a></li>
<li><a href="#all_cli_node_preserve_symlinks1"><code>NODE_PRESERVE_SYMLINKS=1</code></a></li>
<li><a href="#all_cli_node_redirect_warningsfile"><code>NODE_REDIRECT_WARNINGS=file</code></a></li>
<li><a href="#all_cli_node_repl_historyfile"><code>NODE_REPL_HISTORY=file</code></a></li>
<li><a href="#all_cli_node_repl_external_modulefile"><code>NODE_REPL_EXTERNAL_MODULE=file</code></a></li>
<li><a href="#all_cli_node_skip_platform_checkvalue"><code>NODE_SKIP_PLATFORM_CHECK=value</code></a></li>
<li><a href="#all_cli_node_tls_reject_unauthorizedvalue"><code>NODE_TLS_REJECT_UNAUTHORIZED=value</code></a></li>
<li><a href="#all_cli_node_v8_coveragedir"><code>NODE_V8_COVERAGE=dir</code></a>
<ul>
<li><a href="#all_cli_coverage-output">Coverage output</a></li>
<li><span class="stability_1"><a href="#all_cli_source-map-cache">Source map cache</a></span></li>
</ul>
</li>
<li><a href="#all_cli_no_colorany"><code>NO_COLOR=&#x3C;any></code></a></li>
<li><a href="#all_cli_openssl_conffile"><code>OPENSSL_CONF=file</code></a></li>
<li><a href="#all_cli_ssl_cert_dirdir"><code>SSL_CERT_DIR=dir</code></a></li>
<li><a href="#all_cli_ssl_cert_filefile"><code>SSL_CERT_FILE=file</code></a></li>
<li><a href="#all_cli_tz"><code>TZ</code></a></li>
<li><a href="#all_cli_uv_threadpool_sizesize"><code>UV_THREADPOOL_SIZE=size</code></a></li>
</ul>
</li>
<li><a href="#all_cli_useful-v8-options">Useful V8 options</a>
<ul>
<li><a href="#all_cli_--max-old-space-sizesize-in-megabytes"><code>--max-old-space-size=SIZE</code> (in megabytes)</a></li>
<li><a href="#all_cli_--max-semi-space-sizesize-in-megabytes"><code>--max-semi-space-size=SIZE</code> (in megabytes)</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_console_console">Console</a></span>
<ul>
<li><a href="#all_console_class-console">Class: <code>Console</code></a>
<ul>
<li><a href="#all_console_new-consolestdout-stderr-ignoreerrors"><code>new Console(stdout[, stderr][, ignoreErrors])</code></a></li>
<li><a href="#all_console_new-consoleoptions"><code>new Console(options)</code></a></li>
<li><a href="#all_console_consoleassertvalue-message"><code>console.assert(value[, ...message])</code></a></li>
<li><a href="#all_console_consoleclear"><code>console.clear()</code></a></li>
<li><a href="#all_console_consolecountlabel"><code>console.count([label])</code></a></li>
<li><a href="#all_console_consolecountresetlabel"><code>console.countReset([label])</code></a></li>
<li><a href="#all_console_consoledebugdata-args"><code>console.debug(data[, ...args])</code></a></li>
<li><a href="#all_console_consoledirobj-options"><code>console.dir(obj[, options])</code></a></li>
<li><a href="#all_console_consoledirxmldata"><code>console.dirxml(...data)</code></a></li>
<li><a href="#all_console_consoleerrordata-args"><code>console.error([data][, ...args])</code></a></li>
<li><a href="#all_console_consolegrouplabel"><code>console.group([...label])</code></a></li>
<li><a href="#all_console_consolegroupcollapsed"><code>console.groupCollapsed()</code></a></li>
<li><a href="#all_console_consolegroupend"><code>console.groupEnd()</code></a></li>
<li><a href="#all_console_consoleinfodata-args"><code>console.info([data][, ...args])</code></a></li>
<li><a href="#all_console_consolelogdata-args"><code>console.log([data][, ...args])</code></a></li>
<li><a href="#all_console_consoletabletabulardata-properties"><code>console.table(tabularData[, properties])</code></a></li>
<li><a href="#all_console_consoletimelabel"><code>console.time([label])</code></a></li>
<li><a href="#all_console_consoletimeendlabel"><code>console.timeEnd([label])</code></a></li>
<li><a href="#all_console_consoletimeloglabel-data"><code>console.timeLog([label][, ...data])</code></a></li>
<li><a href="#all_console_consoletracemessage-args"><code>console.trace([message][, ...args])</code></a></li>
<li><a href="#all_console_consolewarndata-args"><code>console.warn([data][, ...args])</code></a></li>
</ul>
</li>
<li><a href="#all_console_inspector-only-methods">Inspector only methods</a>
<ul>
<li><a href="#all_console_consoleprofilelabel"><code>console.profile([label])</code></a></li>
<li><a href="#all_console_consoleprofileendlabel"><code>console.profileEnd([label])</code></a></li>
<li><a href="#all_console_consoletimestamplabel"><code>console.timeStamp([label])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_corepack_corepack">Corepack</a>
<ul>
<li><a href="#all_corepack_workflows">Workflows</a>
<ul>
<li><a href="#all_corepack_enabling-the-feature">Enabling the feature</a></li>
<li><a href="#all_corepack_configuring-a-package">Configuring a package</a></li>
<li><a href="#all_corepack_upgrading-the-global-versions">Upgrading the global versions</a></li>
<li><a href="#all_corepack_offline-workflow">Offline workflow</a></li>
</ul>
</li>
<li><a href="#all_corepack_supported-package-managers">Supported package managers</a></li>
<li><a href="#all_corepack_common-questions">Common questions</a>
<ul>
<li><a href="#all_corepack_how-does-corepack-interact-with-npm">How does Corepack interact with npm?</a></li>
<li><a href="#all_corepack_running-npm-install--g-yarn-doesnt-work">Running <code>npm install -g yarn</code> doesn't work</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_crypto_crypto">Crypto</a></span>
<ul>
<li><a href="#all_crypto_determining-if-crypto-support-is-unavailable">Determining if crypto support is unavailable</a></li>
<li><a href="#all_crypto_class-certificate">Class: <code>Certificate</code></a>
<ul>
<li><a href="#all_crypto_static-method-certificateexportchallengespkac-encoding">Static method: <code>Certificate.exportChallenge(spkac[, encoding])</code></a></li>
<li><a href="#all_crypto_static-method-certificateexportpublickeyspkac-encoding">Static method: <code>Certificate.exportPublicKey(spkac[, encoding])</code></a></li>
<li><a href="#all_crypto_static-method-certificateverifyspkacspkac-encoding">Static method: <code>Certificate.verifySpkac(spkac[, encoding])</code></a></li>
<li><span class="stability_0"><a href="#all_crypto_legacy-api">Legacy API</a></span>
<ul>
<li><a href="#all_crypto_new-cryptocertificate"><code>new crypto.Certificate()</code></a></li>
<li><a href="#all_crypto_certificateexportchallengespkac-encoding"><code>certificate.exportChallenge(spkac[, encoding])</code></a></li>
<li><a href="#all_crypto_certificateexportpublickeyspkac-encoding"><code>certificate.exportPublicKey(spkac[, encoding])</code></a></li>
<li><a href="#all_crypto_certificateverifyspkacspkac-encoding"><code>certificate.verifySpkac(spkac[, encoding])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_crypto_class-cipher">Class: <code>Cipher</code></a>
<ul>
<li><a href="#all_crypto_cipherfinaloutputencoding"><code>cipher.final([outputEncoding])</code></a></li>
<li><a href="#all_crypto_ciphergetauthtag"><code>cipher.getAuthTag()</code></a></li>
<li><a href="#all_crypto_ciphersetaadbuffer-options"><code>cipher.setAAD(buffer[, options])</code></a></li>
<li><a href="#all_crypto_ciphersetautopaddingautopadding"><code>cipher.setAutoPadding([autoPadding])</code></a></li>
<li><a href="#all_crypto_cipherupdatedata-inputencoding-outputencoding"><code>cipher.update(data[, inputEncoding][, outputEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-decipher">Class: <code>Decipher</code></a>
<ul>
<li><a href="#all_crypto_decipherfinaloutputencoding"><code>decipher.final([outputEncoding])</code></a></li>
<li><a href="#all_crypto_deciphersetaadbuffer-options"><code>decipher.setAAD(buffer[, options])</code></a></li>
<li><a href="#all_crypto_deciphersetauthtagbuffer-encoding"><code>decipher.setAuthTag(buffer[, encoding])</code></a></li>
<li><a href="#all_crypto_deciphersetautopaddingautopadding"><code>decipher.setAutoPadding([autoPadding])</code></a></li>
<li><a href="#all_crypto_decipherupdatedata-inputencoding-outputencoding"><code>decipher.update(data[, inputEncoding][, outputEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-diffiehellman">Class: <code>DiffieHellman</code></a>
<ul>
<li><a href="#all_crypto_diffiehellmancomputesecretotherpublickey-inputencoding-outputencoding"><code>diffieHellman.computeSecret(otherPublicKey[, inputEncoding][, outputEncoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmangeneratekeysencoding"><code>diffieHellman.generateKeys([encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmangetgeneratorencoding"><code>diffieHellman.getGenerator([encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmangetprimeencoding"><code>diffieHellman.getPrime([encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmangetprivatekeyencoding"><code>diffieHellman.getPrivateKey([encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmangetpublickeyencoding"><code>diffieHellman.getPublicKey([encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmansetprivatekeyprivatekey-encoding"><code>diffieHellman.setPrivateKey(privateKey[, encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmansetpublickeypublickey-encoding"><code>diffieHellman.setPublicKey(publicKey[, encoding])</code></a></li>
<li><a href="#all_crypto_diffiehellmanverifyerror"><code>diffieHellman.verifyError</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-diffiehellmangroup">Class: <code>DiffieHellmanGroup</code></a></li>
<li><a href="#all_crypto_class-ecdh">Class: <code>ECDH</code></a>
<ul>
<li><a href="#all_crypto_static-method-ecdhconvertkeykey-curve-inputencoding-outputencoding-format">Static method: <code>ECDH.convertKey(key, curve[, inputEncoding[, outputEncoding[, format]]])</code></a></li>
<li><a href="#all_crypto_ecdhcomputesecretotherpublickey-inputencoding-outputencoding"><code>ecdh.computeSecret(otherPublicKey[, inputEncoding][, outputEncoding])</code></a></li>
<li><a href="#all_crypto_ecdhgeneratekeysencoding-format"><code>ecdh.generateKeys([encoding[, format]])</code></a></li>
<li><a href="#all_crypto_ecdhgetprivatekeyencoding"><code>ecdh.getPrivateKey([encoding])</code></a></li>
<li><a href="#all_crypto_ecdhgetpublickeyencoding-format"><code>ecdh.getPublicKey([encoding][, format])</code></a></li>
<li><a href="#all_crypto_ecdhsetprivatekeyprivatekey-encoding"><code>ecdh.setPrivateKey(privateKey[, encoding])</code></a></li>
<li><span class="stability_0"><a href="#all_crypto_ecdhsetpublickeypublickey-encoding"><code>ecdh.setPublicKey(publicKey[, encoding])</code></a></span></li>
</ul>
</li>
<li><a href="#all_crypto_class-hash">Class: <code>Hash</code></a>
<ul>
<li><a href="#all_crypto_hashcopyoptions"><code>hash.copy([options])</code></a></li>
<li><a href="#all_crypto_hashdigestencoding"><code>hash.digest([encoding])</code></a></li>
<li><a href="#all_crypto_hashupdatedata-inputencoding"><code>hash.update(data[, inputEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-hmac">Class: <code>Hmac</code></a>
<ul>
<li><a href="#all_crypto_hmacdigestencoding"><code>hmac.digest([encoding])</code></a></li>
<li><a href="#all_crypto_hmacupdatedata-inputencoding"><code>hmac.update(data[, inputEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-keyobject">Class: <code>KeyObject</code></a>
<ul>
<li><a href="#all_crypto_static-method-keyobjectfromkey">Static method: <code>KeyObject.from(key)</code></a></li>
<li><a href="#all_crypto_keyobjectasymmetrickeydetails"><code>keyObject.asymmetricKeyDetails</code></a></li>
<li><a href="#all_crypto_keyobjectasymmetrickeytype"><code>keyObject.asymmetricKeyType</code></a></li>
<li><a href="#all_crypto_keyobjectexportoptions"><code>keyObject.export([options])</code></a></li>
<li><a href="#all_crypto_keyobjectequalsotherkeyobject"><code>keyObject.equals(otherKeyObject)</code></a></li>
<li><a href="#all_crypto_keyobjectsymmetrickeysize"><code>keyObject.symmetricKeySize</code></a></li>
<li><a href="#all_crypto_keyobjecttype"><code>keyObject.type</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-sign">Class: <code>Sign</code></a>
<ul>
<li><a href="#all_crypto_signsignprivatekey-outputencoding"><code>sign.sign(privateKey[, outputEncoding])</code></a></li>
<li><a href="#all_crypto_signupdatedata-inputencoding"><code>sign.update(data[, inputEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-verify">Class: <code>Verify</code></a>
<ul>
<li><a href="#all_crypto_verifyupdatedata-inputencoding"><code>verify.update(data[, inputEncoding])</code></a></li>
<li><a href="#all_crypto_verifyverifyobject-signature-signatureencoding"><code>verify.verify(object, signature[, signatureEncoding])</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_class-x509certificate">Class: <code>X509Certificate</code></a>
<ul>
<li><a href="#all_crypto_new-x509certificatebuffer"><code>new X509Certificate(buffer)</code></a></li>
<li><a href="#all_crypto_x509ca"><code>x509.ca</code></a></li>
<li><a href="#all_crypto_x509checkemailemail-options"><code>x509.checkEmail(email[, options])</code></a></li>
<li><a href="#all_crypto_x509checkhostname-options"><code>x509.checkHost(name[, options])</code></a></li>
<li><a href="#all_crypto_x509checkipip"><code>x509.checkIP(ip)</code></a></li>
<li><a href="#all_crypto_x509checkissuedothercert"><code>x509.checkIssued(otherCert)</code></a></li>
<li><a href="#all_crypto_x509checkprivatekeyprivatekey"><code>x509.checkPrivateKey(privateKey)</code></a></li>
<li><a href="#all_crypto_x509fingerprint"><code>x509.fingerprint</code></a></li>
<li><a href="#all_crypto_x509fingerprint256"><code>x509.fingerprint256</code></a></li>
<li><a href="#all_crypto_x509fingerprint512"><code>x509.fingerprint512</code></a></li>
<li><a href="#all_crypto_x509infoaccess"><code>x509.infoAccess</code></a></li>
<li><a href="#all_crypto_x509issuer"><code>x509.issuer</code></a></li>
<li><a href="#all_crypto_x509issuercertificate"><code>x509.issuerCertificate</code></a></li>
<li><a href="#all_crypto_x509keyusage"><code>x509.keyUsage</code></a></li>
<li><a href="#all_crypto_x509publickey"><code>x509.publicKey</code></a></li>
<li><a href="#all_crypto_x509raw"><code>x509.raw</code></a></li>
<li><a href="#all_crypto_x509serialnumber"><code>x509.serialNumber</code></a></li>
<li><a href="#all_crypto_x509subject"><code>x509.subject</code></a></li>
<li><a href="#all_crypto_x509subjectaltname"><code>x509.subjectAltName</code></a></li>
<li><a href="#all_crypto_x509tojson"><code>x509.toJSON()</code></a></li>
<li><a href="#all_crypto_x509tolegacyobject"><code>x509.toLegacyObject()</code></a></li>
<li><a href="#all_crypto_x509tostring"><code>x509.toString()</code></a></li>
<li><a href="#all_crypto_x509validfrom"><code>x509.validFrom</code></a></li>
<li><a href="#all_crypto_x509validto"><code>x509.validTo</code></a></li>
<li><a href="#all_crypto_x509verifypublickey"><code>x509.verify(publicKey)</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_nodecrypto-module-methods-and-properties"><code>node:crypto</code> module methods and properties</a>
<ul>
<li><a href="#all_crypto_cryptoconstants"><code>crypto.constants</code></a></li>
<li><span class="stability_0"><a href="#all_crypto_cryptodefault_encoding"><code>crypto.DEFAULT_ENCODING</code></a></span></li>
<li><span class="stability_0"><a href="#all_crypto_cryptofips"><code>crypto.fips</code></a></span></li>
<li><a href="#all_crypto_cryptocheckprimecandidate-options-callback"><code>crypto.checkPrime(candidate[, options], callback)</code></a></li>
<li><a href="#all_crypto_cryptocheckprimesynccandidate-options"><code>crypto.checkPrimeSync(candidate[, options])</code></a></li>
<li><span class="stability_0"><a href="#all_crypto_cryptocreatecipheralgorithm-password-options"><code>crypto.createCipher(algorithm, password[, options])</code></a></span></li>
<li><a href="#all_crypto_cryptocreatecipherivalgorithm-key-iv-options"><code>crypto.createCipheriv(algorithm, key, iv[, options])</code></a></li>
<li><span class="stability_0"><a href="#all_crypto_cryptocreatedecipheralgorithm-password-options"><code>crypto.createDecipher(algorithm, password[, options])</code></a></span></li>
<li><a href="#all_crypto_cryptocreatedecipherivalgorithm-key-iv-options"><code>crypto.createDecipheriv(algorithm, key, iv[, options])</code></a></li>
<li><a href="#all_crypto_cryptocreatediffiehellmanprime-primeencoding-generator-generatorencoding"><code>crypto.createDiffieHellman(prime[, primeEncoding][, generator][, generatorEncoding])</code></a></li>
<li><a href="#all_crypto_cryptocreatediffiehellmanprimelength-generator"><code>crypto.createDiffieHellman(primeLength[, generator])</code></a></li>
<li><a href="#all_crypto_cryptocreatediffiehellmangroupname"><code>crypto.createDiffieHellmanGroup(name)</code></a></li>
<li><a href="#all_crypto_cryptocreateecdhcurvename"><code>crypto.createECDH(curveName)</code></a></li>
<li><a href="#all_crypto_cryptocreatehashalgorithm-options"><code>crypto.createHash(algorithm[, options])</code></a></li>
<li><a href="#all_crypto_cryptocreatehmacalgorithm-key-options"><code>crypto.createHmac(algorithm, key[, options])</code></a></li>
<li><a href="#all_crypto_cryptocreateprivatekeykey"><code>crypto.createPrivateKey(key)</code></a></li>
<li><a href="#all_crypto_cryptocreatepublickeykey"><code>crypto.createPublicKey(key)</code></a></li>
<li><a href="#all_crypto_cryptocreatesecretkeykey-encoding"><code>crypto.createSecretKey(key[, encoding])</code></a></li>
<li><a href="#all_crypto_cryptocreatesignalgorithm-options"><code>crypto.createSign(algorithm[, options])</code></a></li>
<li><a href="#all_crypto_cryptocreateverifyalgorithm-options"><code>crypto.createVerify(algorithm[, options])</code></a></li>
<li><a href="#all_crypto_cryptodiffiehellmanoptions"><code>crypto.diffieHellman(options)</code></a></li>
<li><a href="#all_crypto_cryptogeneratekeytype-options-callback"><code>crypto.generateKey(type, options, callback)</code></a></li>
<li><a href="#all_crypto_cryptogeneratekeypairtype-options-callback"><code>crypto.generateKeyPair(type, options, callback)</code></a></li>
<li><a href="#all_crypto_cryptogeneratekeypairsynctype-options"><code>crypto.generateKeyPairSync(type, options)</code></a></li>
<li><a href="#all_crypto_cryptogeneratekeysynctype-options"><code>crypto.generateKeySync(type, options)</code></a></li>
<li><a href="#all_crypto_cryptogenerateprimesize-options-callback"><code>crypto.generatePrime(size[, options[, callback]])</code></a></li>
<li><a href="#all_crypto_cryptogenerateprimesyncsize-options"><code>crypto.generatePrimeSync(size[, options])</code></a></li>
<li><a href="#all_crypto_cryptogetcipherinfonameornid-options"><code>crypto.getCipherInfo(nameOrNid[, options])</code></a></li>
<li><a href="#all_crypto_cryptogetciphers"><code>crypto.getCiphers()</code></a></li>
<li><a href="#all_crypto_cryptogetcurves"><code>crypto.getCurves()</code></a></li>
<li><a href="#all_crypto_cryptogetdiffiehellmangroupname"><code>crypto.getDiffieHellman(groupName)</code></a></li>
<li><a href="#all_crypto_cryptogetfips"><code>crypto.getFips()</code></a></li>
<li><a href="#all_crypto_cryptogethashes"><code>crypto.getHashes()</code></a></li>
<li><a href="#all_crypto_cryptogetrandomvaluestypedarray"><code>crypto.getRandomValues(typedArray)</code></a></li>
<li><a href="#all_crypto_cryptohkdfdigest-ikm-salt-info-keylen-callback"><code>crypto.hkdf(digest, ikm, salt, info, keylen, callback)</code></a></li>
<li><a href="#all_crypto_cryptohkdfsyncdigest-ikm-salt-info-keylen"><code>crypto.hkdfSync(digest, ikm, salt, info, keylen)</code></a></li>
<li><a href="#all_crypto_cryptopbkdf2password-salt-iterations-keylen-digest-callback"><code>crypto.pbkdf2(password, salt, iterations, keylen, digest, callback)</code></a></li>
<li><a href="#all_crypto_cryptopbkdf2syncpassword-salt-iterations-keylen-digest"><code>crypto.pbkdf2Sync(password, salt, iterations, keylen, digest)</code></a></li>
<li><a href="#all_crypto_cryptoprivatedecryptprivatekey-buffer"><code>crypto.privateDecrypt(privateKey, buffer)</code></a></li>
<li><a href="#all_crypto_cryptoprivateencryptprivatekey-buffer"><code>crypto.privateEncrypt(privateKey, buffer)</code></a></li>
<li><a href="#all_crypto_cryptopublicdecryptkey-buffer"><code>crypto.publicDecrypt(key, buffer)</code></a></li>
<li><a href="#all_crypto_cryptopublicencryptkey-buffer"><code>crypto.publicEncrypt(key, buffer)</code></a></li>
<li><a href="#all_crypto_cryptorandombytessize-callback"><code>crypto.randomBytes(size[, callback])</code></a></li>
<li><a href="#all_crypto_cryptorandomfillsyncbuffer-offset-size"><code>crypto.randomFillSync(buffer[, offset][, size])</code></a></li>
<li><a href="#all_crypto_cryptorandomfillbuffer-offset-size-callback"><code>crypto.randomFill(buffer[, offset][, size], callback)</code></a></li>
<li><a href="#all_crypto_cryptorandomintmin-max-callback"><code>crypto.randomInt([min, ]max[, callback])</code></a></li>
<li><a href="#all_crypto_cryptorandomuuidoptions"><code>crypto.randomUUID([options])</code></a></li>
<li><a href="#all_crypto_cryptoscryptpassword-salt-keylen-options-callback"><code>crypto.scrypt(password, salt, keylen[, options], callback)</code></a></li>
<li><a href="#all_crypto_cryptoscryptsyncpassword-salt-keylen-options"><code>crypto.scryptSync(password, salt, keylen[, options])</code></a></li>
<li><a href="#all_crypto_cryptosecureheapused"><code>crypto.secureHeapUsed()</code></a></li>
<li><a href="#all_crypto_cryptosetengineengine-flags"><code>crypto.setEngine(engine[, flags])</code></a></li>
<li><a href="#all_crypto_cryptosetfipsbool"><code>crypto.setFips(bool)</code></a></li>
<li><a href="#all_crypto_cryptosignalgorithm-data-key-callback"><code>crypto.sign(algorithm, data, key[, callback])</code></a></li>
<li><a href="#all_crypto_cryptosubtle"><code>crypto.subtle</code></a></li>
<li><a href="#all_crypto_cryptotimingsafeequala-b"><code>crypto.timingSafeEqual(a, b)</code></a></li>
<li><a href="#all_crypto_cryptoverifyalgorithm-data-key-signature-callback"><code>crypto.verify(algorithm, data, key, signature[, callback])</code></a></li>
<li><a href="#all_crypto_cryptowebcrypto"><code>crypto.webcrypto</code></a></li>
</ul>
</li>
<li><a href="#all_crypto_notes">Notes</a>
<ul>
<li><a href="#all_crypto_using-strings-as-inputs-to-cryptographic-apis">Using strings as inputs to cryptographic APIs</a></li>
<li><a href="#all_crypto_legacy-streams-api-prior-to-nodejs-010">Legacy streams API (prior to Node.js 0.10)</a></li>
<li><a href="#all_crypto_support-for-weak-or-compromised-algorithms">Support for weak or compromised algorithms</a></li>
<li><a href="#all_crypto_ccm-mode">CCM mode</a></li>
</ul>
</li>
<li><a href="#all_crypto_crypto-constants">Crypto constants</a>
<ul>
<li><a href="#all_crypto_openssl-options">OpenSSL options</a></li>
<li><a href="#all_crypto_openssl-engine-constants">OpenSSL engine constants</a></li>
<li><a href="#all_crypto_other-openssl-constants">Other OpenSSL constants</a></li>
<li><a href="#all_crypto_nodejs-crypto-constants">Node.js crypto constants</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_debugger_debugger">Debugger</a></span>
<ul>
<li><a href="#all_debugger_watchers">Watchers</a></li>
<li><a href="#all_debugger_command-reference">Command reference</a>
<ul>
<li><a href="#all_debugger_stepping">Stepping</a></li>
<li><a href="#all_debugger_breakpoints">Breakpoints</a></li>
<li><a href="#all_debugger_information">Information</a></li>
<li><a href="#all_debugger_execution-control">Execution control</a></li>
<li><a href="#all_debugger_various">Various</a></li>
</ul>
</li>
<li><a href="#all_debugger_advanced-usage">Advanced usage</a>
<ul>
<li><a href="#all_debugger_v8-inspector-integration-for-nodejs">V8 inspector integration for Node.js</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_deprecations_deprecated-apis">Deprecated APIs</a>
<ul>
<li><a href="#all_deprecations_revoking-deprecations">Revoking deprecations</a></li>
<li><a href="#all_deprecations_list-of-deprecated-apis">List of deprecated APIs</a>
<ul>
<li><a href="#DEP0001">DEP0001: <code>http.OutgoingMessage.prototype.flush</code></a></li>
<li><a href="#DEP0002">DEP0002: <code>require('_linklist')</code></a></li>
<li><a href="#DEP0003">DEP0003: <code>_writableState.buffer</code></a></li>
<li><a href="#DEP0004">DEP0004: <code>CryptoStream.prototype.readyState</code></a></li>
<li><a href="#DEP0005">DEP0005: <code>Buffer()</code> constructor</a></li>
<li><a href="#DEP0006">DEP0006: <code>child_process</code> <code>options.customFds</code></a></li>
<li><a href="#DEP0007">DEP0007: Replace <code>cluster</code> <code>worker.suicide</code> with <code>worker.exitedAfterDisconnect</code></a></li>
<li><a href="#DEP0008">DEP0008: <code>require('node:constants')</code></a></li>
<li><a href="#DEP0009">DEP0009: <code>crypto.pbkdf2</code> without digest</a></li>
<li><a href="#DEP0010">DEP0010: <code>crypto.createCredentials</code></a></li>
<li><a href="#DEP0011">DEP0011: <code>crypto.Credentials</code></a></li>
<li><a href="#DEP0012">DEP0012: <code>Domain.dispose</code></a></li>
<li><a href="#DEP0013">DEP0013: <code>fs</code> asynchronous function without callback</a></li>
<li><a href="#DEP0014">DEP0014: <code>fs.read</code> legacy String interface</a></li>
<li><a href="#DEP0015">DEP0015: <code>fs.readSync</code> legacy String interface</a></li>
<li><a href="#DEP0016">DEP0016: <code>GLOBAL</code>/<code>root</code></a></li>
<li><a href="#DEP0017">DEP0017: <code>Intl.v8BreakIterator</code></a></li>
<li><a href="#DEP0018">DEP0018: Unhandled promise rejections</a></li>
<li><a href="#DEP0019">DEP0019: <code>require('.')</code> resolved outside directory</a></li>
<li><a href="#DEP0020">DEP0020: <code>Server.connections</code></a></li>
<li><a href="#DEP0021">DEP0021: <code>Server.listenFD</code></a></li>
<li><a href="#DEP0022">DEP0022: <code>os.tmpDir()</code></a></li>
<li><a href="#DEP0023">DEP0023: <code>os.getNetworkInterfaces()</code></a></li>
<li><a href="#DEP0024">DEP0024: <code>REPLServer.prototype.convertToContext()</code></a></li>
<li><a href="#DEP0025">DEP0025: <code>require('node:sys')</code></a></li>
<li><a href="#DEP0026">DEP0026: <code>util.print()</code></a></li>
<li><a href="#DEP0027">DEP0027: <code>util.puts()</code></a></li>
<li><a href="#DEP0028">DEP0028: <code>util.debug()</code></a></li>
<li><a href="#DEP0029">DEP0029: <code>util.error()</code></a></li>
<li><a href="#DEP0030">DEP0030: <code>SlowBuffer</code></a></li>
<li><a href="#DEP0031">DEP0031: <code>ecdh.setPublicKey()</code></a></li>
<li><a href="#DEP0032">DEP0032: <code>node:domain</code> module</a></li>
<li><a href="#DEP0033">DEP0033: <code>EventEmitter.listenerCount()</code></a></li>
<li><a href="#DEP0034">DEP0034: <code>fs.exists(path, callback)</code></a></li>
<li><a href="#DEP0035">DEP0035: <code>fs.lchmod(path, mode, callback)</code></a></li>
<li><a href="#DEP0036">DEP0036: <code>fs.lchmodSync(path, mode)</code></a></li>
<li><a href="#DEP0037">DEP0037: <code>fs.lchown(path, uid, gid, callback)</code></a></li>
<li><a href="#DEP0038">DEP0038: <code>fs.lchownSync(path, uid, gid)</code></a></li>
<li><a href="#DEP0039">DEP0039: <code>require.extensions</code></a></li>
<li><a href="#DEP0040">DEP0040: <code>node:punycode</code> module</a></li>
<li><a href="#DEP0041">DEP0041: <code>NODE_REPL_HISTORY_FILE</code> environment variable</a></li>
<li><a href="#DEP0042">DEP0042: <code>tls.CryptoStream</code></a></li>
<li><a href="#DEP0043">DEP0043: <code>tls.SecurePair</code></a></li>
<li><a href="#DEP0044">DEP0044: <code>util.isArray()</code></a></li>
<li><a href="#DEP0045">DEP0045: <code>util.isBoolean()</code></a></li>
<li><a href="#DEP0046">DEP0046: <code>util.isBuffer()</code></a></li>
<li><a href="#DEP0047">DEP0047: <code>util.isDate()</code></a></li>
<li><a href="#DEP0048">DEP0048: <code>util.isError()</code></a></li>
<li><a href="#DEP0049">DEP0049: <code>util.isFunction()</code></a></li>
<li><a href="#DEP0050">DEP0050: <code>util.isNull()</code></a></li>
<li><a href="#DEP0051">DEP0051: <code>util.isNullOrUndefined()</code></a></li>
<li><a href="#DEP0052">DEP0052: <code>util.isNumber()</code></a></li>
<li><a href="#DEP0053">DEP0053: <code>util.isObject()</code></a></li>
<li><a href="#DEP0054">DEP0054: <code>util.isPrimitive()</code></a></li>
<li><a href="#DEP0055">DEP0055: <code>util.isRegExp()</code></a></li>
<li><a href="#DEP0056">DEP0056: <code>util.isString()</code></a></li>
<li><a href="#DEP0057">DEP0057: <code>util.isSymbol()</code></a></li>
<li><a href="#DEP0058">DEP0058: <code>util.isUndefined()</code></a></li>
<li><a href="#DEP0059">DEP0059: <code>util.log()</code></a></li>
<li><a href="#DEP0060">DEP0060: <code>util._extend()</code></a></li>
<li><a href="#DEP0061">DEP0061: <code>fs.SyncWriteStream</code></a></li>
<li><a href="#DEP0062">DEP0062: <code>node --debug</code></a></li>
<li><a href="#DEP0063">DEP0063: <code>ServerResponse.prototype.writeHeader()</code></a></li>
<li><a href="#DEP0064">DEP0064: <code>tls.createSecurePair()</code></a></li>
<li><a href="#DEP0065">DEP0065: <code>repl.REPL_MODE_MAGIC</code> and <code>NODE_REPL_MODE=magic</code></a></li>
<li><a href="#DEP0066">DEP0066: <code>OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames</code></a></li>
<li><a href="#DEP0067">DEP0067: <code>OutgoingMessage.prototype._renderHeaders</code></a></li>
<li><a href="#DEP0068">DEP0068: <code>node debug</code></a></li>
<li><a href="#DEP0069">DEP0069: <code>vm.runInDebugContext(string)</code></a></li>
<li><a href="#DEP0070">DEP0070: <code>async_hooks.currentId()</code></a></li>
<li><a href="#DEP0071">DEP0071: <code>async_hooks.triggerId()</code></a></li>
<li><a href="#DEP0072">DEP0072: <code>async_hooks.AsyncResource.triggerId()</code></a></li>
<li><a href="#DEP0073">DEP0073: Several internal properties of <code>net.Server</code></a></li>
<li><a href="#DEP0074">DEP0074: <code>REPLServer.bufferedCommand</code></a></li>
<li><a href="#DEP0075">DEP0075: <code>REPLServer.parseREPLKeyword()</code></a></li>
<li><a href="#DEP0076">DEP0076: <code>tls.parseCertString()</code></a></li>
<li><a href="#DEP0077">DEP0077: <code>Module._debug()</code></a></li>
<li><a href="#DEP0078">DEP0078: <code>REPLServer.turnOffEditorMode()</code></a></li>
<li><a href="#DEP0079">DEP0079: Custom inspection function on objects via <code>.inspect()</code></a></li>
<li><a href="#DEP0080">DEP0080: <code>path._makeLong()</code></a></li>
<li><a href="#DEP0081">DEP0081: <code>fs.truncate()</code> using a file descriptor</a></li>
<li><a href="#DEP0082">DEP0082: <code>REPLServer.prototype.memory()</code></a></li>
<li><a href="#DEP0083">DEP0083: Disabling ECDH by setting <code>ecdhCurve</code> to <code>false</code></a></li>
<li><a href="#DEP0084">DEP0084: requiring bundled internal dependencies</a></li>
<li><a href="#DEP0085">DEP0085: AsyncHooks sensitive API</a></li>
<li><a href="#DEP0086">DEP0086: Remove <code>runInAsyncIdScope</code></a></li>
<li><a href="#DEP0089">DEP0089: <code>require('node:assert')</code></a></li>
<li><a href="#DEP0090">DEP0090: Invalid GCM authentication tag lengths</a></li>
<li><a href="#DEP0091">DEP0091: <code>crypto.DEFAULT_ENCODING</code></a></li>
<li><a href="#DEP0092">DEP0092: Top-level <code>this</code> bound to <code>module.exports</code></a></li>
<li><a href="#DEP0093">DEP0093: <code>crypto.fips</code> is deprecated and replaced</a></li>
<li><a href="#DEP0094">DEP0094: Using <code>assert.fail()</code> with more than one argument</a></li>
<li><a href="#DEP0095">DEP0095: <code>timers.enroll()</code></a></li>
<li><a href="#DEP0096">DEP0096: <code>timers.unenroll()</code></a></li>
<li><a href="#DEP0097">DEP0097: <code>MakeCallback</code> with <code>domain</code> property</a></li>
<li><a href="#DEP0098">DEP0098: AsyncHooks embedder <code>AsyncResource.emitBefore</code> and <code>AsyncResource.emitAfter</code> APIs</a></li>
<li><a href="#DEP0099">DEP0099: Async context-unaware <code>node::MakeCallback</code> C++ APIs</a></li>
<li><a href="#DEP0100">DEP0100: <code>process.assert()</code></a></li>
<li><a href="#DEP0101">DEP0101: <code>--with-lttng</code></a></li>
<li><a href="#DEP0102">DEP0102: Using <code>noAssert</code> in <code>Buffer#(read|write)</code> operations</a></li>
<li><a href="#DEP0103">DEP0103: <code>process.binding('util').is[...]</code> typechecks</a></li>
<li><a href="#DEP0104">DEP0104: <code>process.env</code> string coercion</a></li>
<li><a href="#DEP0105">DEP0105: <code>decipher.finaltol</code></a></li>
<li><a href="#DEP0106">DEP0106: <code>crypto.createCipher</code> and <code>crypto.createDecipher</code></a></li>
<li><a href="#DEP0107">DEP0107: <code>tls.convertNPNProtocols()</code></a></li>
<li><a href="#DEP0108">DEP0108: <code>zlib.bytesRead</code></a></li>
<li><a href="#DEP0109">DEP0109: <code>http</code>, <code>https</code>, and <code>tls</code> support for invalid URLs</a></li>
<li><a href="#DEP0110">DEP0110: <code>vm.Script</code> cached data</a></li>
<li><a href="#DEP0111">DEP0111: <code>process.binding()</code></a></li>
<li><a href="#DEP0112">DEP0112: <code>dgram</code> private APIs</a></li>
<li><a href="#DEP0113">DEP0113: <code>Cipher.setAuthTag()</code>, <code>Decipher.getAuthTag()</code></a></li>
<li><a href="#DEP0114">DEP0114: <code>crypto._toBuf()</code></a></li>
<li><a href="#DEP0115">DEP0115: <code>crypto.prng()</code>, <code>crypto.pseudoRandomBytes()</code>, <code>crypto.rng()</code></a></li>
<li><a href="#DEP0116">DEP0116: Legacy URL API</a></li>
<li><a href="#DEP0117">DEP0117: Native crypto handles</a></li>
<li><a href="#DEP0118">DEP0118: <code>dns.lookup()</code> support for a falsy host name</a></li>
<li><a href="#DEP0119">DEP0119: <code>process.binding('uv').errname()</code> private API</a></li>
<li><a href="#DEP0120">DEP0120: Windows Performance Counter support</a></li>
<li><a href="#DEP0121">DEP0121: <code>net._setSimultaneousAccepts()</code></a></li>
<li><a href="#DEP0122">DEP0122: <code>tls</code> <code>Server.prototype.setOptions()</code></a></li>
<li><a href="#DEP0123">DEP0123: setting the TLS ServerName to an IP address</a></li>
<li><a href="#DEP0124">DEP0124: using <code>REPLServer.rli</code></a></li>
<li><a href="#DEP0125">DEP0125: <code>require('node:_stream_wrap')</code></a></li>
<li><a href="#DEP0126">DEP0126: <code>timers.active()</code></a></li>
<li><a href="#DEP0127">DEP0127: <code>timers._unrefActive()</code></a></li>
<li><a href="#DEP0128">DEP0128: modules with an invalid <code>main</code> entry and an <code>index.js</code> file</a></li>
<li><a href="#DEP0129">DEP0129: <code>ChildProcess._channel</code></a></li>
<li><a href="#DEP0130">DEP0130: <code>Module.createRequireFromPath()</code></a></li>
<li><a href="#DEP0131">DEP0131: Legacy HTTP parser</a></li>
<li><a href="#DEP0132">DEP0132: <code>worker.terminate()</code> with callback</a></li>
<li><a href="#DEP0133">DEP0133: <code>http</code> <code>connection</code></a></li>
<li><a href="#DEP0134">DEP0134: <code>process._tickCallback</code></a></li>
<li><a href="#DEP0135">DEP0135: <code>WriteStream.open()</code> and <code>ReadStream.open()</code> are internal</a></li>
<li><a href="#DEP0136">DEP0136: <code>http</code> <code>finished</code></a></li>
<li><a href="#DEP0137">DEP0137: Closing fs.FileHandle on garbage collection</a></li>
<li><a href="#DEP0138">DEP0138: <code>process.mainModule</code></a></li>
<li><a href="#DEP0139">DEP0139: <code>process.umask()</code> with no arguments</a></li>
<li><a href="#DEP0140">DEP0140: Use <code>request.destroy()</code> instead of <code>request.abort()</code></a></li>
<li><a href="#DEP0141">DEP0141: <code>repl.inputStream</code> and <code>repl.outputStream</code></a></li>
<li><a href="#DEP0142">DEP0142: <code>repl._builtinLibs</code></a></li>
<li><a href="#DEP0143">DEP0143: <code>Transform._transformState</code></a></li>
<li><a href="#DEP0144">DEP0144: <code>module.parent</code></a></li>
<li><a href="#DEP0145">DEP0145: <code>socket.bufferSize</code></a></li>
<li><a href="#DEP0146">DEP0146: <code>new crypto.Certificate()</code></a></li>
<li><a href="#DEP0147">DEP0147: <code>fs.rmdir(path, { recursive: true })</code></a></li>
<li><a href="#DEP0148">DEP0148: Folder mappings in <code>"exports"</code> (trailing <code>"/"</code>)</a></li>
<li><a href="#DEP0149">DEP0149: <code>http.IncomingMessage#connection</code></a></li>
<li><a href="#DEP0150">DEP0150: Changing the value of <code>process.config</code></a></li>
<li><a href="#DEP0151">DEP0151: Main index lookup and extension searching</a></li>
<li><a href="#DEP0152">DEP0152: Extension PerformanceEntry properties</a></li>
<li><a href="#DEP0153">DEP0153: <code>dns.lookup</code> and <code>dnsPromises.lookup</code> options type coercion</a></li>
<li><a href="#DEP0154">DEP0154: RSA-PSS generate key pair options</a></li>
<li><a href="#DEP0155">DEP0155: Trailing slashes in pattern specifier resolutions</a></li>
<li><a href="#DEP0156">DEP0156: <code>.aborted</code> property and <code>'abort'</code>, <code>'aborted'</code> event in <code>http</code></a></li>
<li><a href="#DEP0157">DEP0157: Thenable support in streams</a></li>
<li><a href="#DEP0158">DEP0158: <code>buffer.slice(start, end)</code></a></li>
<li><a href="#DEP0159">DEP0159: <code>ERR_INVALID_CALLBACK</code></a></li>
<li><a href="#DEP0160">DEP0160: <code>process.on('multipleResolves', handler)</code></a></li>
<li><a href="#DEP0161">DEP0161: <code>process._getActiveRequests()</code> and <code>process._getActiveHandles()</code></a></li>
<li><a href="#DEP0162">DEP0162: <code>fs.write()</code>, <code>fs.writeFileSync()</code> coercion to string</a></li>
<li><a href="#DEP0163">DEP0163: <code>channel.subscribe(onMessage)</code>, <code>channel.unsubscribe(onMessage)</code></a></li>
<li><a href="#DEP0164">DEP0164: <code>process.exit([code])</code> coercion to integer</a></li>
<li><a href="#DEP0165">DEP0165: <code>--trace-atomics-wait</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_diagnostics_channel_diagnostics-channel">Diagnostics Channel</a></span>
<ul>
<li><a href="#all_diagnostics_channel_public-api">Public API</a>
<ul>
<li><a href="#all_diagnostics_channel_overview">Overview</a>
<ul>
<li><a href="#all_diagnostics_channel_diagnostics_channelhassubscribersname"><code>diagnostics_channel.hasSubscribers(name)</code></a></li>
<li><a href="#all_diagnostics_channel_diagnostics_channelchannelname"><code>diagnostics_channel.channel(name)</code></a></li>
<li><a href="#all_diagnostics_channel_diagnostics_channelsubscribename-onmessage"><code>diagnostics_channel.subscribe(name, onMessage)</code></a></li>
<li><a href="#all_diagnostics_channel_diagnostics_channelunsubscribename-onmessage"><code>diagnostics_channel.unsubscribe(name, onMessage)</code></a></li>
</ul>
</li>
<li><a href="#all_diagnostics_channel_class-channel">Class: <code>Channel</code></a>
<ul>
<li><a href="#all_diagnostics_channel_channelhassubscribers"><code>channel.hasSubscribers</code></a></li>
<li><a href="#all_diagnostics_channel_channelpublishmessage"><code>channel.publish(message)</code></a></li>
<li><span class="stability_0"><a href="#all_diagnostics_channel_channelsubscribeonmessage"><code>channel.subscribe(onMessage)</code></a></span></li>
<li><span class="stability_0"><a href="#all_diagnostics_channel_channelunsubscribeonmessage"><code>channel.unsubscribe(onMessage)</code></a></span></li>
</ul>
</li>
<li><a href="#all_diagnostics_channel_built-in-channels">Built-in Channels</a>
<ul>
<li><a href="#all_diagnostics_channel_http">HTTP</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_dns_dns">DNS</a></span>
<ul>
<li><a href="#all_dns_class-dnsresolver">Class: <code>dns.Resolver</code></a>
<ul>
<li><a href="#all_dns_resolveroptions"><code>Resolver([options])</code></a></li>
<li><a href="#all_dns_resolvercancel"><code>resolver.cancel()</code></a></li>
<li><a href="#all_dns_resolversetlocaladdressipv4-ipv6"><code>resolver.setLocalAddress([ipv4][, ipv6])</code></a></li>
</ul>
</li>
<li><a href="#all_dns_dnsgetservers"><code>dns.getServers()</code></a></li>
<li><a href="#all_dns_dnslookuphostname-options-callback"><code>dns.lookup(hostname[, options], callback)</code></a>
<ul>
<li><a href="#all_dns_supported-getaddrinfo-flags">Supported getaddrinfo flags</a></li>
</ul>
</li>
<li><a href="#all_dns_dnslookupserviceaddress-port-callback"><code>dns.lookupService(address, port, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvehostname-rrtype-callback"><code>dns.resolve(hostname[, rrtype], callback)</code></a></li>
<li><a href="#all_dns_dnsresolve4hostname-options-callback"><code>dns.resolve4(hostname[, options], callback)</code></a></li>
<li><a href="#all_dns_dnsresolve6hostname-options-callback"><code>dns.resolve6(hostname[, options], callback)</code></a></li>
<li><a href="#all_dns_dnsresolveanyhostname-callback"><code>dns.resolveAny(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvecnamehostname-callback"><code>dns.resolveCname(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvecaahostname-callback"><code>dns.resolveCaa(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvemxhostname-callback"><code>dns.resolveMx(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvenaptrhostname-callback"><code>dns.resolveNaptr(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvenshostname-callback"><code>dns.resolveNs(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolveptrhostname-callback"><code>dns.resolvePtr(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvesoahostname-callback"><code>dns.resolveSoa(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvesrvhostname-callback"><code>dns.resolveSrv(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsresolvetxthostname-callback"><code>dns.resolveTxt(hostname, callback)</code></a></li>
<li><a href="#all_dns_dnsreverseip-callback"><code>dns.reverse(ip, callback)</code></a></li>
<li><a href="#all_dns_dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder(order)</code></a></li>
<li><a href="#all_dns_dnssetserversservers"><code>dns.setServers(servers)</code></a></li>
<li><a href="#all_dns_dns-promises-api">DNS promises API</a>
<ul>
<li><a href="#all_dns_class-dnspromisesresolver">Class: <code>dnsPromises.Resolver</code></a></li>
<li><a href="#all_dns_resolvercancel_1"><code>resolver.cancel()</code></a></li>
<li><a href="#all_dns_dnspromisesgetservers"><code>dnsPromises.getServers()</code></a></li>
<li><a href="#all_dns_dnspromiseslookuphostname-options"><code>dnsPromises.lookup(hostname[, options])</code></a></li>
<li><a href="#all_dns_dnspromiseslookupserviceaddress-port"><code>dnsPromises.lookupService(address, port)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvehostname-rrtype"><code>dnsPromises.resolve(hostname[, rrtype])</code></a></li>
<li><a href="#all_dns_dnspromisesresolve4hostname-options"><code>dnsPromises.resolve4(hostname[, options])</code></a></li>
<li><a href="#all_dns_dnspromisesresolve6hostname-options"><code>dnsPromises.resolve6(hostname[, options])</code></a></li>
<li><a href="#all_dns_dnspromisesresolveanyhostname"><code>dnsPromises.resolveAny(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvecaahostname"><code>dnsPromises.resolveCaa(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvecnamehostname"><code>dnsPromises.resolveCname(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvemxhostname"><code>dnsPromises.resolveMx(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvenaptrhostname"><code>dnsPromises.resolveNaptr(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvenshostname"><code>dnsPromises.resolveNs(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolveptrhostname"><code>dnsPromises.resolvePtr(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvesoahostname"><code>dnsPromises.resolveSoa(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvesrvhostname"><code>dnsPromises.resolveSrv(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesresolvetxthostname"><code>dnsPromises.resolveTxt(hostname)</code></a></li>
<li><a href="#all_dns_dnspromisesreverseip"><code>dnsPromises.reverse(ip)</code></a></li>
<li><a href="#all_dns_dnspromisessetdefaultresultorderorder"><code>dnsPromises.setDefaultResultOrder(order)</code></a></li>
<li><a href="#all_dns_dnspromisessetserversservers"><code>dnsPromises.setServers(servers)</code></a></li>
</ul>
</li>
<li><a href="#all_dns_error-codes">Error codes</a></li>
<li><a href="#all_dns_implementation-considerations">Implementation considerations</a>
<ul>
<li><a href="#all_dns_dnslookup"><code>dns.lookup()</code></a></li>
<li><a href="#all_dns_dnsresolve-dnsresolve-and-dnsreverse"><code>dns.resolve()</code>, <code>dns.resolve*()</code>, and <code>dns.reverse()</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_0"><a href="#all_domain_domain">Domain</a></span>
<ul>
<li><a href="#all_domain_warning-dont-ignore-errors">Warning: Don't ignore errors!</a></li>
<li><a href="#all_domain_additions-to-error-objects">Additions to <code>Error</code> objects</a></li>
<li><a href="#all_domain_implicit-binding">Implicit binding</a></li>
<li><a href="#all_domain_explicit-binding">Explicit binding</a></li>
<li><a href="#all_domain_domaincreate"><code>domain.create()</code></a></li>
<li><a href="#all_domain_class-domain">Class: <code>Domain</code></a>
<ul>
<li><a href="#all_domain_domainmembers"><code>domain.members</code></a></li>
<li><a href="#all_domain_domainaddemitter"><code>domain.add(emitter)</code></a></li>
<li><a href="#all_domain_domainbindcallback"><code>domain.bind(callback)</code></a></li>
<li><a href="#all_domain_domainenter"><code>domain.enter()</code></a></li>
<li><a href="#all_domain_domainexit"><code>domain.exit()</code></a></li>
<li><a href="#all_domain_domaininterceptcallback"><code>domain.intercept(callback)</code></a></li>
<li><a href="#all_domain_domainremoveemitter"><code>domain.remove(emitter)</code></a></li>
<li><a href="#all_domain_domainrunfn-args"><code>domain.run(fn[, ...args])</code></a></li>
</ul>
</li>
<li><a href="#all_domain_domains-and-promises">Domains and promises</a></li>
</ul>
</li>
<li><a href="#all_errors_errors">Errors</a>
<ul>
<li><a href="#all_errors_error-propagation-and-interception">Error propagation and interception</a>
<ul>
<li><a href="#all_errors_error-first-callbacks">Error-first callbacks</a></li>
</ul>
</li>
<li><a href="#all_errors_class-error">Class: <code>Error</code></a>
<ul>
<li><a href="#all_errors_new-errormessage-options"><code>new Error(message[, options])</code></a></li>
<li><a href="#all_errors_errorcapturestacktracetargetobject-constructoropt"><code>Error.captureStackTrace(targetObject[, constructorOpt])</code></a></li>
<li><a href="#all_errors_errorstacktracelimit"><code>Error.stackTraceLimit</code></a></li>
<li><a href="#all_errors_errorcause"><code>error.cause</code></a></li>
<li><a href="#all_errors_errorcode"><code>error.code</code></a></li>
<li><a href="#all_errors_errormessage"><code>error.message</code></a></li>
<li><a href="#all_errors_errorstack"><code>error.stack</code></a></li>
</ul>
</li>
<li><a href="#all_errors_class-assertionerror">Class: <code>AssertionError</code></a></li>
<li><a href="#all_errors_class-rangeerror">Class: <code>RangeError</code></a></li>
<li><a href="#all_errors_class-referenceerror">Class: <code>ReferenceError</code></a></li>
<li><a href="#all_errors_class-syntaxerror">Class: <code>SyntaxError</code></a></li>
<li><a href="#all_errors_class-systemerror">Class: <code>SystemError</code></a>
<ul>
<li><a href="#all_errors_erroraddress"><code>error.address</code></a></li>
<li><a href="#all_errors_errorcode_1"><code>error.code</code></a></li>
<li><a href="#all_errors_errordest"><code>error.dest</code></a></li>
<li><a href="#all_errors_errorerrno"><code>error.errno</code></a></li>
<li><a href="#all_errors_errorinfo"><code>error.info</code></a></li>
<li><a href="#all_errors_errormessage_1"><code>error.message</code></a></li>
<li><a href="#all_errors_errorpath"><code>error.path</code></a></li>
<li><a href="#all_errors_errorport"><code>error.port</code></a></li>
<li><a href="#all_errors_errorsyscall"><code>error.syscall</code></a></li>
<li><a href="#all_errors_common-system-errors">Common system errors</a></li>
</ul>
</li>
<li><a href="#all_errors_class-typeerror">Class: <code>TypeError</code></a></li>
<li><a href="#all_errors_exceptions-vs-errors">Exceptions vs. errors</a></li>
<li><a href="#all_errors_openssl-errors">OpenSSL errors</a>
<ul>
<li><a href="#all_errors_erroropensslerrorstack"><code>error.opensslErrorStack</code></a></li>
<li><a href="#all_errors_errorfunction"><code>error.function</code></a></li>
<li><a href="#all_errors_errorlibrary"><code>error.library</code></a></li>
<li><a href="#all_errors_errorreason"><code>error.reason</code></a></li>
</ul>
</li>
<li><a href="#all_errors_nodejs-error-codes">Node.js error codes</a>
<ul>
<li><a href="#all_errors_abort_err"><code>ABORT_ERR</code></a></li>
<li><a href="#all_errors_err_ambiguous_argument"><code>ERR_AMBIGUOUS_ARGUMENT</code></a></li>
<li><a href="#all_errors_err_arg_not_iterable"><code>ERR_ARG_NOT_ITERABLE</code></a></li>
<li><a href="#all_errors_err_assertion"><code>ERR_ASSERTION</code></a></li>
<li><a href="#all_errors_err_assert_snapshot_not_supported"><code>ERR_ASSERT_SNAPSHOT_NOT_SUPPORTED</code></a></li>
<li><a href="#all_errors_err_async_callback"><code>ERR_ASYNC_CALLBACK</code></a></li>
<li><a href="#all_errors_err_async_type"><code>ERR_ASYNC_TYPE</code></a></li>
<li><a href="#all_errors_err_brotli_compression_failed"><code>ERR_BROTLI_COMPRESSION_FAILED</code></a></li>
<li><a href="#all_errors_err_brotli_invalid_param"><code>ERR_BROTLI_INVALID_PARAM</code></a></li>
<li><a href="#all_errors_err_buffer_context_not_available"><code>ERR_BUFFER_CONTEXT_NOT_AVAILABLE</code></a></li>
<li><a href="#all_errors_err_buffer_out_of_bounds"><code>ERR_BUFFER_OUT_OF_BOUNDS</code></a></li>
<li><a href="#all_errors_err_buffer_too_large"><code>ERR_BUFFER_TOO_LARGE</code></a></li>
<li><a href="#all_errors_err_cannot_watch_sigint"><code>ERR_CANNOT_WATCH_SIGINT</code></a></li>
<li><a href="#all_errors_err_child_closed_before_reply"><code>ERR_CHILD_CLOSED_BEFORE_REPLY</code></a></li>
<li><a href="#all_errors_err_child_process_ipc_required"><code>ERR_CHILD_PROCESS_IPC_REQUIRED</code></a></li>
<li><a href="#all_errors_err_child_process_stdio_maxbuffer"><code>ERR_CHILD_PROCESS_STDIO_MAXBUFFER</code></a></li>
<li><a href="#all_errors_err_closed_message_port"><code>ERR_CLOSED_MESSAGE_PORT</code></a></li>
<li><a href="#all_errors_err_console_writable_stream"><code>ERR_CONSOLE_WRITABLE_STREAM</code></a></li>
<li><a href="#all_errors_err_construct_call_invalid"><code>ERR_CONSTRUCT_CALL_INVALID</code></a></li>
<li><a href="#all_errors_err_construct_call_required"><code>ERR_CONSTRUCT_CALL_REQUIRED</code></a></li>
<li><a href="#all_errors_err_context_not_initialized"><code>ERR_CONTEXT_NOT_INITIALIZED</code></a></li>
<li><a href="#all_errors_err_crypto_custom_engine_not_supported"><code>ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED</code></a></li>
<li><a href="#all_errors_err_crypto_ecdh_invalid_format"><code>ERR_CRYPTO_ECDH_INVALID_FORMAT</code></a></li>
<li><a href="#all_errors_err_crypto_ecdh_invalid_public_key"><code>ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY</code></a></li>
<li><a href="#all_errors_err_crypto_engine_unknown"><code>ERR_CRYPTO_ENGINE_UNKNOWN</code></a></li>
<li><a href="#all_errors_err_crypto_fips_forced"><code>ERR_CRYPTO_FIPS_FORCED</code></a></li>
<li><a href="#all_errors_err_crypto_fips_unavailable"><code>ERR_CRYPTO_FIPS_UNAVAILABLE</code></a></li>
<li><a href="#all_errors_err_crypto_hash_finalized"><code>ERR_CRYPTO_HASH_FINALIZED</code></a></li>
<li><a href="#all_errors_err_crypto_hash_update_failed"><code>ERR_CRYPTO_HASH_UPDATE_FAILED</code></a></li>
<li><a href="#all_errors_err_crypto_incompatible_key"><code>ERR_CRYPTO_INCOMPATIBLE_KEY</code></a></li>
<li><a href="#all_errors_err_crypto_incompatible_key_options"><code>ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS</code></a></li>
<li><a href="#all_errors_err_crypto_initialization_failed"><code>ERR_CRYPTO_INITIALIZATION_FAILED</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_auth_tag"><code>ERR_CRYPTO_INVALID_AUTH_TAG</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_counter"><code>ERR_CRYPTO_INVALID_COUNTER</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_curve"><code>ERR_CRYPTO_INVALID_CURVE</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_digest"><code>ERR_CRYPTO_INVALID_DIGEST</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_iv"><code>ERR_CRYPTO_INVALID_IV</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_jwk"><code>ERR_CRYPTO_INVALID_JWK</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_key_object_type"><code>ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_keylen"><code>ERR_CRYPTO_INVALID_KEYLEN</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_keypair"><code>ERR_CRYPTO_INVALID_KEYPAIR</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_keytype"><code>ERR_CRYPTO_INVALID_KEYTYPE</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_messagelen"><code>ERR_CRYPTO_INVALID_MESSAGELEN</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_scrypt_params"><code>ERR_CRYPTO_INVALID_SCRYPT_PARAMS</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_state"><code>ERR_CRYPTO_INVALID_STATE</code></a></li>
<li><a href="#all_errors_err_crypto_invalid_tag_length"><code>ERR_CRYPTO_INVALID_TAG_LENGTH</code></a></li>
<li><a href="#all_errors_err_crypto_job_init_failed"><code>ERR_CRYPTO_JOB_INIT_FAILED</code></a></li>
<li><a href="#all_errors_err_crypto_jwk_unsupported_curve"><code>ERR_CRYPTO_JWK_UNSUPPORTED_CURVE</code></a></li>
<li><a href="#all_errors_err_crypto_jwk_unsupported_key_type"><code>ERR_CRYPTO_JWK_UNSUPPORTED_KEY_TYPE</code></a></li>
<li><a href="#all_errors_err_crypto_operation_failed"><code>ERR_CRYPTO_OPERATION_FAILED</code></a></li>
<li><a href="#all_errors_err_crypto_pbkdf2_error"><code>ERR_CRYPTO_PBKDF2_ERROR</code></a></li>
<li><a href="#all_errors_err_crypto_scrypt_invalid_parameter"><code>ERR_CRYPTO_SCRYPT_INVALID_PARAMETER</code></a></li>
<li><a href="#all_errors_err_crypto_scrypt_not_supported"><code>ERR_CRYPTO_SCRYPT_NOT_SUPPORTED</code></a></li>
<li><a href="#all_errors_err_crypto_sign_key_required"><code>ERR_CRYPTO_SIGN_KEY_REQUIRED</code></a></li>
<li><a href="#all_errors_err_crypto_timing_safe_equal_length"><code>ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH</code></a></li>
<li><a href="#all_errors_err_crypto_unknown_cipher"><code>ERR_CRYPTO_UNKNOWN_CIPHER</code></a></li>
<li><a href="#all_errors_err_crypto_unknown_dh_group"><code>ERR_CRYPTO_UNKNOWN_DH_GROUP</code></a></li>
<li><a href="#all_errors_err_crypto_unsupported_operation"><code>ERR_CRYPTO_UNSUPPORTED_OPERATION</code></a></li>
<li><a href="#all_errors_err_debugger_error"><code>ERR_DEBUGGER_ERROR</code></a></li>
<li><a href="#all_errors_err_debugger_startup_error"><code>ERR_DEBUGGER_STARTUP_ERROR</code></a></li>
<li><a href="#all_errors_err_dlopen_disabled"><code>ERR_DLOPEN_DISABLED</code></a></li>
<li><a href="#all_errors_err_dlopen_failed"><code>ERR_DLOPEN_FAILED</code></a></li>
<li><a href="#all_errors_err_dir_closed"><code>ERR_DIR_CLOSED</code></a></li>
<li><a href="#all_errors_err_dir_concurrent_operation"><code>ERR_DIR_CONCURRENT_OPERATION</code></a></li>
<li><a href="#all_errors_err_dns_set_servers_failed"><code>ERR_DNS_SET_SERVERS_FAILED</code></a></li>
<li><a href="#all_errors_err_domain_callback_not_available"><code>ERR_DOMAIN_CALLBACK_NOT_AVAILABLE</code></a></li>
<li><a href="#all_errors_err_domain_cannot_set_uncaught_exception_capture"><code>ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE</code></a></li>
<li><a href="#all_errors_err_duplicate_startup_snapshot_main_function"><code>ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION</code></a></li>
<li><a href="#all_errors_err_encoding_invalid_encoded_data"><code>ERR_ENCODING_INVALID_ENCODED_DATA</code></a></li>
<li><a href="#all_errors_err_encoding_not_supported"><code>ERR_ENCODING_NOT_SUPPORTED</code></a></li>
<li><a href="#all_errors_err_eval_esm_cannot_print"><code>ERR_EVAL_ESM_CANNOT_PRINT</code></a></li>
<li><a href="#all_errors_err_event_recursion"><code>ERR_EVENT_RECURSION</code></a></li>
<li><a href="#all_errors_err_execution_environment_not_available"><code>ERR_EXECUTION_ENVIRONMENT_NOT_AVAILABLE</code></a></li>
<li><a href="#all_errors_err_falsy_value_rejection"><code>ERR_FALSY_VALUE_REJECTION</code></a></li>
<li><a href="#all_errors_err_feature_unavailable_on_platform"><code>ERR_FEATURE_UNAVAILABLE_ON_PLATFORM</code></a></li>
<li><a href="#all_errors_err_fs_cp_dir_to_non_dir"><code>ERR_FS_CP_DIR_TO_NON_DIR</code></a></li>
<li><a href="#all_errors_err_fs_cp_eexist"><code>ERR_FS_CP_EEXIST</code></a></li>
<li><a href="#all_errors_err_fs_cp_einval"><code>ERR_FS_CP_EINVAL</code></a></li>
<li><a href="#all_errors_err_fs_cp_fifo_pipe"><code>ERR_FS_CP_FIFO_PIPE</code></a></li>
<li><a href="#all_errors_err_fs_cp_non_dir_to_dir"><code>ERR_FS_CP_NON_DIR_TO_DIR</code></a></li>
<li><a href="#all_errors_err_fs_cp_socket"><code>ERR_FS_CP_SOCKET</code></a></li>
<li><a href="#all_errors_err_fs_cp_symlink_to_subdirectory"><code>ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY</code></a></li>
<li><a href="#all_errors_err_fs_cp_unknown"><code>ERR_FS_CP_UNKNOWN</code></a></li>
<li><a href="#all_errors_err_fs_eisdir"><code>ERR_FS_EISDIR</code></a></li>
<li><a href="#all_errors_err_fs_file_too_large"><code>ERR_FS_FILE_TOO_LARGE</code></a></li>
<li><a href="#all_errors_err_fs_invalid_symlink_type"><code>ERR_FS_INVALID_SYMLINK_TYPE</code></a></li>
<li><a href="#all_errors_err_http_headers_sent"><code>ERR_HTTP_HEADERS_SENT</code></a></li>
<li><a href="#all_errors_err_http_invalid_header_value"><code>ERR_HTTP_INVALID_HEADER_VALUE</code></a></li>
<li><a href="#all_errors_err_http_invalid_status_code"><code>ERR_HTTP_INVALID_STATUS_CODE</code></a></li>
<li><a href="#all_errors_err_http_request_timeout"><code>ERR_HTTP_REQUEST_TIMEOUT</code></a></li>
<li><a href="#all_errors_err_http_socket_encoding"><code>ERR_HTTP_SOCKET_ENCODING</code></a></li>
<li><a href="#all_errors_err_http_trailer_invalid"><code>ERR_HTTP_TRAILER_INVALID</code></a></li>
<li><a href="#all_errors_err_http2_altsvc_invalid_origin"><code>ERR_HTTP2_ALTSVC_INVALID_ORIGIN</code></a></li>
<li><a href="#all_errors_err_http2_altsvc_length"><code>ERR_HTTP2_ALTSVC_LENGTH</code></a></li>
<li><a href="#all_errors_err_http2_connect_authority"><code>ERR_HTTP2_CONNECT_AUTHORITY</code></a></li>
<li><a href="#all_errors_err_http2_connect_path"><code>ERR_HTTP2_CONNECT_PATH</code></a></li>
<li><a href="#all_errors_err_http2_connect_scheme"><code>ERR_HTTP2_CONNECT_SCHEME</code></a></li>
<li><a href="#all_errors_err_http2_error"><code>ERR_HTTP2_ERROR</code></a></li>
<li><a href="#all_errors_err_http2_goaway_session"><code>ERR_HTTP2_GOAWAY_SESSION</code></a></li>
<li><a href="#all_errors_err_http2_header_single_value"><code>ERR_HTTP2_HEADER_SINGLE_VALUE</code></a></li>
<li><a href="#all_errors_err_http2_headers_after_respond"><code>ERR_HTTP2_HEADERS_AFTER_RESPOND</code></a></li>
<li><a href="#all_errors_err_http2_headers_sent"><code>ERR_HTTP2_HEADERS_SENT</code></a></li>
<li><a href="#all_errors_err_http2_info_status_not_allowed"><code>ERR_HTTP2_INFO_STATUS_NOT_ALLOWED</code></a></li>
<li><a href="#all_errors_err_http2_invalid_connection_headers"><code>ERR_HTTP2_INVALID_CONNECTION_HEADERS</code></a></li>
<li><a href="#all_errors_err_http2_invalid_header_value"><code>ERR_HTTP2_INVALID_HEADER_VALUE</code></a></li>
<li><a href="#all_errors_err_http2_invalid_info_status"><code>ERR_HTTP2_INVALID_INFO_STATUS</code></a></li>
<li><a href="#all_errors_err_http2_invalid_origin"><code>ERR_HTTP2_INVALID_ORIGIN</code></a></li>
<li><a href="#all_errors_err_http2_invalid_packed_settings_length"><code>ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH</code></a></li>
<li><a href="#all_errors_err_http2_invalid_pseudoheader"><code>ERR_HTTP2_INVALID_PSEUDOHEADER</code></a></li>
<li><a href="#all_errors_err_http2_invalid_session"><code>ERR_HTTP2_INVALID_SESSION</code></a></li>
<li><a href="#all_errors_err_http2_invalid_setting_value"><code>ERR_HTTP2_INVALID_SETTING_VALUE</code></a></li>
<li><a href="#all_errors_err_http2_invalid_stream"><code>ERR_HTTP2_INVALID_STREAM</code></a></li>
<li><a href="#all_errors_err_http2_max_pending_settings_ack"><code>ERR_HTTP2_MAX_PENDING_SETTINGS_ACK</code></a></li>
<li><a href="#all_errors_err_http2_nested_push"><code>ERR_HTTP2_NESTED_PUSH</code></a></li>
<li><a href="#all_errors_err_http2_no_mem"><code>ERR_HTTP2_NO_MEM</code></a></li>
<li><a href="#all_errors_err_http2_no_socket_manipulation"><code>ERR_HTTP2_NO_SOCKET_MANIPULATION</code></a></li>
<li><a href="#all_errors_err_http2_origin_length"><code>ERR_HTTP2_ORIGIN_LENGTH</code></a></li>
<li><a href="#all_errors_err_http2_out_of_streams"><code>ERR_HTTP2_OUT_OF_STREAMS</code></a></li>
<li><a href="#all_errors_err_http2_payload_forbidden"><code>ERR_HTTP2_PAYLOAD_FORBIDDEN</code></a></li>
<li><a href="#all_errors_err_http2_ping_cancel"><code>ERR_HTTP2_PING_CANCEL</code></a></li>
<li><a href="#all_errors_err_http2_ping_length"><code>ERR_HTTP2_PING_LENGTH</code></a></li>
<li><a href="#all_errors_err_http2_pseudoheader_not_allowed"><code>ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED</code></a></li>
<li><a href="#all_errors_err_http2_push_disabled"><code>ERR_HTTP2_PUSH_DISABLED</code></a></li>
<li><a href="#all_errors_err_http2_send_file"><code>ERR_HTTP2_SEND_FILE</code></a></li>
<li><a href="#all_errors_err_http2_send_file_noseek"><code>ERR_HTTP2_SEND_FILE_NOSEEK</code></a></li>
<li><a href="#all_errors_err_http2_session_error"><code>ERR_HTTP2_SESSION_ERROR</code></a></li>
<li><a href="#all_errors_err_http2_settings_cancel"><code>ERR_HTTP2_SETTINGS_CANCEL</code></a></li>
<li><a href="#all_errors_err_http2_socket_bound"><code>ERR_HTTP2_SOCKET_BOUND</code></a></li>
<li><a href="#all_errors_err_http2_socket_unbound"><code>ERR_HTTP2_SOCKET_UNBOUND</code></a></li>
<li><a href="#all_errors_err_http2_status_101"><code>ERR_HTTP2_STATUS_101</code></a></li>
<li><a href="#all_errors_err_http2_status_invalid"><code>ERR_HTTP2_STATUS_INVALID</code></a></li>
<li><a href="#all_errors_err_http2_stream_cancel"><code>ERR_HTTP2_STREAM_CANCEL</code></a></li>
<li><a href="#all_errors_err_http2_stream_error"><code>ERR_HTTP2_STREAM_ERROR</code></a></li>
<li><a href="#all_errors_err_http2_stream_self_dependency"><code>ERR_HTTP2_STREAM_SELF_DEPENDENCY</code></a></li>
<li><a href="#all_errors_err_http2_too_many_invalid_frames"><code>ERR_HTTP2_TOO_MANY_INVALID_FRAMES</code></a></li>
<li><a href="#all_errors_err_http2_trailers_already_sent"><code>ERR_HTTP2_TRAILERS_ALREADY_SENT</code></a></li>
<li><a href="#all_errors_err_http2_trailers_not_ready"><code>ERR_HTTP2_TRAILERS_NOT_READY</code></a></li>
<li><a href="#all_errors_err_http2_unsupported_protocol"><code>ERR_HTTP2_UNSUPPORTED_PROTOCOL</code></a></li>
<li><a href="#all_errors_err_illegal_constructor"><code>ERR_ILLEGAL_CONSTRUCTOR</code></a></li>
<li><a href="#all_errors_err_import_assertion_type_failed"><code>ERR_IMPORT_ASSERTION_TYPE_FAILED</code></a></li>
<li><a href="#all_errors_err_import_assertion_type_missing"><code>ERR_IMPORT_ASSERTION_TYPE_MISSING</code></a></li>
<li><a href="#all_errors_err_import_assertion_type_unsupported"><code>ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED</code></a></li>
<li><a href="#all_errors_err_incompatible_option_pair"><code>ERR_INCOMPATIBLE_OPTION_PAIR</code></a></li>
<li><span class="stability_1"><a href="#all_errors_err_input_type_not_allowed"><code>ERR_INPUT_TYPE_NOT_ALLOWED</code></a></span></li>
<li><a href="#all_errors_err_inspector_already_activated"><code>ERR_INSPECTOR_ALREADY_ACTIVATED</code></a></li>
<li><a href="#all_errors_err_inspector_already_connected"><code>ERR_INSPECTOR_ALREADY_CONNECTED</code></a></li>
<li><a href="#all_errors_err_inspector_closed"><code>ERR_INSPECTOR_CLOSED</code></a></li>
<li><a href="#all_errors_err_inspector_command"><code>ERR_INSPECTOR_COMMAND</code></a></li>
<li><a href="#all_errors_err_inspector_not_active"><code>ERR_INSPECTOR_NOT_ACTIVE</code></a></li>
<li><a href="#all_errors_err_inspector_not_available"><code>ERR_INSPECTOR_NOT_AVAILABLE</code></a></li>
<li><a href="#all_errors_err_inspector_not_connected"><code>ERR_INSPECTOR_NOT_CONNECTED</code></a></li>
<li><a href="#all_errors_err_inspector_not_worker"><code>ERR_INSPECTOR_NOT_WORKER</code></a></li>
<li><a href="#all_errors_err_internal_assertion"><code>ERR_INTERNAL_ASSERTION</code></a></li>
<li><a href="#all_errors_err_invalid_address_family"><code>ERR_INVALID_ADDRESS_FAMILY</code></a></li>
<li><a href="#all_errors_err_invalid_arg_type"><code>ERR_INVALID_ARG_TYPE</code></a></li>
<li><a href="#all_errors_err_invalid_arg_value"><code>ERR_INVALID_ARG_VALUE</code></a></li>
<li><a href="#all_errors_err_invalid_async_id"><code>ERR_INVALID_ASYNC_ID</code></a></li>
<li><a href="#all_errors_err_invalid_buffer_size"><code>ERR_INVALID_BUFFER_SIZE</code></a></li>
<li><a href="#all_errors_err_invalid_char"><code>ERR_INVALID_CHAR</code></a></li>
<li><a href="#all_errors_err_invalid_cursor_pos"><code>ERR_INVALID_CURSOR_POS</code></a></li>
<li><a href="#all_errors_err_invalid_fd"><code>ERR_INVALID_FD</code></a></li>
<li><a href="#all_errors_err_invalid_fd_type"><code>ERR_INVALID_FD_TYPE</code></a></li>
<li><a href="#all_errors_err_invalid_file_url_host"><code>ERR_INVALID_FILE_URL_HOST</code></a></li>
<li><a href="#all_errors_err_invalid_file_url_path"><code>ERR_INVALID_FILE_URL_PATH</code></a></li>
<li><a href="#all_errors_err_invalid_handle_type"><code>ERR_INVALID_HANDLE_TYPE</code></a></li>
<li><a href="#all_errors_err_invalid_http_token"><code>ERR_INVALID_HTTP_TOKEN</code></a></li>
<li><a href="#all_errors_err_invalid_ip_address"><code>ERR_INVALID_IP_ADDRESS</code></a></li>
<li><a href="#all_errors_err_invalid_module"><code>ERR_INVALID_MODULE</code></a></li>
<li><a href="#all_errors_err_invalid_module_specifier"><code>ERR_INVALID_MODULE_SPECIFIER</code></a></li>
<li><a href="#all_errors_err_invalid_object_define_property"><code>ERR_INVALID_OBJECT_DEFINE_PROPERTY</code></a></li>
<li><a href="#all_errors_err_invalid_package_config"><code>ERR_INVALID_PACKAGE_CONFIG</code></a></li>
<li><a href="#all_errors_err_invalid_package_target"><code>ERR_INVALID_PACKAGE_TARGET</code></a></li>
<li><a href="#all_errors_err_invalid_performance_mark"><code>ERR_INVALID_PERFORMANCE_MARK</code></a></li>
<li><a href="#all_errors_err_invalid_protocol"><code>ERR_INVALID_PROTOCOL</code></a></li>
<li><a href="#all_errors_err_invalid_repl_eval_config"><code>ERR_INVALID_REPL_EVAL_CONFIG</code></a></li>
<li><a href="#all_errors_err_invalid_repl_input"><code>ERR_INVALID_REPL_INPUT</code></a></li>
<li><a href="#all_errors_err_invalid_return_property"><code>ERR_INVALID_RETURN_PROPERTY</code></a></li>
<li><a href="#all_errors_err_invalid_return_property_value"><code>ERR_INVALID_RETURN_PROPERTY_VALUE</code></a></li>
<li><a href="#all_errors_err_invalid_return_value"><code>ERR_INVALID_RETURN_VALUE</code></a></li>
<li><a href="#all_errors_err_invalid_state"><code>ERR_INVALID_STATE</code></a></li>
<li><a href="#all_errors_err_invalid_sync_fork_input"><code>ERR_INVALID_SYNC_FORK_INPUT</code></a></li>
<li><a href="#all_errors_err_invalid_this"><code>ERR_INVALID_THIS</code></a></li>
<li><a href="#all_errors_err_invalid_transfer_object"><code>ERR_INVALID_TRANSFER_OBJECT</code></a></li>
<li><a href="#all_errors_err_invalid_tuple"><code>ERR_INVALID_TUPLE</code></a></li>
<li><a href="#all_errors_err_invalid_uri"><code>ERR_INVALID_URI</code></a></li>
<li><a href="#all_errors_err_invalid_url"><code>ERR_INVALID_URL</code></a></li>
<li><a href="#all_errors_err_invalid_url_scheme"><code>ERR_INVALID_URL_SCHEME</code></a></li>
<li><a href="#all_errors_err_ipc_channel_closed"><code>ERR_IPC_CHANNEL_CLOSED</code></a></li>
<li><a href="#all_errors_err_ipc_disconnected"><code>ERR_IPC_DISCONNECTED</code></a></li>
<li><a href="#all_errors_err_ipc_one_pipe"><code>ERR_IPC_ONE_PIPE</code></a></li>
<li><a href="#all_errors_err_ipc_sync_fork"><code>ERR_IPC_SYNC_FORK</code></a></li>
<li><a href="#all_errors_err_loader_chain_incomplete"><code>ERR_LOADER_CHAIN_INCOMPLETE</code></a></li>
<li><a href="#all_errors_err_manifest_assert_integrity"><code>ERR_MANIFEST_ASSERT_INTEGRITY</code></a></li>
<li><a href="#all_errors_err_manifest_dependency_missing"><code>ERR_MANIFEST_DEPENDENCY_MISSING</code></a></li>
<li><a href="#all_errors_err_manifest_integrity_mismatch"><code>ERR_MANIFEST_INTEGRITY_MISMATCH</code></a></li>
<li><a href="#all_errors_err_manifest_invalid_resource_field"><code>ERR_MANIFEST_INVALID_RESOURCE_FIELD</code></a></li>
<li><a href="#all_errors_err_manifest_invalid_specifier"><code>ERR_MANIFEST_INVALID_SPECIFIER</code></a></li>
<li><a href="#all_errors_err_manifest_parse_policy"><code>ERR_MANIFEST_PARSE_POLICY</code></a></li>
<li><a href="#all_errors_err_manifest_tdz"><code>ERR_MANIFEST_TDZ</code></a></li>
<li><a href="#all_errors_err_manifest_unknown_onerror"><code>ERR_MANIFEST_UNKNOWN_ONERROR</code></a></li>
<li><a href="#all_errors_err_memory_allocation_failed"><code>ERR_MEMORY_ALLOCATION_FAILED</code></a></li>
<li><a href="#all_errors_err_message_target_context_unavailable"><code>ERR_MESSAGE_TARGET_CONTEXT_UNAVAILABLE</code></a></li>
<li><a href="#all_errors_err_method_not_implemented"><code>ERR_METHOD_NOT_IMPLEMENTED</code></a></li>
<li><a href="#all_errors_err_missing_args"><code>ERR_MISSING_ARGS</code></a></li>
<li><a href="#all_errors_err_missing_option"><code>ERR_MISSING_OPTION</code></a></li>
<li><a href="#all_errors_err_missing_passphrase"><code>ERR_MISSING_PASSPHRASE</code></a></li>
<li><a href="#all_errors_err_missing_platform_for_worker"><code>ERR_MISSING_PLATFORM_FOR_WORKER</code></a></li>
<li><a href="#all_errors_err_missing_transferable_in_transfer_list"><code>ERR_MISSING_TRANSFERABLE_IN_TRANSFER_LIST</code></a></li>
<li><a href="#all_errors_err_module_not_found"><code>ERR_MODULE_NOT_FOUND</code></a></li>
<li><a href="#all_errors_err_multiple_callback"><code>ERR_MULTIPLE_CALLBACK</code></a></li>
<li><a href="#all_errors_err_napi_cons_function"><code>ERR_NAPI_CONS_FUNCTION</code></a></li>
<li><a href="#all_errors_err_napi_invalid_dataview_args"><code>ERR_NAPI_INVALID_DATAVIEW_ARGS</code></a></li>
<li><a href="#all_errors_err_napi_invalid_typedarray_alignment"><code>ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT</code></a></li>
<li><a href="#all_errors_err_napi_invalid_typedarray_length"><code>ERR_NAPI_INVALID_TYPEDARRAY_LENGTH</code></a></li>
<li><a href="#all_errors_err_napi_tsfn_call_js"><code>ERR_NAPI_TSFN_CALL_JS</code></a></li>
<li><a href="#all_errors_err_napi_tsfn_get_undefined"><code>ERR_NAPI_TSFN_GET_UNDEFINED</code></a></li>
<li><a href="#all_errors_err_napi_tsfn_start_idle_loop"><code>ERR_NAPI_TSFN_START_IDLE_LOOP</code></a></li>
<li><a href="#all_errors_err_napi_tsfn_stop_idle_loop"><code>ERR_NAPI_TSFN_STOP_IDLE_LOOP</code></a></li>
<li><a href="#all_errors_err_not_building_snapshot"><code>ERR_NOT_BUILDING_SNAPSHOT</code></a></li>
<li><a href="#all_errors_err_no_crypto"><code>ERR_NO_CRYPTO</code></a></li>
<li><a href="#all_errors_err_no_icu"><code>ERR_NO_ICU</code></a></li>
<li><a href="#all_errors_err_non_context_aware_disabled"><code>ERR_NON_CONTEXT_AWARE_DISABLED</code></a></li>
<li><a href="#all_errors_err_out_of_range"><code>ERR_OUT_OF_RANGE</code></a></li>
<li><a href="#all_errors_err_package_import_not_defined"><code>ERR_PACKAGE_IMPORT_NOT_DEFINED</code></a></li>
<li><a href="#all_errors_err_package_path_not_exported"><code>ERR_PACKAGE_PATH_NOT_EXPORTED</code></a></li>
<li><a href="#all_errors_err_parse_args_invalid_option_value"><code>ERR_PARSE_ARGS_INVALID_OPTION_VALUE</code></a></li>
<li><a href="#all_errors_err_parse_args_unexpected_positional"><code>ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL</code></a></li>
<li><a href="#all_errors_err_parse_args_unknown_option"><code>ERR_PARSE_ARGS_UNKNOWN_OPTION</code></a></li>
<li><a href="#all_errors_err_performance_invalid_timestamp"><code>ERR_PERFORMANCE_INVALID_TIMESTAMP</code></a></li>
<li><a href="#all_errors_err_performance_measure_invalid_options"><code>ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS</code></a></li>
<li><a href="#all_errors_err_proto_access"><code>ERR_PROTO_ACCESS</code></a></li>
<li><span class="stability_1"><a href="#all_errors_err_require_esm"><code>ERR_REQUIRE_ESM</code></a></span></li>
<li><a href="#all_errors_err_script_execution_interrupted"><code>ERR_SCRIPT_EXECUTION_INTERRUPTED</code></a></li>
<li><a href="#all_errors_err_script_execution_timeout"><code>ERR_SCRIPT_EXECUTION_TIMEOUT</code></a></li>
<li><a href="#all_errors_err_server_already_listen"><code>ERR_SERVER_ALREADY_LISTEN</code></a></li>
<li><a href="#all_errors_err_server_not_running"><code>ERR_SERVER_NOT_RUNNING</code></a></li>
<li><a href="#all_errors_err_socket_already_bound"><code>ERR_SOCKET_ALREADY_BOUND</code></a></li>
<li><a href="#all_errors_err_socket_bad_buffer_size"><code>ERR_SOCKET_BAD_BUFFER_SIZE</code></a></li>
<li><a href="#all_errors_err_socket_bad_port"><code>ERR_SOCKET_BAD_PORT</code></a></li>
<li><a href="#all_errors_err_socket_bad_type"><code>ERR_SOCKET_BAD_TYPE</code></a></li>
<li><a href="#all_errors_err_socket_buffer_size"><code>ERR_SOCKET_BUFFER_SIZE</code></a></li>
<li><a href="#all_errors_err_socket_closed"><code>ERR_SOCKET_CLOSED</code></a></li>
<li><a href="#all_errors_err_socket_dgram_is_connected"><code>ERR_SOCKET_DGRAM_IS_CONNECTED</code></a></li>
<li><a href="#all_errors_err_socket_dgram_not_connected"><code>ERR_SOCKET_DGRAM_NOT_CONNECTED</code></a></li>
<li><a href="#all_errors_err_socket_dgram_not_running"><code>ERR_SOCKET_DGRAM_NOT_RUNNING</code></a></li>
<li><a href="#all_errors_err_sri_parse"><code>ERR_SRI_PARSE</code></a></li>
<li><a href="#all_errors_err_stream_already_finished"><code>ERR_STREAM_ALREADY_FINISHED</code></a></li>
<li><a href="#all_errors_err_stream_cannot_pipe"><code>ERR_STREAM_CANNOT_PIPE</code></a></li>
<li><a href="#all_errors_err_stream_destroyed"><code>ERR_STREAM_DESTROYED</code></a></li>
<li><a href="#all_errors_err_stream_null_values"><code>ERR_STREAM_NULL_VALUES</code></a></li>
<li><a href="#all_errors_err_stream_premature_close"><code>ERR_STREAM_PREMATURE_CLOSE</code></a></li>
<li><a href="#all_errors_err_stream_push_after_eof"><code>ERR_STREAM_PUSH_AFTER_EOF</code></a></li>
<li><a href="#all_errors_err_stream_unshift_after_end_event"><code>ERR_STREAM_UNSHIFT_AFTER_END_EVENT</code></a></li>
<li><a href="#all_errors_err_stream_wrap"><code>ERR_STREAM_WRAP</code></a></li>
<li><a href="#all_errors_err_stream_write_after_end"><code>ERR_STREAM_WRITE_AFTER_END</code></a></li>
<li><a href="#all_errors_err_string_too_long"><code>ERR_STRING_TOO_LONG</code></a></li>
<li><a href="#all_errors_err_synthetic"><code>ERR_SYNTHETIC</code></a></li>
<li><a href="#all_errors_err_system_error"><code>ERR_SYSTEM_ERROR</code></a></li>
<li><a href="#all_errors_err_test_failure"><code>ERR_TEST_FAILURE</code></a></li>
<li><a href="#all_errors_err_tls_cert_altname_format"><code>ERR_TLS_CERT_ALTNAME_FORMAT</code></a></li>
<li><a href="#all_errors_err_tls_cert_altname_invalid"><code>ERR_TLS_CERT_ALTNAME_INVALID</code></a></li>
<li><a href="#all_errors_err_tls_dh_param_size"><code>ERR_TLS_DH_PARAM_SIZE</code></a></li>
<li><a href="#all_errors_err_tls_handshake_timeout"><code>ERR_TLS_HANDSHAKE_TIMEOUT</code></a></li>
<li><a href="#all_errors_err_tls_invalid_context"><code>ERR_TLS_INVALID_CONTEXT</code></a></li>
<li><a href="#all_errors_err_tls_invalid_protocol_method"><code>ERR_TLS_INVALID_PROTOCOL_METHOD</code></a></li>
<li><a href="#all_errors_err_tls_invalid_protocol_version"><code>ERR_TLS_INVALID_PROTOCOL_VERSION</code></a></li>
<li><a href="#all_errors_err_tls_invalid_state"><code>ERR_TLS_INVALID_STATE</code></a></li>
<li><a href="#all_errors_err_tls_protocol_version_conflict"><code>ERR_TLS_PROTOCOL_VERSION_CONFLICT</code></a></li>
<li><a href="#all_errors_err_tls_psk_set_identiy_hint_failed"><code>ERR_TLS_PSK_SET_IDENTIY_HINT_FAILED</code></a></li>
<li><a href="#all_errors_err_tls_renegotiation_disabled"><code>ERR_TLS_RENEGOTIATION_DISABLED</code></a></li>
<li><a href="#all_errors_err_tls_required_server_name"><code>ERR_TLS_REQUIRED_SERVER_NAME</code></a></li>
<li><a href="#all_errors_err_tls_session_attack"><code>ERR_TLS_SESSION_ATTACK</code></a></li>
<li><a href="#all_errors_err_tls_sni_from_server"><code>ERR_TLS_SNI_FROM_SERVER</code></a></li>
<li><a href="#all_errors_err_trace_events_category_required"><code>ERR_TRACE_EVENTS_CATEGORY_REQUIRED</code></a></li>
<li><a href="#all_errors_err_trace_events_unavailable"><code>ERR_TRACE_EVENTS_UNAVAILABLE</code></a></li>
<li><a href="#all_errors_err_transform_already_transforming"><code>ERR_TRANSFORM_ALREADY_TRANSFORMING</code></a></li>
<li><a href="#all_errors_err_transform_with_length_0"><code>ERR_TRANSFORM_WITH_LENGTH_0</code></a></li>
<li><a href="#all_errors_err_tty_init_failed"><code>ERR_TTY_INIT_FAILED</code></a></li>
<li><a href="#all_errors_err_unavailable_during_exit"><code>ERR_UNAVAILABLE_DURING_EXIT</code></a></li>
<li><a href="#all_errors_err_uncaught_exception_capture_already_set"><code>ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET</code></a></li>
<li><a href="#all_errors_err_unescaped_characters"><code>ERR_UNESCAPED_CHARACTERS</code></a></li>
<li><a href="#all_errors_err_unhandled_error"><code>ERR_UNHANDLED_ERROR</code></a></li>
<li><a href="#all_errors_err_unknown_builtin_module"><code>ERR_UNKNOWN_BUILTIN_MODULE</code></a></li>
<li><a href="#all_errors_err_unknown_credential"><code>ERR_UNKNOWN_CREDENTIAL</code></a></li>
<li><a href="#all_errors_err_unknown_encoding"><code>ERR_UNKNOWN_ENCODING</code></a></li>
<li><span class="stability_1"><a href="#all_errors_err_unknown_file_extension"><code>ERR_UNKNOWN_FILE_EXTENSION</code></a></span></li>
<li><span class="stability_1"><a href="#all_errors_err_unknown_module_format"><code>ERR_UNKNOWN_MODULE_FORMAT</code></a></span></li>
<li><a href="#all_errors_err_unknown_signal"><code>ERR_UNKNOWN_SIGNAL</code></a></li>
<li><a href="#all_errors_err_unsupported_dir_import"><code>ERR_UNSUPPORTED_DIR_IMPORT</code></a></li>
<li><a href="#all_errors_err_unsupported_esm_url_scheme"><code>ERR_UNSUPPORTED_ESM_URL_SCHEME</code></a></li>
<li><span class="stability_1"><a href="#all_errors_err_use_after_close"><code>ERR_USE_AFTER_CLOSE</code></a></span></li>
<li><a href="#all_errors_err_valid_performance_entry_type"><code>ERR_VALID_PERFORMANCE_ENTRY_TYPE</code></a></li>
<li><a href="#all_errors_err_vm_dynamic_import_callback_missing"><code>ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING</code></a></li>
<li><a href="#all_errors_err_vm_module_already_linked"><code>ERR_VM_MODULE_ALREADY_LINKED</code></a></li>
<li><a href="#all_errors_err_vm_module_cached_data_rejected"><code>ERR_VM_MODULE_CACHED_DATA_REJECTED</code></a></li>
<li><a href="#all_errors_err_vm_module_cannot_create_cached_data"><code>ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA</code></a></li>
<li><a href="#all_errors_err_vm_module_different_context"><code>ERR_VM_MODULE_DIFFERENT_CONTEXT</code></a></li>
<li><a href="#all_errors_err_vm_module_link_failure"><code>ERR_VM_MODULE_LINK_FAILURE</code></a></li>
<li><a href="#all_errors_err_vm_module_not_module"><code>ERR_VM_MODULE_NOT_MODULE</code></a></li>
<li><a href="#all_errors_err_vm_module_status"><code>ERR_VM_MODULE_STATUS</code></a></li>
<li><a href="#all_errors_err_wasi_already_started"><code>ERR_WASI_ALREADY_STARTED</code></a></li>
<li><a href="#all_errors_err_wasi_not_started"><code>ERR_WASI_NOT_STARTED</code></a></li>
<li><a href="#all_errors_err_webassembly_response"><code>ERR_WEBASSEMBLY_RESPONSE</code></a></li>
<li><a href="#all_errors_err_worker_init_failed"><code>ERR_WORKER_INIT_FAILED</code></a></li>
<li><a href="#all_errors_err_worker_invalid_exec_argv"><code>ERR_WORKER_INVALID_EXEC_ARGV</code></a></li>
<li><a href="#all_errors_err_worker_not_running"><code>ERR_WORKER_NOT_RUNNING</code></a></li>
<li><a href="#all_errors_err_worker_out_of_memory"><code>ERR_WORKER_OUT_OF_MEMORY</code></a></li>
<li><a href="#all_errors_err_worker_path"><code>ERR_WORKER_PATH</code></a></li>
<li><a href="#all_errors_err_worker_unserializable_error"><code>ERR_WORKER_UNSERIALIZABLE_ERROR</code></a></li>
<li><a href="#all_errors_err_worker_unsupported_operation"><code>ERR_WORKER_UNSUPPORTED_OPERATION</code></a></li>
<li><a href="#all_errors_err_zlib_initialization_failed"><code>ERR_ZLIB_INITIALIZATION_FAILED</code></a></li>
<li><a href="#all_errors_hpe_header_overflow"><code>HPE_HEADER_OVERFLOW</code></a></li>
<li><a href="#all_errors_hpe_unexpected_content_length"><code>HPE_UNEXPECTED_CONTENT_LENGTH</code></a></li>
<li><a href="#all_errors_module_not_found"><code>MODULE_NOT_FOUND</code></a></li>
</ul>
</li>
<li><span class="stability_0"><a href="#all_errors_legacy-nodejs-error-codes">Legacy Node.js error codes</a></span>
<ul>
<li><a href="#all_errors_err_cannot_transfer_object"><code>ERR_CANNOT_TRANSFER_OBJECT</code></a></li>
<li><a href="#all_errors_err_crypto_hash_digest_no_utf16"><code>ERR_CRYPTO_HASH_DIGEST_NO_UTF16</code></a></li>
<li><a href="#all_errors_err_http2_frame_error"><code>ERR_HTTP2_FRAME_ERROR</code></a></li>
<li><a href="#all_errors_err_http2_headers_object"><code>ERR_HTTP2_HEADERS_OBJECT</code></a></li>
<li><a href="#all_errors_err_http2_header_required"><code>ERR_HTTP2_HEADER_REQUIRED</code></a></li>
<li><a href="#all_errors_err_http2_info_headers_after_respond"><code>ERR_HTTP2_INFO_HEADERS_AFTER_RESPOND</code></a></li>
<li><a href="#all_errors_err_http2_stream_closed"><code>ERR_HTTP2_STREAM_CLOSED</code></a></li>
<li><a href="#all_errors_err_http_invalid_char"><code>ERR_HTTP_INVALID_CHAR</code></a></li>
<li><a href="#all_errors_err_index_out_of_range"><code>ERR_INDEX_OUT_OF_RANGE</code></a></li>
<li><a href="#all_errors_err_invalid_opt_value"><code>ERR_INVALID_OPT_VALUE</code></a></li>
<li><a href="#all_errors_err_invalid_opt_value_encoding"><code>ERR_INVALID_OPT_VALUE_ENCODING</code></a></li>
<li><a href="#all_errors_err_missing_message_port_in_transfer_list"><code>ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST</code></a></li>
<li><a href="#all_errors_err_napi_cons_prototype_object"><code>ERR_NAPI_CONS_PROTOTYPE_OBJECT</code></a></li>
<li><span class="stability_1"><a href="#all_errors_err_network_import_bad_response"><code>ERR_NETWORK_IMPORT_BAD_RESPONSE</code></a></span></li>
<li><span class="stability_1"><a href="#all_errors_err_network_import_disallowed"><code>ERR_NETWORK_IMPORT_DISALLOWED</code></a></span></li>
<li><a href="#all_errors_err_no_longer_supported"><code>ERR_NO_LONGER_SUPPORTED</code></a></li>
<li><a href="#all_errors_err_operation_failed"><code>ERR_OPERATION_FAILED</code></a></li>
<li><a href="#all_errors_err_outofmemory"><code>ERR_OUTOFMEMORY</code></a></li>
<li><a href="#all_errors_err_parse_history_data"><code>ERR_PARSE_HISTORY_DATA</code></a></li>
<li><a href="#all_errors_err_socket_cannot_send"><code>ERR_SOCKET_CANNOT_SEND</code></a></li>
<li><a href="#all_errors_err_stderr_close"><code>ERR_STDERR_CLOSE</code></a></li>
<li><a href="#all_errors_err_stdout_close"><code>ERR_STDOUT_CLOSE</code></a></li>
<li><a href="#all_errors_err_stream_read_not_implemented"><code>ERR_STREAM_READ_NOT_IMPLEMENTED</code></a></li>
<li><a href="#all_errors_err_tls_renegotiation_failed"><code>ERR_TLS_RENEGOTIATION_FAILED</code></a></li>
<li><a href="#all_errors_err_transferring_externalized_sharedarraybuffer"><code>ERR_TRANSFERRING_EXTERNALIZED_SHAREDARRAYBUFFER</code></a></li>
<li><a href="#all_errors_err_unknown_stdin_type"><code>ERR_UNKNOWN_STDIN_TYPE</code></a></li>
<li><a href="#all_errors_err_unknown_stream_type"><code>ERR_UNKNOWN_STREAM_TYPE</code></a></li>
<li><a href="#all_errors_err_v8breakiterator"><code>ERR_V8BREAKITERATOR</code></a></li>
<li><a href="#all_errors_err_value_out_of_range"><code>ERR_VALUE_OUT_OF_RANGE</code></a></li>
<li><a href="#all_errors_err_vm_module_not_linked"><code>ERR_VM_MODULE_NOT_LINKED</code></a></li>
<li><a href="#all_errors_err_vm_module_linking_errored"><code>ERR_VM_MODULE_LINKING_ERRORED</code></a></li>
<li><a href="#all_errors_err_worker_unsupported_extension"><code>ERR_WORKER_UNSUPPORTED_EXTENSION</code></a></li>
<li><a href="#all_errors_err_zlib_binding_closed"><code>ERR_ZLIB_BINDING_CLOSED</code></a></li>
<li><a href="#all_errors_err_cpu_usage"><code>ERR_CPU_USAGE</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_events_events">Events</a></span>
<ul>
<li><a href="#all_events_passing-arguments-and-this-to-listeners">Passing arguments and <code>this</code> to listeners</a></li>
<li><a href="#all_events_asynchronous-vs-synchronous">Asynchronous vs. synchronous</a></li>
<li><a href="#all_events_handling-events-only-once">Handling events only once</a></li>
<li><a href="#all_events_error-events">Error events</a></li>
<li><a href="#all_events_capture-rejections-of-promises">Capture rejections of promises</a></li>
<li><a href="#all_events_class-eventemitter">Class: <code>EventEmitter</code></a>
<ul>
<li><a href="#all_events_event-newlistener">Event: <code>'newListener'</code></a></li>
<li><a href="#all_events_event-removelistener">Event: <code>'removeListener'</code></a></li>
<li><a href="#all_events_emitteraddlistenereventname-listener"><code>emitter.addListener(eventName, listener)</code></a></li>
<li><a href="#all_events_emitteremiteventname-args"><code>emitter.emit(eventName[, ...args])</code></a></li>
<li><a href="#all_events_emittereventnames"><code>emitter.eventNames()</code></a></li>
<li><a href="#all_events_emittergetmaxlisteners"><code>emitter.getMaxListeners()</code></a></li>
<li><a href="#all_events_emitterlistenercounteventname"><code>emitter.listenerCount(eventName)</code></a></li>
<li><a href="#all_events_emitterlistenerseventname"><code>emitter.listeners(eventName)</code></a></li>
<li><a href="#all_events_emitteroffeventname-listener"><code>emitter.off(eventName, listener)</code></a></li>
<li><a href="#all_events_emitteroneventname-listener"><code>emitter.on(eventName, listener)</code></a></li>
<li><a href="#all_events_emitteronceeventname-listener"><code>emitter.once(eventName, listener)</code></a></li>
<li><a href="#all_events_emitterprependlistenereventname-listener"><code>emitter.prependListener(eventName, listener)</code></a></li>
<li><a href="#all_events_emitterprependoncelistenereventname-listener"><code>emitter.prependOnceListener(eventName, listener)</code></a></li>
<li><a href="#all_events_emitterremovealllistenerseventname"><code>emitter.removeAllListeners([eventName])</code></a></li>
<li><a href="#all_events_emitterremovelistenereventname-listener"><code>emitter.removeListener(eventName, listener)</code></a></li>
<li><a href="#all_events_emittersetmaxlistenersn"><code>emitter.setMaxListeners(n)</code></a></li>
<li><a href="#all_events_emitterrawlistenerseventname"><code>emitter.rawListeners(eventName)</code></a></li>
<li><a href="#all_events_emittersymbolfornodejsrejectionerr-eventname-args"><code>emitter[Symbol.for('nodejs.rejection')](err, eventName[, ...args])</code></a></li>
</ul>
</li>
<li><a href="#all_events_eventsdefaultmaxlisteners"><code>events.defaultMaxListeners</code></a></li>
<li><a href="#all_events_eventserrormonitor"><code>events.errorMonitor</code></a></li>
<li><a href="#all_events_eventsgeteventlistenersemitterortarget-eventname"><code>events.getEventListeners(emitterOrTarget, eventName)</code></a></li>
<li><a href="#all_events_eventsonceemitter-name-options"><code>events.once(emitter, name[, options])</code></a>
<ul>
<li><a href="#all_events_awaiting-multiple-events-emitted-on-processnexttick">Awaiting multiple events emitted on <code>process.nextTick()</code></a></li>
</ul>
</li>
<li><a href="#all_events_eventscapturerejections"><code>events.captureRejections</code></a></li>
<li><a href="#all_events_eventscapturerejectionsymbol"><code>events.captureRejectionSymbol</code></a></li>
<li><span class="stability_0"><a href="#all_events_eventslistenercountemitter-eventname"><code>events.listenerCount(emitter, eventName)</code></a></span></li>
<li><a href="#all_events_eventsonemitter-eventname-options"><code>events.on(emitter, eventName[, options])</code></a></li>
<li><a href="#all_events_eventssetmaxlistenersn-eventtargets"><code>events.setMaxListeners(n[, ...eventTargets])</code></a></li>
<li><a href="#all_events_class-eventseventemitterasyncresource-extends-eventemitter">Class: <code>events.EventEmitterAsyncResource extends EventEmitter</code></a>
<ul>
<li><a href="#all_events_new-eventseventemitterasyncresourceoptions"><code>new events.EventEmitterAsyncResource(options)</code></a></li>
<li><a href="#all_events_eventemitterasyncresourceasyncid"><code>eventemitterasyncresource.asyncId</code></a></li>
<li><a href="#all_events_eventemitterasyncresourceasyncresource"><code>eventemitterasyncresource.asyncResource</code></a></li>
<li><a href="#all_events_eventemitterasyncresourceemitdestroy"><code>eventemitterasyncresource.emitDestroy()</code></a></li>
<li><a href="#all_events_eventemitterasyncresourcetriggerasyncid"><code>eventemitterasyncresource.triggerAsyncId</code></a></li>
</ul>
</li>
<li><a href="#all_events_eventtarget-and-event-api"><code>EventTarget</code> and <code>Event</code> API</a>
<ul>
<li><a href="#all_events_nodejs-eventtarget-vs-dom-eventtarget">Node.js <code>EventTarget</code> vs. DOM <code>EventTarget</code></a></li>
<li><a href="#all_events_nodeeventtarget-vs-eventemitter"><code>NodeEventTarget</code> vs. <code>EventEmitter</code></a></li>
<li><a href="#all_events_event-listener">Event listener</a></li>
<li><a href="#all_events_eventtarget-error-handling"><code>EventTarget</code> error handling</a></li>
<li><a href="#all_events_class-event">Class: <code>Event</code></a>
<ul>
<li><a href="#all_events_eventbubbles"><code>event.bubbles</code></a></li>
<li><a href="#all_events_eventcancelbubble"><code>event.cancelBubble()</code></a></li>
<li><a href="#all_events_eventcancelable"><code>event.cancelable</code></a></li>
<li><a href="#all_events_eventcomposed"><code>event.composed</code></a></li>
<li><a href="#all_events_eventcomposedpath"><code>event.composedPath()</code></a></li>
<li><a href="#all_events_eventcurrenttarget"><code>event.currentTarget</code></a></li>
<li><a href="#all_events_eventdefaultprevented"><code>event.defaultPrevented</code></a></li>
<li><a href="#all_events_eventeventphase"><code>event.eventPhase</code></a></li>
<li><a href="#all_events_eventistrusted"><code>event.isTrusted</code></a></li>
<li><a href="#all_events_eventpreventdefault"><code>event.preventDefault()</code></a></li>
<li><a href="#all_events_eventreturnvalue"><code>event.returnValue</code></a></li>
<li><a href="#all_events_eventsrcelement"><code>event.srcElement</code></a></li>
<li><a href="#all_events_eventstopimmediatepropagation"><code>event.stopImmediatePropagation()</code></a></li>
<li><a href="#all_events_eventstoppropagation"><code>event.stopPropagation()</code></a></li>
<li><a href="#all_events_eventtarget"><code>event.target</code></a></li>
<li><a href="#all_events_eventtimestamp"><code>event.timeStamp</code></a></li>
<li><a href="#all_events_eventtype"><code>event.type</code></a></li>
</ul>
</li>
<li><a href="#all_events_class-eventtarget">Class: <code>EventTarget</code></a>
<ul>
<li><a href="#all_events_eventtargetaddeventlistenertype-listener-options"><code>eventTarget.addEventListener(type, listener[, options])</code></a></li>
<li><a href="#all_events_eventtargetdispatcheventevent"><code>eventTarget.dispatchEvent(event)</code></a></li>
<li><a href="#all_events_eventtargetremoveeventlistenertype-listener"><code>eventTarget.removeEventListener(type, listener)</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_events_class-customevent">Class: <code>CustomEvent</code></a></span>
<ul>
<li><span class="stability_1"><a href="#all_events_eventdetail"><code>event.detail</code></a></span></li>
</ul>
</li>
<li><a href="#all_events_class-nodeeventtarget">Class: <code>NodeEventTarget</code></a>
<ul>
<li><a href="#all_events_nodeeventtargetaddlistenertype-listener-options"><code>nodeEventTarget.addListener(type, listener[, options])</code></a></li>
<li><a href="#all_events_nodeeventtargeteventnames"><code>nodeEventTarget.eventNames()</code></a></li>
<li><a href="#all_events_nodeeventtargetlistenercounttype"><code>nodeEventTarget.listenerCount(type)</code></a></li>
<li><a href="#all_events_nodeeventtargetofftype-listener"><code>nodeEventTarget.off(type, listener)</code></a></li>
<li><a href="#all_events_nodeeventtargetontype-listener-options"><code>nodeEventTarget.on(type, listener[, options])</code></a></li>
<li><a href="#all_events_nodeeventtargetoncetype-listener-options"><code>nodeEventTarget.once(type, listener[, options])</code></a></li>
<li><a href="#all_events_nodeeventtargetremovealllistenerstype"><code>nodeEventTarget.removeAllListeners([type])</code></a></li>
<li><a href="#all_events_nodeeventtargetremovelistenertype-listener"><code>nodeEventTarget.removeListener(type, listener)</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_fs_file-system">File system</a></span>
<ul>
<li><a href="#all_fs_promise-example">Promise example</a></li>
<li><a href="#all_fs_callback-example">Callback example</a></li>
<li><a href="#all_fs_synchronous-example">Synchronous example</a></li>
<li><a href="#all_fs_promises-api">Promises API</a>
<ul>
<li><a href="#all_fs_class-filehandle">Class: <code>FileHandle</code></a>
<ul>
<li><a href="#all_fs_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_fs_filehandleappendfiledata-options"><code>filehandle.appendFile(data[, options])</code></a></li>
<li><a href="#all_fs_filehandlechmodmode"><code>filehandle.chmod(mode)</code></a></li>
<li><a href="#all_fs_filehandlechownuid-gid"><code>filehandle.chown(uid, gid)</code></a></li>
<li><a href="#all_fs_filehandleclose"><code>filehandle.close()</code></a></li>
<li><a href="#all_fs_filehandlecreatereadstreamoptions"><code>filehandle.createReadStream([options])</code></a></li>
<li><a href="#all_fs_filehandlecreatewritestreamoptions"><code>filehandle.createWriteStream([options])</code></a></li>
<li><a href="#all_fs_filehandledatasync"><code>filehandle.datasync()</code></a></li>
<li><a href="#all_fs_filehandlefd"><code>filehandle.fd</code></a></li>
<li><a href="#all_fs_filehandlereadbuffer-offset-length-position"><code>filehandle.read(buffer, offset, length, position)</code></a></li>
<li><a href="#all_fs_filehandlereadoptions"><code>filehandle.read([options])</code></a></li>
<li><a href="#all_fs_filehandlereadbuffer-options"><code>filehandle.read(buffer[, options])</code></a></li>
<li><span class="stability_1"><a href="#all_fs_filehandlereadablewebstream"><code>filehandle.readableWebStream()</code></a></span></li>
<li><a href="#all_fs_filehandlereadfileoptions"><code>filehandle.readFile(options)</code></a></li>
<li><a href="#all_fs_filehandlereadvbuffers-position"><code>filehandle.readv(buffers[, position])</code></a></li>
<li><a href="#all_fs_filehandlestatoptions"><code>filehandle.stat([options])</code></a></li>
<li><a href="#all_fs_filehandlesync"><code>filehandle.sync()</code></a></li>
<li><a href="#all_fs_filehandletruncatelen"><code>filehandle.truncate(len)</code></a></li>
<li><a href="#all_fs_filehandleutimesatime-mtime"><code>filehandle.utimes(atime, mtime)</code></a></li>
<li><a href="#all_fs_filehandlewritebuffer-offset-length-position"><code>filehandle.write(buffer, offset[, length[, position]])</code></a></li>
<li><a href="#all_fs_filehandlewritebuffer-options"><code>filehandle.write(buffer[, options])</code></a></li>
<li><a href="#all_fs_filehandlewritestring-position-encoding"><code>filehandle.write(string[, position[, encoding]])</code></a></li>
<li><a href="#all_fs_filehandlewritefiledata-options"><code>filehandle.writeFile(data, options)</code></a></li>
<li><a href="#all_fs_filehandlewritevbuffers-position"><code>filehandle.writev(buffers[, position])</code></a></li>
</ul>
</li>
<li><a href="#all_fs_fspromisesaccesspath-mode"><code>fsPromises.access(path[, mode])</code></a></li>
<li><a href="#all_fs_fspromisesappendfilepath-data-options"><code>fsPromises.appendFile(path, data[, options])</code></a></li>
<li><a href="#all_fs_fspromiseschmodpath-mode"><code>fsPromises.chmod(path, mode)</code></a></li>
<li><a href="#all_fs_fspromiseschownpath-uid-gid"><code>fsPromises.chown(path, uid, gid)</code></a></li>
<li><a href="#all_fs_fspromisescopyfilesrc-dest-mode"><code>fsPromises.copyFile(src, dest[, mode])</code></a></li>
<li><span class="stability_1"><a href="#all_fs_fspromisescpsrc-dest-options"><code>fsPromises.cp(src, dest[, options])</code></a></span></li>
<li><a href="#all_fs_fspromiseslchmodpath-mode"><code>fsPromises.lchmod(path, mode)</code></a></li>
<li><a href="#all_fs_fspromiseslchownpath-uid-gid"><code>fsPromises.lchown(path, uid, gid)</code></a></li>
<li><a href="#all_fs_fspromiseslutimespath-atime-mtime"><code>fsPromises.lutimes(path, atime, mtime)</code></a></li>
<li><a href="#all_fs_fspromiseslinkexistingpath-newpath"><code>fsPromises.link(existingPath, newPath)</code></a></li>
<li><a href="#all_fs_fspromiseslstatpath-options"><code>fsPromises.lstat(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesmkdirpath-options"><code>fsPromises.mkdir(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesmkdtempprefix-options"><code>fsPromises.mkdtemp(prefix[, options])</code></a></li>
<li><a href="#all_fs_fspromisesopenpath-flags-mode"><code>fsPromises.open(path, flags[, mode])</code></a></li>
<li><a href="#all_fs_fspromisesopendirpath-options"><code>fsPromises.opendir(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesreaddirpath-options"><code>fsPromises.readdir(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesreadfilepath-options"><code>fsPromises.readFile(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesreadlinkpath-options"><code>fsPromises.readlink(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesrealpathpath-options"><code>fsPromises.realpath(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesrenameoldpath-newpath"><code>fsPromises.rename(oldPath, newPath)</code></a></li>
<li><a href="#all_fs_fspromisesrmdirpath-options"><code>fsPromises.rmdir(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesrmpath-options"><code>fsPromises.rm(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisesstatpath-options"><code>fsPromises.stat(path[, options])</code></a></li>
<li><a href="#all_fs_fspromisessymlinktarget-path-type"><code>fsPromises.symlink(target, path[, type])</code></a></li>
<li><a href="#all_fs_fspromisestruncatepath-len"><code>fsPromises.truncate(path[, len])</code></a></li>
<li><a href="#all_fs_fspromisesunlinkpath"><code>fsPromises.unlink(path)</code></a></li>
<li><a href="#all_fs_fspromisesutimespath-atime-mtime"><code>fsPromises.utimes(path, atime, mtime)</code></a></li>
<li><a href="#all_fs_fspromiseswatchfilename-options"><code>fsPromises.watch(filename[, options])</code></a></li>
<li><a href="#all_fs_fspromiseswritefilefile-data-options"><code>fsPromises.writeFile(file, data[, options])</code></a></li>
<li><a href="#all_fs_fspromisesconstants"><code>fsPromises.constants</code></a></li>
</ul>
</li>
<li><a href="#all_fs_callback-api">Callback API</a>
<ul>
<li><a href="#all_fs_fsaccesspath-mode-callback"><code>fs.access(path[, mode], callback)</code></a></li>
<li><a href="#all_fs_fsappendfilepath-data-options-callback"><code>fs.appendFile(path, data[, options], callback)</code></a></li>
<li><a href="#all_fs_fschmodpath-mode-callback"><code>fs.chmod(path, mode, callback)</code></a>
<ul>
<li><a href="#all_fs_file-modes">File modes</a></li>
</ul>
</li>
<li><a href="#all_fs_fschownpath-uid-gid-callback"><code>fs.chown(path, uid, gid, callback)</code></a></li>
<li><a href="#all_fs_fsclosefd-callback"><code>fs.close(fd[, callback])</code></a></li>
<li><a href="#all_fs_fscopyfilesrc-dest-mode-callback"><code>fs.copyFile(src, dest[, mode], callback)</code></a></li>
<li><span class="stability_1"><a href="#all_fs_fscpsrc-dest-options-callback"><code>fs.cp(src, dest[, options], callback)</code></a></span></li>
<li><a href="#all_fs_fscreatereadstreampath-options"><code>fs.createReadStream(path[, options])</code></a></li>
<li><a href="#all_fs_fscreatewritestreampath-options"><code>fs.createWriteStream(path[, options])</code></a></li>
<li><span class="stability_0"><a href="#all_fs_fsexistspath-callback"><code>fs.exists(path, callback)</code></a></span></li>
<li><a href="#all_fs_fsfchmodfd-mode-callback"><code>fs.fchmod(fd, mode, callback)</code></a></li>
<li><a href="#all_fs_fsfchownfd-uid-gid-callback"><code>fs.fchown(fd, uid, gid, callback)</code></a></li>
<li><a href="#all_fs_fsfdatasyncfd-callback"><code>fs.fdatasync(fd, callback)</code></a></li>
<li><a href="#all_fs_fsfstatfd-options-callback"><code>fs.fstat(fd[, options], callback)</code></a></li>
<li><a href="#all_fs_fsfsyncfd-callback"><code>fs.fsync(fd, callback)</code></a></li>
<li><a href="#all_fs_fsftruncatefd-len-callback"><code>fs.ftruncate(fd[, len], callback)</code></a></li>
<li><a href="#all_fs_fsfutimesfd-atime-mtime-callback"><code>fs.futimes(fd, atime, mtime, callback)</code></a></li>
<li><a href="#all_fs_fslchmodpath-mode-callback"><code>fs.lchmod(path, mode, callback)</code></a></li>
<li><a href="#all_fs_fslchownpath-uid-gid-callback"><code>fs.lchown(path, uid, gid, callback)</code></a></li>
<li><a href="#all_fs_fslutimespath-atime-mtime-callback"><code>fs.lutimes(path, atime, mtime, callback)</code></a></li>
<li><a href="#all_fs_fslinkexistingpath-newpath-callback"><code>fs.link(existingPath, newPath, callback)</code></a></li>
<li><a href="#all_fs_fslstatpath-options-callback"><code>fs.lstat(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsmkdirpath-options-callback"><code>fs.mkdir(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsmkdtempprefix-options-callback"><code>fs.mkdtemp(prefix[, options], callback)</code></a></li>
<li><a href="#all_fs_fsopenpath-flags-mode-callback"><code>fs.open(path[, flags[, mode]], callback)</code></a></li>
<li><a href="#all_fs_fsopendirpath-options-callback"><code>fs.opendir(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsreadfd-buffer-offset-length-position-callback"><code>fs.read(fd, buffer, offset, length, position, callback)</code></a></li>
<li><a href="#all_fs_fsreadfd-options-callback"><code>fs.read(fd[, options], callback)</code></a></li>
<li><a href="#all_fs_fsreadfd-buffer-options-callback"><code>fs.read(fd, buffer[, options], callback)</code></a></li>
<li><a href="#all_fs_fsreaddirpath-options-callback"><code>fs.readdir(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsreadfilepath-options-callback"><code>fs.readFile(path[, options], callback)</code></a>
<ul>
<li><a href="#all_fs_file-descriptors">File descriptors</a></li>
<li><a href="#all_fs_performance-considerations">Performance Considerations</a></li>
</ul>
</li>
<li><a href="#all_fs_fsreadlinkpath-options-callback"><code>fs.readlink(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsreadvfd-buffers-position-callback"><code>fs.readv(fd, buffers[, position], callback)</code></a></li>
<li><a href="#all_fs_fsrealpathpath-options-callback"><code>fs.realpath(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsrealpathnativepath-options-callback"><code>fs.realpath.native(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsrenameoldpath-newpath-callback"><code>fs.rename(oldPath, newPath, callback)</code></a></li>
<li><a href="#all_fs_fsrmdirpath-options-callback"><code>fs.rmdir(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsrmpath-options-callback"><code>fs.rm(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fsstatpath-options-callback"><code>fs.stat(path[, options], callback)</code></a></li>
<li><a href="#all_fs_fssymlinktarget-path-type-callback"><code>fs.symlink(target, path[, type], callback)</code></a></li>
<li><a href="#all_fs_fstruncatepath-len-callback"><code>fs.truncate(path[, len], callback)</code></a></li>
<li><a href="#all_fs_fsunlinkpath-callback"><code>fs.unlink(path, callback)</code></a></li>
<li><a href="#all_fs_fsunwatchfilefilename-listener"><code>fs.unwatchFile(filename[, listener])</code></a></li>
<li><a href="#all_fs_fsutimespath-atime-mtime-callback"><code>fs.utimes(path, atime, mtime, callback)</code></a></li>
<li><a href="#all_fs_fswatchfilename-options-listener"><code>fs.watch(filename[, options][, listener])</code></a>
<ul>
<li><a href="#all_fs_caveats">Caveats</a>
<ul>
<li><a href="#all_fs_availability">Availability</a></li>
<li><a href="#all_fs_inodes">Inodes</a></li>
<li><a href="#all_fs_filename-argument">Filename argument</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_fs_fswatchfilefilename-options-listener"><code>fs.watchFile(filename[, options], listener)</code></a></li>
<li><a href="#all_fs_fswritefd-buffer-offset-length-position-callback"><code>fs.write(fd, buffer, offset[, length[, position]], callback)</code></a></li>
<li><a href="#all_fs_fswritefd-buffer-options-callback"><code>fs.write(fd, buffer[, options], callback)</code></a></li>
<li><a href="#all_fs_fswritefd-string-position-encoding-callback"><code>fs.write(fd, string[, position[, encoding]], callback)</code></a></li>
<li><a href="#all_fs_fswritefilefile-data-options-callback"><code>fs.writeFile(file, data[, options], callback)</code></a>
<ul>
<li><a href="#all_fs_using-fswritefile-with-file-descriptors">Using <code>fs.writeFile()</code> with file descriptors</a></li>
</ul>
</li>
<li><a href="#all_fs_fswritevfd-buffers-position-callback"><code>fs.writev(fd, buffers[, position], callback)</code></a></li>
</ul>
</li>
<li><a href="#all_fs_synchronous-api">Synchronous API</a>
<ul>
<li><a href="#all_fs_fsaccesssyncpath-mode"><code>fs.accessSync(path[, mode])</code></a></li>
<li><a href="#all_fs_fsappendfilesyncpath-data-options"><code>fs.appendFileSync(path, data[, options])</code></a></li>
<li><a href="#all_fs_fschmodsyncpath-mode"><code>fs.chmodSync(path, mode)</code></a></li>
<li><a href="#all_fs_fschownsyncpath-uid-gid"><code>fs.chownSync(path, uid, gid)</code></a></li>
<li><a href="#all_fs_fsclosesyncfd"><code>fs.closeSync(fd)</code></a></li>
<li><a href="#all_fs_fscopyfilesyncsrc-dest-mode"><code>fs.copyFileSync(src, dest[, mode])</code></a></li>
<li><span class="stability_1"><a href="#all_fs_fscpsyncsrc-dest-options"><code>fs.cpSync(src, dest[, options])</code></a></span></li>
<li><a href="#all_fs_fsexistssyncpath"><code>fs.existsSync(path)</code></a></li>
<li><a href="#all_fs_fsfchmodsyncfd-mode"><code>fs.fchmodSync(fd, mode)</code></a></li>
<li><a href="#all_fs_fsfchownsyncfd-uid-gid"><code>fs.fchownSync(fd, uid, gid)</code></a></li>
<li><a href="#all_fs_fsfdatasyncsyncfd"><code>fs.fdatasyncSync(fd)</code></a></li>
<li><a href="#all_fs_fsfstatsyncfd-options"><code>fs.fstatSync(fd[, options])</code></a></li>
<li><a href="#all_fs_fsfsyncsyncfd"><code>fs.fsyncSync(fd)</code></a></li>
<li><a href="#all_fs_fsftruncatesyncfd-len"><code>fs.ftruncateSync(fd[, len])</code></a></li>
<li><a href="#all_fs_fsfutimessyncfd-atime-mtime"><code>fs.futimesSync(fd, atime, mtime)</code></a></li>
<li><a href="#all_fs_fslchmodsyncpath-mode"><code>fs.lchmodSync(path, mode)</code></a></li>
<li><a href="#all_fs_fslchownsyncpath-uid-gid"><code>fs.lchownSync(path, uid, gid)</code></a></li>
<li><a href="#all_fs_fslutimessyncpath-atime-mtime"><code>fs.lutimesSync(path, atime, mtime)</code></a></li>
<li><a href="#all_fs_fslinksyncexistingpath-newpath"><code>fs.linkSync(existingPath, newPath)</code></a></li>
<li><a href="#all_fs_fslstatsyncpath-options"><code>fs.lstatSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsmkdirsyncpath-options"><code>fs.mkdirSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsmkdtempsyncprefix-options"><code>fs.mkdtempSync(prefix[, options])</code></a></li>
<li><a href="#all_fs_fsopendirsyncpath-options"><code>fs.opendirSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsopensyncpath-flags-mode"><code>fs.openSync(path[, flags[, mode]])</code></a></li>
<li><a href="#all_fs_fsreaddirsyncpath-options"><code>fs.readdirSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsreadfilesyncpath-options"><code>fs.readFileSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsreadlinksyncpath-options"><code>fs.readlinkSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsreadsyncfd-buffer-offset-length-position"><code>fs.readSync(fd, buffer, offset, length[, position])</code></a></li>
<li><a href="#all_fs_fsreadsyncfd-buffer-options"><code>fs.readSync(fd, buffer[, options])</code></a></li>
<li><a href="#all_fs_fsreadvsyncfd-buffers-position"><code>fs.readvSync(fd, buffers[, position])</code></a></li>
<li><a href="#all_fs_fsrealpathsyncpath-options"><code>fs.realpathSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsrealpathsyncnativepath-options"><code>fs.realpathSync.native(path[, options])</code></a></li>
<li><a href="#all_fs_fsrenamesyncoldpath-newpath"><code>fs.renameSync(oldPath, newPath)</code></a></li>
<li><a href="#all_fs_fsrmdirsyncpath-options"><code>fs.rmdirSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsrmsyncpath-options"><code>fs.rmSync(path[, options])</code></a></li>
<li><a href="#all_fs_fsstatsyncpath-options"><code>fs.statSync(path[, options])</code></a></li>
<li><a href="#all_fs_fssymlinksynctarget-path-type"><code>fs.symlinkSync(target, path[, type])</code></a></li>
<li><a href="#all_fs_fstruncatesyncpath-len"><code>fs.truncateSync(path[, len])</code></a></li>
<li><a href="#all_fs_fsunlinksyncpath"><code>fs.unlinkSync(path)</code></a></li>
<li><a href="#all_fs_fsutimessyncpath-atime-mtime"><code>fs.utimesSync(path, atime, mtime)</code></a></li>
<li><a href="#all_fs_fswritefilesyncfile-data-options"><code>fs.writeFileSync(file, data[, options])</code></a></li>
<li><a href="#all_fs_fswritesyncfd-buffer-offset-length-position"><code>fs.writeSync(fd, buffer, offset[, length[, position]])</code></a></li>
<li><a href="#all_fs_fswritesyncfd-buffer-options"><code>fs.writeSync(fd, buffer[, options])</code></a></li>
<li><a href="#all_fs_fswritesyncfd-string-position-encoding"><code>fs.writeSync(fd, string[, position[, encoding]])</code></a></li>
<li><a href="#all_fs_fswritevsyncfd-buffers-position"><code>fs.writevSync(fd, buffers[, position])</code></a></li>
</ul>
</li>
<li><a href="#all_fs_common-objects">Common Objects</a>
<ul>
<li><a href="#all_fs_class-fsdir">Class: <code>fs.Dir</code></a>
<ul>
<li><a href="#all_fs_dirclose"><code>dir.close()</code></a></li>
<li><a href="#all_fs_dirclosecallback"><code>dir.close(callback)</code></a></li>
<li><a href="#all_fs_dirclosesync"><code>dir.closeSync()</code></a></li>
<li><a href="#all_fs_dirpath"><code>dir.path</code></a></li>
<li><a href="#all_fs_dirread"><code>dir.read()</code></a></li>
<li><a href="#all_fs_dirreadcallback"><code>dir.read(callback)</code></a></li>
<li><a href="#all_fs_dirreadsync"><code>dir.readSync()</code></a></li>
<li><a href="#all_fs_dirsymbolasynciterator"><code>dir[Symbol.asyncIterator]()</code></a></li>
</ul>
</li>
<li><a href="#all_fs_class-fsdirent">Class: <code>fs.Dirent</code></a>
<ul>
<li><a href="#all_fs_direntisblockdevice"><code>dirent.isBlockDevice()</code></a></li>
<li><a href="#all_fs_direntischaracterdevice"><code>dirent.isCharacterDevice()</code></a></li>
<li><a href="#all_fs_direntisdirectory"><code>dirent.isDirectory()</code></a></li>
<li><a href="#all_fs_direntisfifo"><code>dirent.isFIFO()</code></a></li>
<li><a href="#all_fs_direntisfile"><code>dirent.isFile()</code></a></li>
<li><a href="#all_fs_direntissocket"><code>dirent.isSocket()</code></a></li>
<li><a href="#all_fs_direntissymboliclink"><code>dirent.isSymbolicLink()</code></a></li>
<li><a href="#all_fs_direntname"><code>dirent.name</code></a></li>
</ul>
</li>
<li><a href="#all_fs_class-fsfswatcher">Class: <code>fs.FSWatcher</code></a>
<ul>
<li><a href="#all_fs_event-change">Event: <code>'change'</code></a></li>
<li><a href="#all_fs_event-close_1">Event: <code>'close'</code></a></li>
<li><a href="#all_fs_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_fs_watcherclose"><code>watcher.close()</code></a></li>
<li><a href="#all_fs_watcherref"><code>watcher.ref()</code></a></li>
<li><a href="#all_fs_watcherunref"><code>watcher.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_fs_class-fsstatwatcher">Class: <code>fs.StatWatcher</code></a>
<ul>
<li><a href="#all_fs_watcherref_1"><code>watcher.ref()</code></a></li>
<li><a href="#all_fs_watcherunref_1"><code>watcher.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_fs_class-fsreadstream">Class: <code>fs.ReadStream</code></a>
<ul>
<li><a href="#all_fs_event-close_2">Event: <code>'close'</code></a></li>
<li><a href="#all_fs_event-open">Event: <code>'open'</code></a></li>
<li><a href="#all_fs_event-ready">Event: <code>'ready'</code></a></li>
<li><a href="#all_fs_readstreambytesread"><code>readStream.bytesRead</code></a></li>
<li><a href="#all_fs_readstreampath"><code>readStream.path</code></a></li>
<li><a href="#all_fs_readstreampending"><code>readStream.pending</code></a></li>
</ul>
</li>
<li><a href="#all_fs_class-fsstats">Class: <code>fs.Stats</code></a>
<ul>
<li><a href="#all_fs_statsisblockdevice"><code>stats.isBlockDevice()</code></a></li>
<li><a href="#all_fs_statsischaracterdevice"><code>stats.isCharacterDevice()</code></a></li>
<li><a href="#all_fs_statsisdirectory"><code>stats.isDirectory()</code></a></li>
<li><a href="#all_fs_statsisfifo"><code>stats.isFIFO()</code></a></li>
<li><a href="#all_fs_statsisfile"><code>stats.isFile()</code></a></li>
<li><a href="#all_fs_statsissocket"><code>stats.isSocket()</code></a></li>
<li><a href="#all_fs_statsissymboliclink"><code>stats.isSymbolicLink()</code></a></li>
<li><a href="#all_fs_statsdev"><code>stats.dev</code></a></li>
<li><a href="#all_fs_statsino"><code>stats.ino</code></a></li>
<li><a href="#all_fs_statsmode"><code>stats.mode</code></a></li>
<li><a href="#all_fs_statsnlink"><code>stats.nlink</code></a></li>
<li><a href="#all_fs_statsuid"><code>stats.uid</code></a></li>
<li><a href="#all_fs_statsgid"><code>stats.gid</code></a></li>
<li><a href="#all_fs_statsrdev"><code>stats.rdev</code></a></li>
<li><a href="#all_fs_statssize"><code>stats.size</code></a></li>
<li><a href="#all_fs_statsblksize"><code>stats.blksize</code></a></li>
<li><a href="#all_fs_statsblocks"><code>stats.blocks</code></a></li>
<li><a href="#all_fs_statsatimems"><code>stats.atimeMs</code></a></li>
<li><a href="#all_fs_statsmtimems"><code>stats.mtimeMs</code></a></li>
<li><a href="#all_fs_statsctimems"><code>stats.ctimeMs</code></a></li>
<li><a href="#all_fs_statsbirthtimems"><code>stats.birthtimeMs</code></a></li>
<li><a href="#all_fs_statsatimens"><code>stats.atimeNs</code></a></li>
<li><a href="#all_fs_statsmtimens"><code>stats.mtimeNs</code></a></li>
<li><a href="#all_fs_statsctimens"><code>stats.ctimeNs</code></a></li>
<li><a href="#all_fs_statsbirthtimens"><code>stats.birthtimeNs</code></a></li>
<li><a href="#all_fs_statsatime"><code>stats.atime</code></a></li>
<li><a href="#all_fs_statsmtime"><code>stats.mtime</code></a></li>
<li><a href="#all_fs_statsctime"><code>stats.ctime</code></a></li>
<li><a href="#all_fs_statsbirthtime"><code>stats.birthtime</code></a></li>
<li><a href="#all_fs_stat-time-values">Stat time values</a></li>
</ul>
</li>
<li><a href="#all_fs_class-fswritestream">Class: <code>fs.WriteStream</code></a>
<ul>
<li><a href="#all_fs_event-close_3">Event: <code>'close'</code></a></li>
<li><a href="#all_fs_event-open_1">Event: <code>'open'</code></a></li>
<li><a href="#all_fs_event-ready_1">Event: <code>'ready'</code></a></li>
<li><a href="#all_fs_writestreambyteswritten"><code>writeStream.bytesWritten</code></a></li>
<li><a href="#all_fs_writestreamclosecallback"><code>writeStream.close([callback])</code></a></li>
<li><a href="#all_fs_writestreampath"><code>writeStream.path</code></a></li>
<li><a href="#all_fs_writestreampending"><code>writeStream.pending</code></a></li>
</ul>
</li>
<li><a href="#all_fs_fsconstants"><code>fs.constants</code></a>
<ul>
<li><a href="#all_fs_fs-constants">FS constants</a>
<ul>
<li><a href="#all_fs_file-access-constants">File access constants</a></li>
<li><a href="#all_fs_file-copy-constants">File copy constants</a></li>
<li><a href="#all_fs_file-open-constants">File open constants</a></li>
<li><a href="#all_fs_file-type-constants">File type constants</a></li>
<li><a href="#all_fs_file-mode-constants">File mode constants</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_fs_notes">Notes</a>
<ul>
<li><a href="#all_fs_ordering-of-callback-and-promise-based-operations">Ordering of callback and promise-based operations</a></li>
<li><a href="#all_fs_file-paths">File paths</a>
<ul>
<li><a href="#all_fs_string-paths">String paths</a></li>
<li><a href="#all_fs_file-url-paths">File URL paths</a>
<ul>
<li><a href="#all_fs_platform-specific-considerations">Platform-specific considerations</a></li>
</ul>
</li>
<li><a href="#all_fs_buffer-paths">Buffer paths</a></li>
<li><a href="#all_fs_per-drive-working-directories-on-windows">Per-drive working directories on Windows</a></li>
</ul>
</li>
<li><a href="#all_fs_file-descriptors_1">File descriptors</a></li>
<li><a href="#all_fs_threadpool-usage">Threadpool usage</a></li>
<li><a href="#all_fs_file-system-flags">File system flags</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_globals_global-objects">Global objects</a>
<ul>
<li><a href="#all_globals_class-abortcontroller">Class: <code>AbortController</code></a>
<ul>
<li><a href="#all_globals_abortcontrollerabortreason"><code>abortController.abort([reason])</code></a></li>
<li><a href="#all_globals_abortcontrollersignal"><code>abortController.signal</code></a></li>
<li><a href="#all_globals_class-abortsignal">Class: <code>AbortSignal</code></a>
<ul>
<li><a href="#all_globals_static-method-abortsignalabortreason">Static method: <code>AbortSignal.abort([reason])</code></a></li>
<li><a href="#all_globals_static-method-abortsignaltimeoutdelay">Static method: <code>AbortSignal.timeout(delay)</code></a></li>
<li><a href="#all_globals_event-abort">Event: <code>'abort'</code></a></li>
<li><a href="#all_globals_abortsignalaborted"><code>abortSignal.aborted</code></a></li>
<li><a href="#all_globals_abortsignalonabort"><code>abortSignal.onabort</code></a></li>
<li><a href="#all_globals_abortsignalreason"><code>abortSignal.reason</code></a></li>
<li><a href="#all_globals_abortsignalthrowifaborted"><code>abortSignal.throwIfAborted()</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_globals_class-blob">Class: <code>Blob</code></a></li>
<li><a href="#all_globals_class-buffer">Class: <code>Buffer</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-bytelengthqueuingstrategy">Class: <code>ByteLengthQueuingStrategy</code></a></span></li>
<li><a href="#all_globals___dirname"><code>__dirname</code></a></li>
<li><a href="#all_globals___filename"><code>__filename</code></a></li>
<li><span class="stability_3"><a href="#all_globals_atobdata"><code>atob(data)</code></a></span></li>
<li><a href="#all_globals_broadcastchannel"><code>BroadcastChannel</code></a></li>
<li><span class="stability_3"><a href="#all_globals_btoadata"><code>btoa(data)</code></a></span></li>
<li><a href="#all_globals_clearimmediateimmediateobject"><code>clearImmediate(immediateObject)</code></a></li>
<li><a href="#all_globals_clearintervalintervalobject"><code>clearInterval(intervalObject)</code></a></li>
<li><a href="#all_globals_cleartimeouttimeoutobject"><code>clearTimeout(timeoutObject)</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-compressionstream">Class: <code>CompressionStream</code></a></span></li>
<li><a href="#all_globals_console"><code>console</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-countqueuingstrategy">Class: <code>CountQueuingStrategy</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_crypto"><code>Crypto</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_crypto_1"><code>crypto</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_cryptokey"><code>CryptoKey</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_customevent"><code>CustomEvent</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-decompressionstream">Class: <code>DecompressionStream</code></a></span></li>
<li><a href="#all_globals_event"><code>Event</code></a></li>
<li><a href="#all_globals_eventtarget"><code>EventTarget</code></a></li>
<li><a href="#all_globals_exports"><code>exports</code></a></li>
<li><span class="stability_1"><a href="#all_globals_fetch"><code>fetch</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-formdata">Class <code>FormData</code></a></span></li>
<li><a href="#all_globals_global"><code>global</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-headers">Class <code>Headers</code></a></span></li>
<li><a href="#all_globals_messagechannel"><code>MessageChannel</code></a></li>
<li><a href="#all_globals_messageevent"><code>MessageEvent</code></a></li>
<li><a href="#all_globals_messageport"><code>MessagePort</code></a></li>
<li><a href="#all_globals_module"><code>module</code></a></li>
<li><a href="#all_globals_performance"><code>performance</code></a></li>
<li><a href="#all_globals_process"><code>process</code></a></li>
<li><a href="#all_globals_queuemicrotaskcallback"><code>queueMicrotask(callback)</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-readablebytestreamcontroller">Class: <code>ReadableByteStreamController</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-readablestream">Class: <code>ReadableStream</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-readablestreambyobreader">Class: <code>ReadableStreamBYOBReader</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-readablestreambyobrequest">Class: <code>ReadableStreamBYOBRequest</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-readablestreamdefaultcontroller">Class: <code>ReadableStreamDefaultController</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-readablestreamdefaultreader">Class: <code>ReadableStreamDefaultReader</code></a></span></li>
<li><a href="#all_globals_require"><code>require()</code></a></li>
<li><span class="stability_1"><a href="#all_globals_response"><code>Response</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_request"><code>Request</code></a></span></li>
<li><a href="#all_globals_setimmediatecallback-args"><code>setImmediate(callback[, ...args])</code></a></li>
<li><a href="#all_globals_setintervalcallback-delay-args"><code>setInterval(callback, delay[, ...args])</code></a></li>
<li><a href="#all_globals_settimeoutcallback-delay-args"><code>setTimeout(callback, delay[, ...args])</code></a></li>
<li><a href="#all_globals_structuredclonevalue-options"><code>structuredClone(value[, options])</code></a></li>
<li><span class="stability_1"><a href="#all_globals_subtlecrypto"><code>SubtleCrypto</code></a></span></li>
<li><a href="#all_globals_domexception"><code>DOMException</code></a></li>
<li><a href="#all_globals_textdecoder"><code>TextDecoder</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-textdecoderstream">Class: <code>TextDecoderStream</code></a></span></li>
<li><a href="#all_globals_textencoder"><code>TextEncoder</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-textencoderstream">Class: <code>TextEncoderStream</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-transformstream">Class: <code>TransformStream</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-transformstreamdefaultcontroller">Class: <code>TransformStreamDefaultController</code></a></span></li>
<li><a href="#all_globals_url"><code>URL</code></a></li>
<li><a href="#all_globals_urlsearchparams"><code>URLSearchParams</code></a></li>
<li><a href="#all_globals_webassembly"><code>WebAssembly</code></a></li>
<li><span class="stability_1"><a href="#all_globals_class-writablestream">Class: <code>WritableStream</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-writablestreamdefaultcontroller">Class: <code>WritableStreamDefaultController</code></a></span></li>
<li><span class="stability_1"><a href="#all_globals_class-writablestreamdefaultwriter">Class: <code>WritableStreamDefaultWriter</code></a></span></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_http_http">HTTP</a></span>
<ul>
<li><a href="#all_http_class-httpagent">Class: <code>http.Agent</code></a>
<ul>
<li><a href="#all_http_new-agentoptions"><code>new Agent([options])</code></a></li>
<li><a href="#all_http_agentcreateconnectionoptions-callback"><code>agent.createConnection(options[, callback])</code></a></li>
<li><a href="#all_http_agentkeepsocketalivesocket"><code>agent.keepSocketAlive(socket)</code></a></li>
<li><a href="#all_http_agentreusesocketsocket-request"><code>agent.reuseSocket(socket, request)</code></a></li>
<li><a href="#all_http_agentdestroy"><code>agent.destroy()</code></a></li>
<li><a href="#all_http_agentfreesockets"><code>agent.freeSockets</code></a></li>
<li><a href="#all_http_agentgetnameoptions"><code>agent.getName([options])</code></a></li>
<li><a href="#all_http_agentmaxfreesockets"><code>agent.maxFreeSockets</code></a></li>
<li><a href="#all_http_agentmaxsockets"><code>agent.maxSockets</code></a></li>
<li><a href="#all_http_agentmaxtotalsockets"><code>agent.maxTotalSockets</code></a></li>
<li><a href="#all_http_agentrequests"><code>agent.requests</code></a></li>
<li><a href="#all_http_agentsockets"><code>agent.sockets</code></a></li>
</ul>
</li>
<li><a href="#all_http_class-httpclientrequest">Class: <code>http.ClientRequest</code></a>
<ul>
<li><span class="stability_0"><a href="#all_http_event-abort">Event: <code>'abort'</code></a></span></li>
<li><a href="#all_http_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_http_event-connect">Event: <code>'connect'</code></a></li>
<li><a href="#all_http_event-continue">Event: <code>'continue'</code></a></li>
<li><a href="#all_http_event-finish">Event: <code>'finish'</code></a></li>
<li><a href="#all_http_event-information">Event: <code>'information'</code></a></li>
<li><a href="#all_http_event-response">Event: <code>'response'</code></a></li>
<li><a href="#all_http_event-socket">Event: <code>'socket'</code></a></li>
<li><a href="#all_http_event-timeout">Event: <code>'timeout'</code></a></li>
<li><a href="#all_http_event-upgrade">Event: <code>'upgrade'</code></a></li>
<li><span class="stability_0"><a href="#all_http_requestabort"><code>request.abort()</code></a></span></li>
<li><span class="stability_0"><a href="#all_http_requestaborted"><code>request.aborted</code></a></span></li>
<li><span class="stability_0"><a href="#all_http_requestconnection"><code>request.connection</code></a></span></li>
<li><a href="#all_http_requestcork"><code>request.cork()</code></a></li>
<li><a href="#all_http_requestenddata-encoding-callback"><code>request.end([data[, encoding]][, callback])</code></a></li>
<li><a href="#all_http_requestdestroyerror"><code>request.destroy([error])</code></a>
<ul>
<li><a href="#all_http_requestdestroyed"><code>request.destroyed</code></a></li>
</ul>
</li>
<li><span class="stability_0"><a href="#all_http_requestfinished"><code>request.finished</code></a></span></li>
<li><a href="#all_http_requestflushheaders"><code>request.flushHeaders()</code></a></li>
<li><a href="#all_http_requestgetheadername"><code>request.getHeader(name)</code></a></li>
<li><a href="#all_http_requestgetheadernames"><code>request.getHeaderNames()</code></a></li>
<li><a href="#all_http_requestgetheaders"><code>request.getHeaders()</code></a></li>
<li><a href="#all_http_requestgetrawheadernames"><code>request.getRawHeaderNames()</code></a></li>
<li><a href="#all_http_requesthasheadername"><code>request.hasHeader(name)</code></a></li>
<li><a href="#all_http_requestmaxheaderscount"><code>request.maxHeadersCount</code></a></li>
<li><a href="#all_http_requestpath"><code>request.path</code></a></li>
<li><a href="#all_http_requestmethod"><code>request.method</code></a></li>
<li><a href="#all_http_requesthost"><code>request.host</code></a></li>
<li><a href="#all_http_requestprotocol"><code>request.protocol</code></a></li>
<li><a href="#all_http_requestremoveheadername"><code>request.removeHeader(name)</code></a></li>
<li><a href="#all_http_requestreusedsocket"><code>request.reusedSocket</code></a></li>
<li><a href="#all_http_requestsetheadername-value"><code>request.setHeader(name, value)</code></a></li>
<li><a href="#all_http_requestsetnodelaynodelay"><code>request.setNoDelay([noDelay])</code></a></li>
<li><a href="#all_http_requestsetsocketkeepaliveenable-initialdelay"><code>request.setSocketKeepAlive([enable][, initialDelay])</code></a></li>
<li><a href="#all_http_requestsettimeouttimeout-callback"><code>request.setTimeout(timeout[, callback])</code></a></li>
<li><a href="#all_http_requestsocket"><code>request.socket</code></a></li>
<li><a href="#all_http_requestuncork"><code>request.uncork()</code></a></li>
<li><a href="#all_http_requestwritableended"><code>request.writableEnded</code></a></li>
<li><a href="#all_http_requestwritablefinished"><code>request.writableFinished</code></a></li>
<li><a href="#all_http_requestwritechunk-encoding-callback"><code>request.write(chunk[, encoding][, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_http_class-httpserver">Class: <code>http.Server</code></a>
<ul>
<li><a href="#all_http_event-checkcontinue">Event: <code>'checkContinue'</code></a></li>
<li><a href="#all_http_event-checkexpectation">Event: <code>'checkExpectation'</code></a></li>
<li><a href="#all_http_event-clienterror">Event: <code>'clientError'</code></a></li>
<li><a href="#all_http_event-close_1">Event: <code>'close'</code></a></li>
<li><a href="#all_http_event-connect_1">Event: <code>'connect'</code></a></li>
<li><a href="#all_http_event-connection">Event: <code>'connection'</code></a></li>
<li><a href="#all_http_event-droprequest">Event: <code>'dropRequest'</code></a></li>
<li><a href="#all_http_event-request">Event: <code>'request'</code></a></li>
<li><a href="#all_http_event-upgrade_1">Event: <code>'upgrade'</code></a></li>
<li><a href="#all_http_serverclosecallback"><code>server.close([callback])</code></a></li>
<li><a href="#all_http_servercloseallconnections"><code>server.closeAllConnections()</code></a></li>
<li><a href="#all_http_servercloseidleconnections"><code>server.closeIdleConnections()</code></a></li>
<li><a href="#all_http_serverheaderstimeout"><code>server.headersTimeout</code></a></li>
<li><a href="#all_http_serverlisten"><code>server.listen()</code></a></li>
<li><a href="#all_http_serverlistening"><code>server.listening</code></a></li>
<li><a href="#all_http_servermaxheaderscount"><code>server.maxHeadersCount</code></a></li>
<li><a href="#all_http_serverrequesttimeout"><code>server.requestTimeout</code></a></li>
<li><a href="#all_http_serversettimeoutmsecs-callback"><code>server.setTimeout([msecs][, callback])</code></a></li>
<li><a href="#all_http_servermaxrequestspersocket"><code>server.maxRequestsPerSocket</code></a></li>
<li><a href="#all_http_servertimeout"><code>server.timeout</code></a></li>
<li><a href="#all_http_serverkeepalivetimeout"><code>server.keepAliveTimeout</code></a></li>
</ul>
</li>
<li><a href="#all_http_class-httpserverresponse">Class: <code>http.ServerResponse</code></a>
<ul>
<li><a href="#all_http_event-close_2">Event: <code>'close'</code></a></li>
<li><a href="#all_http_event-finish_1">Event: <code>'finish'</code></a></li>
<li><a href="#all_http_responseaddtrailersheaders"><code>response.addTrailers(headers)</code></a></li>
<li><span class="stability_0"><a href="#all_http_responseconnection"><code>response.connection</code></a></span></li>
<li><a href="#all_http_responsecork"><code>response.cork()</code></a></li>
<li><a href="#all_http_responseenddata-encoding-callback"><code>response.end([data[, encoding]][, callback])</code></a></li>
<li><span class="stability_0"><a href="#all_http_responsefinished"><code>response.finished</code></a></span></li>
<li><a href="#all_http_responseflushheaders"><code>response.flushHeaders()</code></a></li>
<li><a href="#all_http_responsegetheadername"><code>response.getHeader(name)</code></a></li>
<li><a href="#all_http_responsegetheadernames"><code>response.getHeaderNames()</code></a></li>
<li><a href="#all_http_responsegetheaders"><code>response.getHeaders()</code></a></li>
<li><a href="#all_http_responsehasheadername"><code>response.hasHeader(name)</code></a></li>
<li><a href="#all_http_responseheaderssent"><code>response.headersSent</code></a></li>
<li><a href="#all_http_responseremoveheadername"><code>response.removeHeader(name)</code></a></li>
<li><a href="#all_http_responsereq"><code>response.req</code></a></li>
<li><a href="#all_http_responsesenddate"><code>response.sendDate</code></a></li>
<li><a href="#all_http_responsesetheadername-value"><code>response.setHeader(name, value)</code></a></li>
<li><a href="#all_http_responsesettimeoutmsecs-callback"><code>response.setTimeout(msecs[, callback])</code></a></li>
<li><a href="#all_http_responsesocket"><code>response.socket</code></a></li>
<li><a href="#all_http_responsestatuscode"><code>response.statusCode</code></a></li>
<li><a href="#all_http_responsestatusmessage"><code>response.statusMessage</code></a></li>
<li><a href="#all_http_responseuncork"><code>response.uncork()</code></a></li>
<li><a href="#all_http_responsewritableended"><code>response.writableEnded</code></a></li>
<li><a href="#all_http_responsewritablefinished"><code>response.writableFinished</code></a></li>
<li><a href="#all_http_responsewritechunk-encoding-callback"><code>response.write(chunk[, encoding][, callback])</code></a></li>
<li><a href="#all_http_responsewritecontinue"><code>response.writeContinue()</code></a></li>
<li><a href="#all_http_responsewriteheadstatuscode-statusmessage-headers"><code>response.writeHead(statusCode[, statusMessage][, headers])</code></a></li>
<li><a href="#all_http_responsewriteprocessing"><code>response.writeProcessing()</code></a></li>
</ul>
</li>
<li><a href="#all_http_class-httpincomingmessage">Class: <code>http.IncomingMessage</code></a>
<ul>
<li><span class="stability_0"><a href="#all_http_event-aborted">Event: <code>'aborted'</code></a></span></li>
<li><a href="#all_http_event-close_3">Event: <code>'close'</code></a></li>
<li><span class="stability_0"><a href="#all_http_messageaborted"><code>message.aborted</code></a></span></li>
<li><a href="#all_http_messagecomplete"><code>message.complete</code></a></li>
<li><span class="stability_0"><a href="#all_http_messageconnection"><code>message.connection</code></a></span></li>
<li><a href="#all_http_messagedestroyerror"><code>message.destroy([error])</code></a></li>
<li><a href="#all_http_messageheaders"><code>message.headers</code></a></li>
<li><a href="#all_http_messageheadersdistinct"><code>message.headersDistinct</code></a></li>
<li><a href="#all_http_messagehttpversion"><code>message.httpVersion</code></a></li>
<li><a href="#all_http_messagemethod"><code>message.method</code></a></li>
<li><a href="#all_http_messagerawheaders"><code>message.rawHeaders</code></a></li>
<li><a href="#all_http_messagerawtrailers"><code>message.rawTrailers</code></a></li>
<li><a href="#all_http_messagesettimeoutmsecs-callback"><code>message.setTimeout(msecs[, callback])</code></a></li>
<li><a href="#all_http_messagesocket"><code>message.socket</code></a></li>
<li><a href="#all_http_messagestatuscode"><code>message.statusCode</code></a></li>
<li><a href="#all_http_messagestatusmessage"><code>message.statusMessage</code></a></li>
<li><a href="#all_http_messagetrailers"><code>message.trailers</code></a></li>
<li><a href="#all_http_messagetrailersdistinct"><code>message.trailersDistinct</code></a></li>
<li><a href="#all_http_messageurl"><code>message.url</code></a></li>
</ul>
</li>
<li><a href="#all_http_class-httpoutgoingmessage">Class: <code>http.OutgoingMessage</code></a>
<ul>
<li><a href="#all_http_event-drain">Event: <code>'drain'</code></a></li>
<li><a href="#all_http_event-finish_2">Event: <code>'finish'</code></a></li>
<li><a href="#all_http_event-prefinish">Event: <code>'prefinish'</code></a></li>
<li><a href="#all_http_outgoingmessageaddtrailersheaders"><code>outgoingMessage.addTrailers(headers)</code></a></li>
<li><a href="#all_http_outgoingmessageappendheadername-value"><code>outgoingMessage.appendHeader(name, value)</code></a></li>
<li><span class="stability_0"><a href="#all_http_outgoingmessageconnection"><code>outgoingMessage.connection</code></a></span></li>
<li><a href="#all_http_outgoingmessagecork"><code>outgoingMessage.cork()</code></a></li>
<li><a href="#all_http_outgoingmessagedestroyerror"><code>outgoingMessage.destroy([error])</code></a></li>
<li><a href="#all_http_outgoingmessageendchunk-encoding-callback"><code>outgoingMessage.end(chunk[, encoding][, callback])</code></a></li>
<li><a href="#all_http_outgoingmessageflushheaders"><code>outgoingMessage.flushHeaders()</code></a></li>
<li><a href="#all_http_outgoingmessagegetheadername"><code>outgoingMessage.getHeader(name)</code></a></li>
<li><a href="#all_http_outgoingmessagegetheadernames"><code>outgoingMessage.getHeaderNames()</code></a></li>
<li><a href="#all_http_outgoingmessagegetheaders"><code>outgoingMessage.getHeaders()</code></a></li>
<li><a href="#all_http_outgoingmessagehasheadername"><code>outgoingMessage.hasHeader(name)</code></a></li>
<li><a href="#all_http_outgoingmessageheaderssent"><code>outgoingMessage.headersSent</code></a></li>
<li><a href="#all_http_outgoingmessagepipe"><code>outgoingMessage.pipe()</code></a></li>
<li><a href="#all_http_outgoingmessageremoveheadername"><code>outgoingMessage.removeHeader(name)</code></a></li>
<li><a href="#all_http_outgoingmessagesetheadername-value"><code>outgoingMessage.setHeader(name, value)</code></a></li>
<li><a href="#all_http_outgoingmessagesettimeoutmsesc-callback"><code>outgoingMessage.setTimeout(msesc[, callback])</code></a></li>
<li><a href="#all_http_outgoingmessagesocket"><code>outgoingMessage.socket</code></a></li>
<li><a href="#all_http_outgoingmessageuncork"><code>outgoingMessage.uncork()</code></a></li>
<li><a href="#all_http_outgoingmessagewritablecorked"><code>outgoingMessage.writableCorked</code></a></li>
<li><a href="#all_http_outgoingmessagewritableended"><code>outgoingMessage.writableEnded</code></a></li>
<li><a href="#all_http_outgoingmessagewritablefinished"><code>outgoingMessage.writableFinished</code></a></li>
<li><a href="#all_http_outgoingmessagewritablehighwatermark"><code>outgoingMessage.writableHighWaterMark</code></a></li>
<li><a href="#all_http_outgoingmessagewritablelength"><code>outgoingMessage.writableLength</code></a></li>
<li><a href="#all_http_outgoingmessagewritableobjectmode"><code>outgoingMessage.writableObjectMode</code></a></li>
<li><a href="#all_http_outgoingmessagewritechunk-encoding-callback"><code>outgoingMessage.write(chunk[, encoding][, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_http_httpmethods"><code>http.METHODS</code></a></li>
<li><a href="#all_http_httpstatus_codes"><code>http.STATUS_CODES</code></a></li>
<li><a href="#all_http_httpcreateserveroptions-requestlistener"><code>http.createServer([options][, requestListener])</code></a></li>
<li><a href="#all_http_httpgetoptions-callback"><code>http.get(options[, callback])</code></a></li>
<li><a href="#all_http_httpgeturl-options-callback"><code>http.get(url[, options][, callback])</code></a></li>
<li><a href="#all_http_httpglobalagent"><code>http.globalAgent</code></a></li>
<li><a href="#all_http_httpmaxheadersize"><code>http.maxHeaderSize</code></a></li>
<li><a href="#all_http_httprequestoptions-callback"><code>http.request(options[, callback])</code></a></li>
<li><a href="#all_http_httprequesturl-options-callback"><code>http.request(url[, options][, callback])</code></a></li>
<li><a href="#all_http_httpvalidateheadernamename"><code>http.validateHeaderName(name)</code></a></li>
<li><a href="#all_http_httpvalidateheadervaluename-value"><code>http.validateHeaderValue(name, value)</code></a></li>
<li><a href="#all_http_httpsetmaxidlehttpparsers"><code>http.setMaxIdleHTTPParsers</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_http2_http2">HTTP/2</a></span>
<ul>
<li><a href="#all_http2_determining-if-crypto-support-is-unavailable">Determining if crypto support is unavailable</a></li>
<li><a href="#all_http2_core-api">Core API</a>
<ul>
<li><a href="#all_http2_server-side-example">Server-side example</a></li>
<li><a href="#all_http2_client-side-example">Client-side example</a></li>
<li><a href="#all_http2_class-http2session">Class: <code>Http2Session</code></a>
<ul>
<li><a href="#all_http2_http2session-and-sockets"><code>Http2Session</code> and sockets</a></li>
<li><a href="#all_http2_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_http2_event-connect">Event: <code>'connect'</code></a></li>
<li><a href="#all_http2_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_http2_event-frameerror">Event: <code>'frameError'</code></a></li>
<li><a href="#all_http2_event-goaway">Event: <code>'goaway'</code></a></li>
<li><a href="#all_http2_event-localsettings">Event: <code>'localSettings'</code></a></li>
<li><a href="#all_http2_event-ping">Event: <code>'ping'</code></a></li>
<li><a href="#all_http2_event-remotesettings">Event: <code>'remoteSettings'</code></a></li>
<li><a href="#all_http2_event-stream">Event: <code>'stream'</code></a></li>
<li><a href="#all_http2_event-timeout">Event: <code>'timeout'</code></a></li>
<li><a href="#all_http2_http2sessionalpnprotocol"><code>http2session.alpnProtocol</code></a></li>
<li><a href="#all_http2_http2sessionclosecallback"><code>http2session.close([callback])</code></a></li>
<li><a href="#all_http2_http2sessionclosed"><code>http2session.closed</code></a></li>
<li><a href="#all_http2_http2sessionconnecting"><code>http2session.connecting</code></a></li>
<li><a href="#all_http2_http2sessiondestroyerror-code"><code>http2session.destroy([error][, code])</code></a></li>
<li><a href="#all_http2_http2sessiondestroyed"><code>http2session.destroyed</code></a></li>
<li><a href="#all_http2_http2sessionencrypted"><code>http2session.encrypted</code></a></li>
<li><a href="#all_http2_http2sessiongoawaycode-laststreamid-opaquedata"><code>http2session.goaway([code[, lastStreamID[, opaqueData]]])</code></a></li>
<li><a href="#all_http2_http2sessionlocalsettings"><code>http2session.localSettings</code></a></li>
<li><a href="#all_http2_http2sessionoriginset"><code>http2session.originSet</code></a></li>
<li><a href="#all_http2_http2sessionpendingsettingsack"><code>http2session.pendingSettingsAck</code></a></li>
<li><a href="#all_http2_http2sessionpingpayload-callback"><code>http2session.ping([payload, ]callback)</code></a></li>
<li><a href="#all_http2_http2sessionref"><code>http2session.ref()</code></a></li>
<li><a href="#all_http2_http2sessionremotesettings"><code>http2session.remoteSettings</code></a></li>
<li><a href="#all_http2_http2sessionsetlocalwindowsizewindowsize"><code>http2session.setLocalWindowSize(windowSize)</code></a></li>
<li><a href="#all_http2_http2sessionsettimeoutmsecs-callback"><code>http2session.setTimeout(msecs, callback)</code></a></li>
<li><a href="#all_http2_http2sessionsocket"><code>http2session.socket</code></a></li>
<li><a href="#all_http2_http2sessionstate"><code>http2session.state</code></a></li>
<li><a href="#all_http2_http2sessionsettingssettings-callback"><code>http2session.settings([settings][, callback])</code></a></li>
<li><a href="#all_http2_http2sessiontype"><code>http2session.type</code></a></li>
<li><a href="#all_http2_http2sessionunref"><code>http2session.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-serverhttp2session">Class: <code>ServerHttp2Session</code></a>
<ul>
<li><a href="#all_http2_serverhttp2sessionaltsvcalt-originorstream"><code>serverhttp2session.altsvc(alt, originOrStream)</code></a></li>
<li><a href="#all_http2_specifying-alternative-services">Specifying alternative services</a></li>
<li><a href="#all_http2_serverhttp2sessionoriginorigins"><code>serverhttp2session.origin(...origins)</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-clienthttp2session">Class: <code>ClientHttp2Session</code></a>
<ul>
<li><a href="#all_http2_event-altsvc">Event: <code>'altsvc'</code></a></li>
<li><a href="#all_http2_event-origin">Event: <code>'origin'</code></a></li>
<li><a href="#all_http2_clienthttp2sessionrequestheaders-options"><code>clienthttp2session.request(headers[, options])</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-http2stream">Class: <code>Http2Stream</code></a>
<ul>
<li><a href="#all_http2_http2stream-lifecycle"><code>Http2Stream</code> Lifecycle</a>
<ul>
<li><a href="#all_http2_creation">Creation</a></li>
<li><a href="#all_http2_destruction">Destruction</a></li>
</ul>
</li>
<li><a href="#all_http2_event-aborted">Event: <code>'aborted'</code></a></li>
<li><a href="#all_http2_event-close_1">Event: <code>'close'</code></a></li>
<li><a href="#all_http2_event-error_1">Event: <code>'error'</code></a></li>
<li><a href="#all_http2_event-frameerror_1">Event: <code>'frameError'</code></a></li>
<li><a href="#all_http2_event-ready">Event: <code>'ready'</code></a></li>
<li><a href="#all_http2_event-timeout_1">Event: <code>'timeout'</code></a></li>
<li><a href="#all_http2_event-trailers">Event: <code>'trailers'</code></a></li>
<li><a href="#all_http2_event-wanttrailers">Event: <code>'wantTrailers'</code></a></li>
<li><a href="#all_http2_http2streamaborted"><code>http2stream.aborted</code></a></li>
<li><a href="#all_http2_http2streambuffersize"><code>http2stream.bufferSize</code></a></li>
<li><a href="#all_http2_http2streamclosecode-callback"><code>http2stream.close(code[, callback])</code></a></li>
<li><a href="#all_http2_http2streamclosed"><code>http2stream.closed</code></a></li>
<li><a href="#all_http2_http2streamdestroyed"><code>http2stream.destroyed</code></a></li>
<li><a href="#all_http2_http2streamendafterheaders"><code>http2stream.endAfterHeaders</code></a></li>
<li><a href="#all_http2_http2streamid"><code>http2stream.id</code></a></li>
<li><a href="#all_http2_http2streampending"><code>http2stream.pending</code></a></li>
<li><a href="#all_http2_http2streampriorityoptions"><code>http2stream.priority(options)</code></a></li>
<li><a href="#all_http2_http2streamrstcode"><code>http2stream.rstCode</code></a></li>
<li><a href="#all_http2_http2streamsentheaders"><code>http2stream.sentHeaders</code></a></li>
<li><a href="#all_http2_http2streamsentinfoheaders"><code>http2stream.sentInfoHeaders</code></a></li>
<li><a href="#all_http2_http2streamsenttrailers"><code>http2stream.sentTrailers</code></a></li>
<li><a href="#all_http2_http2streamsession"><code>http2stream.session</code></a></li>
<li><a href="#all_http2_http2streamsettimeoutmsecs-callback"><code>http2stream.setTimeout(msecs, callback)</code></a></li>
<li><a href="#all_http2_http2streamstate"><code>http2stream.state</code></a></li>
<li><a href="#all_http2_http2streamsendtrailersheaders"><code>http2stream.sendTrailers(headers)</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-clienthttp2stream">Class: <code>ClientHttp2Stream</code></a>
<ul>
<li><a href="#all_http2_event-continue">Event: <code>'continue'</code></a></li>
<li><a href="#all_http2_event-headers">Event: <code>'headers'</code></a></li>
<li><a href="#all_http2_event-push">Event: <code>'push'</code></a></li>
<li><a href="#all_http2_event-response">Event: <code>'response'</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-serverhttp2stream">Class: <code>ServerHttp2Stream</code></a>
<ul>
<li><a href="#all_http2_http2streamadditionalheadersheaders"><code>http2stream.additionalHeaders(headers)</code></a></li>
<li><a href="#all_http2_http2streamheaderssent"><code>http2stream.headersSent</code></a></li>
<li><a href="#all_http2_http2streampushallowed"><code>http2stream.pushAllowed</code></a></li>
<li><a href="#all_http2_http2streampushstreamheaders-options-callback"><code>http2stream.pushStream(headers[, options], callback)</code></a></li>
<li><a href="#all_http2_http2streamrespondheaders-options"><code>http2stream.respond([headers[, options]])</code></a></li>
<li><a href="#all_http2_http2streamrespondwithfdfd-headers-options"><code>http2stream.respondWithFD(fd[, headers[, options]])</code></a></li>
<li><a href="#all_http2_http2streamrespondwithfilepath-headers-options"><code>http2stream.respondWithFile(path[, headers[, options]])</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-http2server">Class: <code>Http2Server</code></a>
<ul>
<li><a href="#all_http2_event-checkcontinue">Event: <code>'checkContinue'</code></a></li>
<li><a href="#all_http2_event-connection">Event: <code>'connection'</code></a></li>
<li><a href="#all_http2_event-request">Event: <code>'request'</code></a></li>
<li><a href="#all_http2_event-session">Event: <code>'session'</code></a></li>
<li><a href="#all_http2_event-sessionerror">Event: <code>'sessionError'</code></a></li>
<li><a href="#all_http2_event-stream_1">Event: <code>'stream'</code></a></li>
<li><a href="#all_http2_event-timeout_2">Event: <code>'timeout'</code></a></li>
<li><a href="#all_http2_serverclosecallback"><code>server.close([callback])</code></a></li>
<li><a href="#all_http2_serversettimeoutmsecs-callback"><code>server.setTimeout([msecs][, callback])</code></a></li>
<li><a href="#all_http2_servertimeout"><code>server.timeout</code></a></li>
<li><a href="#all_http2_serverupdatesettingssettings"><code>server.updateSettings([settings])</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-http2secureserver">Class: <code>Http2SecureServer</code></a>
<ul>
<li><a href="#all_http2_event-checkcontinue_1">Event: <code>'checkContinue'</code></a></li>
<li><a href="#all_http2_event-connection_1">Event: <code>'connection'</code></a></li>
<li><a href="#all_http2_event-request_1">Event: <code>'request'</code></a></li>
<li><a href="#all_http2_event-session_1">Event: <code>'session'</code></a></li>
<li><a href="#all_http2_event-sessionerror_1">Event: <code>'sessionError'</code></a></li>
<li><a href="#all_http2_event-stream_2">Event: <code>'stream'</code></a></li>
<li><a href="#all_http2_event-timeout_3">Event: <code>'timeout'</code></a></li>
<li><a href="#all_http2_event-unknownprotocol">Event: <code>'unknownProtocol'</code></a></li>
<li><a href="#all_http2_serverclosecallback_1"><code>server.close([callback])</code></a></li>
<li><a href="#all_http2_serversettimeoutmsecs-callback_1"><code>server.setTimeout([msecs][, callback])</code></a></li>
<li><a href="#all_http2_servertimeout_1"><code>server.timeout</code></a></li>
<li><a href="#all_http2_serverupdatesettingssettings_1"><code>server.updateSettings([settings])</code></a></li>
</ul>
</li>
<li><a href="#all_http2_http2createserveroptions-onrequesthandler"><code>http2.createServer([options][, onRequestHandler])</code></a></li>
<li><a href="#all_http2_http2createsecureserveroptions-onrequesthandler"><code>http2.createSecureServer(options[, onRequestHandler])</code></a></li>
<li><a href="#all_http2_http2connectauthority-options-listener"><code>http2.connect(authority[, options][, listener])</code></a></li>
<li><a href="#all_http2_http2constants"><code>http2.constants</code></a>
<ul>
<li><a href="#all_http2_error-codes-for-rst_stream-and-goaway">Error codes for <code>RST_STREAM</code> and <code>GOAWAY</code></a></li>
</ul>
</li>
<li><a href="#all_http2_http2getdefaultsettings"><code>http2.getDefaultSettings()</code></a></li>
<li><a href="#all_http2_http2getpackedsettingssettings"><code>http2.getPackedSettings([settings])</code></a></li>
<li><a href="#all_http2_http2getunpackedsettingsbuf"><code>http2.getUnpackedSettings(buf)</code></a></li>
<li><a href="#all_http2_http2sensitiveheaders"><code>http2.sensitiveHeaders</code></a></li>
<li><a href="#all_http2_headers-object">Headers object</a>
<ul>
<li><a href="#all_http2_sensitive-headers">Sensitive headers</a></li>
</ul>
</li>
<li><a href="#all_http2_settings-object">Settings object</a></li>
<li><a href="#all_http2_error-handling">Error handling</a></li>
<li><a href="#all_http2_invalid-character-handling-in-header-names-and-values">Invalid character handling in header names and values</a></li>
<li><a href="#all_http2_push-streams-on-the-client">Push streams on the client</a></li>
<li><a href="#all_http2_supporting-the-connect-method">Supporting the <code>CONNECT</code> method</a></li>
<li><a href="#all_http2_the-extended-connect-protocol">The extended <code>CONNECT</code> protocol</a></li>
</ul>
</li>
<li><a href="#all_http2_compatibility-api">Compatibility API</a>
<ul>
<li><a href="#all_http2_alpn-negotiation">ALPN negotiation</a></li>
<li><a href="#all_http2_class-http2http2serverrequest">Class: <code>http2.Http2ServerRequest</code></a>
<ul>
<li><a href="#all_http2_event-aborted_1">Event: <code>'aborted'</code></a></li>
<li><a href="#all_http2_event-close_2">Event: <code>'close'</code></a></li>
<li><a href="#all_http2_requestaborted"><code>request.aborted</code></a></li>
<li><a href="#all_http2_requestauthority"><code>request.authority</code></a></li>
<li><a href="#all_http2_requestcomplete"><code>request.complete</code></a></li>
<li><span class="stability_0"><a href="#all_http2_requestconnection"><code>request.connection</code></a></span></li>
<li><a href="#all_http2_requestdestroyerror"><code>request.destroy([error])</code></a></li>
<li><a href="#all_http2_requestheaders"><code>request.headers</code></a></li>
<li><a href="#all_http2_requesthttpversion"><code>request.httpVersion</code></a></li>
<li><a href="#all_http2_requestmethod"><code>request.method</code></a></li>
<li><a href="#all_http2_requestrawheaders"><code>request.rawHeaders</code></a></li>
<li><a href="#all_http2_requestrawtrailers"><code>request.rawTrailers</code></a></li>
<li><a href="#all_http2_requestscheme"><code>request.scheme</code></a></li>
<li><a href="#all_http2_requestsettimeoutmsecs-callback"><code>request.setTimeout(msecs, callback)</code></a></li>
<li><a href="#all_http2_requestsocket"><code>request.socket</code></a></li>
<li><a href="#all_http2_requeststream"><code>request.stream</code></a></li>
<li><a href="#all_http2_requesttrailers"><code>request.trailers</code></a></li>
<li><a href="#all_http2_requesturl"><code>request.url</code></a></li>
</ul>
</li>
<li><a href="#all_http2_class-http2http2serverresponse">Class: <code>http2.Http2ServerResponse</code></a>
<ul>
<li><a href="#all_http2_event-close_3">Event: <code>'close'</code></a></li>
<li><a href="#all_http2_event-finish">Event: <code>'finish'</code></a></li>
<li><a href="#all_http2_responseaddtrailersheaders"><code>response.addTrailers(headers)</code></a></li>
<li><span class="stability_0"><a href="#all_http2_responseconnection"><code>response.connection</code></a></span></li>
<li><a href="#all_http2_responsecreatepushresponseheaders-callback"><code>response.createPushResponse(headers, callback)</code></a></li>
<li><a href="#all_http2_responseenddata-encoding-callback"><code>response.end([data[, encoding]][, callback])</code></a></li>
<li><span class="stability_0"><a href="#all_http2_responsefinished"><code>response.finished</code></a></span></li>
<li><a href="#all_http2_responsegetheadername"><code>response.getHeader(name)</code></a></li>
<li><a href="#all_http2_responsegetheadernames"><code>response.getHeaderNames()</code></a></li>
<li><a href="#all_http2_responsegetheaders"><code>response.getHeaders()</code></a></li>
<li><a href="#all_http2_responsehasheadername"><code>response.hasHeader(name)</code></a></li>
<li><a href="#all_http2_responseheaderssent"><code>response.headersSent</code></a></li>
<li><a href="#all_http2_responseremoveheadername"><code>response.removeHeader(name)</code></a></li>
</ul>
</li>
<li><a href="#all_http2_responsereq"><code>response.req</code></a>
<ul>
<li><a href="#all_http2_responsesenddate"><code>response.sendDate</code></a></li>
<li><a href="#all_http2_responsesetheadername-value"><code>response.setHeader(name, value)</code></a></li>
<li><a href="#all_http2_responsesettimeoutmsecs-callback"><code>response.setTimeout(msecs[, callback])</code></a></li>
<li><a href="#all_http2_responsesocket"><code>response.socket</code></a></li>
<li><a href="#all_http2_responsestatuscode"><code>response.statusCode</code></a></li>
<li><a href="#all_http2_responsestatusmessage"><code>response.statusMessage</code></a></li>
<li><a href="#all_http2_responsestream"><code>response.stream</code></a></li>
<li><a href="#all_http2_responsewritableended"><code>response.writableEnded</code></a></li>
<li><a href="#all_http2_responsewritechunk-encoding-callback"><code>response.write(chunk[, encoding][, callback])</code></a></li>
<li><a href="#all_http2_responsewritecontinue"><code>response.writeContinue()</code></a></li>
<li><a href="#all_http2_responsewriteheadstatuscode-statusmessage-headers"><code>response.writeHead(statusCode[, statusMessage][, headers])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_http2_collecting-http2-performance-metrics">Collecting HTTP/2 performance metrics</a></li>
<li><a href="#all_http2_note-on-authority-and-host">Note on <code>:authority</code> and <code>host</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_https_https">HTTPS</a></span>
<ul>
<li><a href="#all_https_determining-if-crypto-support-is-unavailable">Determining if crypto support is unavailable</a></li>
<li><a href="#all_https_class-httpsagent">Class: <code>https.Agent</code></a>
<ul>
<li><a href="#all_https_new-agentoptions"><code>new Agent([options])</code></a>
<ul>
<li><a href="#all_https_event-keylog">Event: <code>'keylog'</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_https_class-httpsserver">Class: <code>https.Server</code></a>
<ul>
<li><a href="#all_https_serverclosecallback"><code>server.close([callback])</code></a></li>
<li><a href="#all_https_servercloseallconnections"><code>server.closeAllConnections()</code></a></li>
<li><a href="#all_https_servercloseidleconnections"><code>server.closeIdleConnections()</code></a></li>
<li><a href="#all_https_serverheaderstimeout"><code>server.headersTimeout</code></a></li>
<li><a href="#all_https_serverlisten"><code>server.listen()</code></a></li>
<li><a href="#all_https_servermaxheaderscount"><code>server.maxHeadersCount</code></a></li>
<li><a href="#all_https_serverrequesttimeout"><code>server.requestTimeout</code></a></li>
<li><a href="#all_https_serversettimeoutmsecs-callback"><code>server.setTimeout([msecs][, callback])</code></a></li>
<li><a href="#all_https_servertimeout"><code>server.timeout</code></a></li>
<li><a href="#all_https_serverkeepalivetimeout"><code>server.keepAliveTimeout</code></a></li>
</ul>
</li>
<li><a href="#all_https_httpscreateserveroptions-requestlistener"><code>https.createServer([options][, requestListener])</code></a></li>
<li><a href="#all_https_httpsgetoptions-callback"><code>https.get(options[, callback])</code></a></li>
<li><a href="#all_https_httpsgeturl-options-callback"><code>https.get(url[, options][, callback])</code></a></li>
<li><a href="#all_https_httpsglobalagent"><code>https.globalAgent</code></a></li>
<li><a href="#all_https_httpsrequestoptions-callback"><code>https.request(options[, callback])</code></a></li>
<li><a href="#all_https_httpsrequesturl-options-callback"><code>https.request(url[, options][, callback])</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_inspector_inspector">Inspector</a></span>
<ul>
<li><a href="#all_inspector_inspectorclose"><code>inspector.close()</code></a></li>
<li><a href="#all_inspector_inspectorconsole"><code>inspector.console</code></a></li>
<li><a href="#all_inspector_inspectoropenport-host-wait"><code>inspector.open([port[, host[, wait]]])</code></a></li>
<li><a href="#all_inspector_inspectorurl"><code>inspector.url()</code></a></li>
<li><a href="#all_inspector_inspectorwaitfordebugger"><code>inspector.waitForDebugger()</code></a></li>
<li><a href="#all_inspector_class-inspectorsession">Class: <code>inspector.Session</code></a>
<ul>
<li><a href="#all_inspector_new-inspectorsession"><code>new inspector.Session()</code></a></li>
<li><a href="#all_inspector_event-inspectornotification">Event: <code>'inspectorNotification'</code></a></li>
<li><a href="#all_inspector_event-inspector-protocol-method">Event: <code>&#x3C;inspector-protocol-method></code>;</a></li>
<li><a href="#all_inspector_sessionconnect"><code>session.connect()</code></a></li>
<li><a href="#all_inspector_sessionconnecttomainthread"><code>session.connectToMainThread()</code></a></li>
<li><a href="#all_inspector_sessiondisconnect"><code>session.disconnect()</code></a></li>
<li><a href="#all_inspector_sessionpostmethod-params-callback"><code>session.post(method[, params][, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_inspector_example-usage">Example usage</a>
<ul>
<li><a href="#all_inspector_cpu-profiler">CPU profiler</a></li>
<li><a href="#all_inspector_heap-profiler">Heap profiler</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_intl_internationalization-support">Internationalization support</a>
<ul>
<li><a href="#all_intl_options-for-building-nodejs">Options for building Node.js</a>
<ul>
<li><a href="#all_intl_disable-all-internationalization-features-none">Disable all internationalization features (<code>none</code>)</a></li>
<li><a href="#all_intl_build-with-a-pre-installed-icu-system-icu">Build with a pre-installed ICU (<code>system-icu</code>)</a></li>
<li><a href="#all_intl_embed-a-limited-set-of-icu-data-small-icu">Embed a limited set of ICU data (<code>small-icu</code>)</a>
<ul>
<li><a href="#all_intl_providing-icu-data-at-runtime">Providing ICU data at runtime</a></li>
</ul>
</li>
<li><a href="#all_intl_embed-the-entire-icu-full-icu">Embed the entire ICU (<code>full-icu</code>)</a></li>
</ul>
</li>
<li><a href="#all_intl_detecting-internationalization-support">Detecting internationalization support</a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_modules_modules-commonjs-modules">Modules: CommonJS modules</a></span>
<ul>
<li><a href="#all_modules_enabling">Enabling</a></li>
<li><a href="#all_modules_accessing-the-main-module">Accessing the main module</a></li>
<li><a href="#all_modules_package-manager-tips">Package manager tips</a></li>
<li><a href="#all_modules_the-mjs-extension">The <code>.mjs</code> extension</a></li>
<li><a href="#all_modules_all-together">All together</a></li>
<li><a href="#all_modules_caching">Caching</a>
<ul>
<li><a href="#all_modules_module-caching-caveats">Module caching caveats</a></li>
</ul>
</li>
<li><a href="#all_modules_core-modules">Core modules</a></li>
<li><a href="#all_modules_cycles">Cycles</a></li>
<li><a href="#all_modules_file-modules">File modules</a></li>
<li><span class="stability_3"><a href="#all_modules_folders-as-modules">Folders as modules</a></span></li>
<li><a href="#all_modules_loading-from-node_modules-folders">Loading from <code>node_modules</code> folders</a></li>
<li><a href="#all_modules_loading-from-the-global-folders">Loading from the global folders</a></li>
<li><a href="#all_modules_the-module-wrapper">The module wrapper</a></li>
<li><a href="#all_modules_the-module-scope">The module scope</a>
<ul>
<li><a href="#all_modules___dirname"><code>__dirname</code></a></li>
<li><a href="#all_modules___filename"><code>__filename</code></a></li>
<li><a href="#all_modules_exports"><code>exports</code></a></li>
<li><a href="#all_modules_module"><code>module</code></a></li>
<li><a href="#all_modules_requireid"><code>require(id)</code></a>
<ul>
<li><a href="#all_modules_requirecache"><code>require.cache</code></a></li>
<li><span class="stability_0"><a href="#all_modules_requireextensions"><code>require.extensions</code></a></span></li>
<li><a href="#all_modules_requiremain"><code>require.main</code></a></li>
<li><a href="#all_modules_requireresolverequest-options"><code>require.resolve(request[, options])</code></a>
<ul>
<li><a href="#all_modules_requireresolvepathsrequest"><code>require.resolve.paths(request)</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_modules_the-module-object">The <code>module</code> object</a>
<ul>
<li><a href="#all_modules_modulechildren"><code>module.children</code></a></li>
<li><a href="#all_modules_moduleexports"><code>module.exports</code></a>
<ul>
<li><a href="#all_modules_exports-shortcut"><code>exports</code> shortcut</a></li>
</ul>
</li>
<li><a href="#all_modules_modulefilename"><code>module.filename</code></a></li>
<li><a href="#all_modules_moduleid"><code>module.id</code></a></li>
<li><a href="#all_modules_moduleispreloading"><code>module.isPreloading</code></a></li>
<li><a href="#all_modules_moduleloaded"><code>module.loaded</code></a></li>
<li><span class="stability_0"><a href="#all_modules_moduleparent"><code>module.parent</code></a></span></li>
<li><a href="#all_modules_modulepath"><code>module.path</code></a></li>
<li><a href="#all_modules_modulepaths"><code>module.paths</code></a></li>
<li><a href="#all_modules_modulerequireid"><code>module.require(id)</code></a></li>
</ul>
</li>
<li><a href="#all_modules_the-module-object_1">The <code>Module</code> object</a></li>
<li><a href="#all_modules_source-map-v3-support">Source map v3 support</a></li>
</ul>
</li>
<li><a href="#all_esm_modules-ecmascript-modules">Modules: ECMAScript modules</a>
<ul>
<li><a href="#all_esm_introduction">Introduction</a></li>
<li><a href="#all_esm_enabling">Enabling</a></li>
<li><a href="#all_esm_packages">Packages</a></li>
<li><a href="#all_esm_import-specifiers"><code>import</code> Specifiers</a>
<ul>
<li><a href="#all_esm_terminology">Terminology</a></li>
<li><a href="#all_esm_mandatory-file-extensions">Mandatory file extensions</a></li>
<li><a href="#all_esm_urls">URLs</a>
<ul>
<li><a href="#all_esm_file-urls"><code>file:</code> URLs</a></li>
<li><a href="#all_esm_data-imports"><code>data:</code> imports</a></li>
<li><a href="#all_esm_node-imports"><code>node:</code> imports</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_esm_import-assertions">Import assertions</a></span></li>
<li><a href="#all_esm_builtin-modules">Builtin modules</a></li>
<li><a href="#all_esm_import-expressions"><code>import()</code> expressions</a></li>
<li><a href="#all_esm_importmeta"><code>import.meta</code></a>
<ul>
<li><a href="#all_esm_importmetaurl"><code>import.meta.url</code></a></li>
<li><span class="stability_1"><a href="#all_esm_importmetaresolvespecifier-parent"><code>import.meta.resolve(specifier[, parent])</code></a></span></li>
</ul>
</li>
<li><a href="#all_esm_interoperability-with-commonjs">Interoperability with CommonJS</a>
<ul>
<li><a href="#all_esm_import-statements"><code>import</code> statements</a></li>
<li><a href="#all_esm_require"><code>require</code></a></li>
<li><a href="#all_esm_commonjs-namespaces">CommonJS Namespaces</a></li>
<li><a href="#all_esm_differences-between-es-modules-and-commonjs">Differences between ES modules and CommonJS</a>
<ul>
<li><a href="#all_esm_no-require-exports-or-moduleexports">No <code>require</code>, <code>exports</code>, or <code>module.exports</code></a></li>
<li><a href="#all_esm_no-__filename-or-__dirname">No <code>__filename</code> or <code>__dirname</code></a></li>
<li><a href="#all_esm_no-native-module-loading">No Native Module Loading</a></li>
<li><a href="#all_esm_no-requireresolve">No <code>require.resolve</code></a></li>
<li><a href="#all_esm_no-node_path">No <code>NODE_PATH</code></a></li>
<li><a href="#all_esm_no-requireextensions">No <code>require.extensions</code></a></li>
<li><a href="#all_esm_no-requirecache">No <code>require.cache</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_esm_json-modules">JSON modules</a></span></li>
<li><span class="stability_1"><a href="#all_esm_wasm-modules">Wasm modules</a></span></li>
<li><a href="#all_esm_top-level-await">Top-level <code>await</code></a></li>
<li><span class="stability_1"><a href="#all_esm_https-and-http-imports">HTTPS and HTTP imports</a></span>
<ul>
<li><a href="#all_esm_imports-are-limited-to-http1">Imports are limited to HTTP/1</a></li>
<li><a href="#all_esm_http-is-limited-to-loopback-addresses">HTTP is limited to loopback addresses</a></li>
<li><a href="#all_esm_authentication-is-never-sent-to-the-destination-server">Authentication is never sent to the destination server.</a></li>
<li><a href="#all_esm_cors-is-never-checked-on-the-destination-server">CORS is never checked on the destination server</a></li>
<li><a href="#all_esm_cannot-load-non-network-dependencies">Cannot load non-network dependencies</a></li>
<li><a href="#all_esm_network-based-loading-is-not-enabled-by-default">Network-based loading is not enabled by default</a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_esm_loaders">Loaders</a></span>
<ul>
<li><a href="#all_esm_hooks">Hooks</a>
<ul>
<li><a href="#all_esm_resolvespecifier-context-nextresolve"><code>resolve(specifier, context, nextResolve)</code></a></li>
<li><a href="#all_esm_loadurl-context-nextload"><code>load(url, context, nextLoad)</code></a></li>
<li><a href="#all_esm_globalpreload"><code>globalPreload()</code></a></li>
</ul>
</li>
<li><a href="#all_esm_examples">Examples</a>
<ul>
<li><a href="#all_esm_https-loader">HTTPS loader</a></li>
<li><a href="#all_esm_transpiler-loader">Transpiler loader</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_esm_resolution-algorithm">Resolution algorithm</a>
<ul>
<li><a href="#all_esm_features">Features</a></li>
<li><a href="#all_esm_resolver-algorithm">Resolver algorithm</a></li>
<li><a href="#all_esm_resolver-algorithm-specification">Resolver Algorithm Specification</a></li>
<li><span class="stability_1"><a href="#all_esm_customizing-esm-specifier-resolution-algorithm">Customizing ESM specifier resolution algorithm</a></span></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_module_modules-nodemodule-api">Modules: <code>node:module</code> API</a>
<ul>
<li><a href="#all_module_the-module-object">The <code>Module</code> object</a>
<ul>
<li><a href="#all_module_modulebuiltinmodules"><code>module.builtinModules</code></a></li>
<li><a href="#all_module_modulecreaterequirefilename"><code>module.createRequire(filename)</code></a></li>
<li><a href="#all_module_moduleisbuiltinmodulename"><code>module.isBuiltin(moduleName)</code></a></li>
<li><a href="#all_module_modulesyncbuiltinesmexports"><code>module.syncBuiltinESMExports()</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_module_source-map-v3-support">Source map v3 support</a></span>
<ul>
<li><a href="#all_module_modulefindsourcemappath"><code>module.findSourceMap(path)</code></a></li>
<li><a href="#all_module_class-modulesourcemap">Class: <code>module.SourceMap</code></a>
<ul>
<li><a href="#all_module_new-sourcemappayload"><code>new SourceMap(payload)</code></a></li>
<li><a href="#all_module_sourcemappayload"><code>sourceMap.payload</code></a></li>
<li><a href="#all_module_sourcemapfindentrylinenumber-columnnumber"><code>sourceMap.findEntry(lineNumber, columnNumber)</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_packages_modules-packages">Modules: Packages</a>
<ul>
<li><a href="#all_packages_introduction">Introduction</a></li>
<li><a href="#all_packages_determining-module-system">Determining module system</a>
<ul>
<li><a href="#all_packages_modules-loaders">Modules loaders</a></li>
<li><a href="#all_packages_packagejson-and-file-extensions"><code>package.json</code> and file extensions</a></li>
<li><a href="#all_packages_--input-type-flag"><code>--input-type</code> flag</a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_packages_determining-package-manager">Determining package manager</a></span></li>
<li><a href="#all_packages_package-entry-points">Package entry points</a>
<ul>
<li><a href="#all_packages_main-entry-point-export">Main entry point export</a></li>
<li><a href="#all_packages_subpath-exports">Subpath exports</a>
<ul>
<li><a href="#all_packages_extensions-in-subpaths">Extensions in subpaths</a></li>
</ul>
</li>
<li><a href="#all_packages_exports-sugar">Exports sugar</a></li>
<li><a href="#all_packages_subpath-imports">Subpath imports</a></li>
<li><a href="#all_packages_subpath-patterns">Subpath patterns</a></li>
<li><a href="#all_packages_conditional-exports">Conditional exports</a></li>
<li><a href="#all_packages_nested-conditions">Nested conditions</a></li>
<li><a href="#all_packages_resolving-user-conditions">Resolving user conditions</a></li>
<li><a href="#all_packages_community-conditions-definitions">Community Conditions Definitions</a></li>
<li><a href="#all_packages_self-referencing-a-package-using-its-name">Self-referencing a package using its name</a></li>
</ul>
</li>
<li><a href="#all_packages_dual-commonjses-module-packages">Dual CommonJS/ES module packages</a>
<ul>
<li><a href="#all_packages_dual-package-hazard">Dual package hazard</a></li>
<li><a href="#all_packages_writing-dual-packages-while-avoiding-or-minimizing-hazards">Writing dual packages while avoiding or minimizing hazards</a>
<ul>
<li><a href="#all_packages_approach-1-use-an-es-module-wrapper">Approach #1: Use an ES module wrapper</a></li>
<li><a href="#all_packages_approach-2-isolate-state">Approach #2: Isolate state</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_packages_nodejs-packagejson-field-definitions">Node.js <code>package.json</code> field definitions</a>
<ul>
<li><a href="#all_packages_name"><code>"name"</code></a></li>
<li><a href="#all_packages_main"><code>"main"</code></a></li>
<li><span class="stability_1"><a href="#all_packages_packagemanager"><code>"packageManager"</code></a></span></li>
<li><a href="#all_packages_type"><code>"type"</code></a></li>
<li><a href="#all_packages_exports"><code>"exports"</code></a></li>
<li><a href="#all_packages_imports"><code>"imports"</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_net_net">Net</a></span>
<ul>
<li><a href="#all_net_ipc-support">IPC support</a>
<ul>
<li><a href="#all_net_identifying-paths-for-ipc-connections">Identifying paths for IPC connections</a></li>
</ul>
</li>
<li><a href="#all_net_class-netblocklist">Class: <code>net.BlockList</code></a>
<ul>
<li><a href="#all_net_blocklistaddaddressaddress-type"><code>blockList.addAddress(address[, type])</code></a></li>
<li><a href="#all_net_blocklistaddrangestart-end-type"><code>blockList.addRange(start, end[, type])</code></a></li>
<li><a href="#all_net_blocklistaddsubnetnet-prefix-type"><code>blockList.addSubnet(net, prefix[, type])</code></a></li>
<li><a href="#all_net_blocklistcheckaddress-type"><code>blockList.check(address[, type])</code></a></li>
<li><a href="#all_net_blocklistrules"><code>blockList.rules</code></a></li>
</ul>
</li>
<li><a href="#all_net_class-netsocketaddress">Class: <code>net.SocketAddress</code></a>
<ul>
<li><a href="#all_net_new-netsocketaddressoptions"><code>new net.SocketAddress([options])</code></a></li>
<li><a href="#all_net_socketaddressaddress"><code>socketaddress.address</code></a></li>
<li><a href="#all_net_socketaddressfamily"><code>socketaddress.family</code></a></li>
<li><a href="#all_net_socketaddressflowlabel"><code>socketaddress.flowlabel</code></a></li>
<li><a href="#all_net_socketaddressport"><code>socketaddress.port</code></a></li>
</ul>
</li>
<li><a href="#all_net_class-netserver">Class: <code>net.Server</code></a>
<ul>
<li><a href="#all_net_new-netserveroptions-connectionlistener"><code>new net.Server([options][, connectionListener])</code></a></li>
<li><a href="#all_net_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_net_event-connection">Event: <code>'connection'</code></a></li>
<li><a href="#all_net_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_net_event-listening">Event: <code>'listening'</code></a></li>
<li><a href="#all_net_event-drop">Event: <code>'drop'</code></a></li>
<li><a href="#all_net_serveraddress"><code>server.address()</code></a></li>
<li><a href="#all_net_serverclosecallback"><code>server.close([callback])</code></a></li>
<li><a href="#all_net_servergetconnectionscallback"><code>server.getConnections(callback)</code></a></li>
<li><a href="#all_net_serverlisten"><code>server.listen()</code></a>
<ul>
<li><a href="#all_net_serverlistenhandle-backlog-callback"><code>server.listen(handle[, backlog][, callback])</code></a></li>
<li><a href="#all_net_serverlistenoptions-callback"><code>server.listen(options[, callback])</code></a></li>
<li><a href="#all_net_serverlistenpath-backlog-callback"><code>server.listen(path[, backlog][, callback])</code></a></li>
<li><a href="#all_net_serverlistenport-host-backlog-callback"><code>server.listen([port[, host[, backlog]]][, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_net_serverlistening"><code>server.listening</code></a></li>
<li><a href="#all_net_servermaxconnections"><code>server.maxConnections</code></a></li>
<li><a href="#all_net_serverref"><code>server.ref()</code></a></li>
<li><a href="#all_net_serverunref"><code>server.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_net_class-netsocket">Class: <code>net.Socket</code></a>
<ul>
<li><a href="#all_net_new-netsocketoptions"><code>new net.Socket([options])</code></a></li>
<li><a href="#all_net_event-close_1">Event: <code>'close'</code></a></li>
<li><a href="#all_net_event-connect">Event: <code>'connect'</code></a></li>
<li><a href="#all_net_event-data">Event: <code>'data'</code></a></li>
<li><a href="#all_net_event-drain">Event: <code>'drain'</code></a></li>
<li><a href="#all_net_event-end">Event: <code>'end'</code></a></li>
<li><a href="#all_net_event-error_1">Event: <code>'error'</code></a></li>
<li><a href="#all_net_event-lookup">Event: <code>'lookup'</code></a></li>
<li><a href="#all_net_event-ready">Event: <code>'ready'</code></a></li>
<li><a href="#all_net_event-timeout">Event: <code>'timeout'</code></a></li>
<li><a href="#all_net_socketaddress"><code>socket.address()</code></a></li>
<li><span class="stability_0"><a href="#all_net_socketbuffersize"><code>socket.bufferSize</code></a></span></li>
<li><a href="#all_net_socketbytesread"><code>socket.bytesRead</code></a></li>
<li><a href="#all_net_socketbyteswritten"><code>socket.bytesWritten</code></a></li>
<li><a href="#all_net_socketconnect"><code>socket.connect()</code></a>
<ul>
<li><a href="#all_net_socketconnectoptions-connectlistener"><code>socket.connect(options[, connectListener])</code></a></li>
<li><a href="#all_net_socketconnectpath-connectlistener"><code>socket.connect(path[, connectListener])</code></a></li>
<li><a href="#all_net_socketconnectport-host-connectlistener"><code>socket.connect(port[, host][, connectListener])</code></a></li>
</ul>
</li>
<li><a href="#all_net_socketconnecting"><code>socket.connecting</code></a></li>
<li><a href="#all_net_socketdestroyerror"><code>socket.destroy([error])</code></a></li>
<li><a href="#all_net_socketdestroyed"><code>socket.destroyed</code></a></li>
<li><a href="#all_net_socketenddata-encoding-callback"><code>socket.end([data[, encoding]][, callback])</code></a></li>
<li><a href="#all_net_socketlocaladdress"><code>socket.localAddress</code></a></li>
<li><a href="#all_net_socketlocalport"><code>socket.localPort</code></a></li>
<li><a href="#all_net_socketlocalfamily"><code>socket.localFamily</code></a></li>
<li><a href="#all_net_socketpause"><code>socket.pause()</code></a></li>
<li><a href="#all_net_socketpending"><code>socket.pending</code></a></li>
<li><a href="#all_net_socketref"><code>socket.ref()</code></a></li>
<li><a href="#all_net_socketremoteaddress"><code>socket.remoteAddress</code></a></li>
<li><a href="#all_net_socketremotefamily"><code>socket.remoteFamily</code></a></li>
<li><a href="#all_net_socketremoteport"><code>socket.remotePort</code></a></li>
<li><a href="#all_net_socketresetanddestroy"><code>socket.resetAndDestroy()</code></a></li>
<li><a href="#all_net_socketresume"><code>socket.resume()</code></a></li>
<li><a href="#all_net_socketsetencodingencoding"><code>socket.setEncoding([encoding])</code></a></li>
<li><a href="#all_net_socketsetkeepaliveenable-initialdelay"><code>socket.setKeepAlive([enable][, initialDelay])</code></a></li>
<li><a href="#all_net_socketsetnodelaynodelay"><code>socket.setNoDelay([noDelay])</code></a></li>
<li><a href="#all_net_socketsettimeouttimeout-callback"><code>socket.setTimeout(timeout[, callback])</code></a></li>
<li><a href="#all_net_sockettimeout"><code>socket.timeout</code></a></li>
<li><a href="#all_net_socketunref"><code>socket.unref()</code></a></li>
<li><a href="#all_net_socketwritedata-encoding-callback"><code>socket.write(data[, encoding][, callback])</code></a></li>
<li><a href="#all_net_socketreadystate"><code>socket.readyState</code></a></li>
</ul>
</li>
<li><a href="#all_net_netconnect"><code>net.connect()</code></a>
<ul>
<li><a href="#all_net_netconnectoptions-connectlistener"><code>net.connect(options[, connectListener])</code></a></li>
<li><a href="#all_net_netconnectpath-connectlistener"><code>net.connect(path[, connectListener])</code></a></li>
<li><a href="#all_net_netconnectport-host-connectlistener"><code>net.connect(port[, host][, connectListener])</code></a></li>
</ul>
</li>
<li><a href="#all_net_netcreateconnection"><code>net.createConnection()</code></a>
<ul>
<li><a href="#all_net_netcreateconnectionoptions-connectlistener"><code>net.createConnection(options[, connectListener])</code></a></li>
<li><a href="#all_net_netcreateconnectionpath-connectlistener"><code>net.createConnection(path[, connectListener])</code></a></li>
<li><a href="#all_net_netcreateconnectionport-host-connectlistener"><code>net.createConnection(port[, host][, connectListener])</code></a></li>
</ul>
</li>
<li><a href="#all_net_netcreateserveroptions-connectionlistener"><code>net.createServer([options][, connectionListener])</code></a></li>
<li><a href="#all_net_netisipinput"><code>net.isIP(input)</code></a></li>
<li><a href="#all_net_netisipv4input"><code>net.isIPv4(input)</code></a></li>
<li><a href="#all_net_netisipv6input"><code>net.isIPv6(input)</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_os_os">OS</a></span>
<ul>
<li><a href="#all_os_oseol"><code>os.EOL</code></a></li>
<li><a href="#all_os_osarch"><code>os.arch()</code></a></li>
<li><a href="#all_os_osconstants"><code>os.constants</code></a></li>
<li><a href="#all_os_oscpus"><code>os.cpus()</code></a></li>
<li><a href="#all_os_osdevnull"><code>os.devNull</code></a></li>
<li><a href="#all_os_osendianness"><code>os.endianness()</code></a></li>
<li><a href="#all_os_osfreemem"><code>os.freemem()</code></a></li>
<li><a href="#all_os_osgetprioritypid"><code>os.getPriority([pid])</code></a></li>
<li><a href="#all_os_oshomedir"><code>os.homedir()</code></a></li>
<li><a href="#all_os_oshostname"><code>os.hostname()</code></a></li>
<li><a href="#all_os_osloadavg"><code>os.loadavg()</code></a></li>
<li><a href="#all_os_osnetworkinterfaces"><code>os.networkInterfaces()</code></a></li>
<li><a href="#all_os_osplatform"><code>os.platform()</code></a></li>
<li><a href="#all_os_osrelease"><code>os.release()</code></a></li>
<li><a href="#all_os_ossetprioritypid-priority"><code>os.setPriority([pid, ]priority)</code></a></li>
<li><a href="#all_os_ostmpdir"><code>os.tmpdir()</code></a></li>
<li><a href="#all_os_ostotalmem"><code>os.totalmem()</code></a></li>
<li><a href="#all_os_ostype"><code>os.type()</code></a></li>
<li><a href="#all_os_osuptime"><code>os.uptime()</code></a></li>
<li><a href="#all_os_osuserinfooptions"><code>os.userInfo([options])</code></a></li>
<li><a href="#all_os_osversion"><code>os.version()</code></a></li>
<li><a href="#all_os_osmachine"><code>os.machine()</code></a></li>
<li><a href="#all_os_os-constants">OS constants</a>
<ul>
<li><a href="#all_os_signal-constants">Signal constants</a></li>
<li><a href="#all_os_error-constants">Error constants</a>
<ul>
<li><a href="#all_os_posix-error-constants">POSIX error constants</a></li>
<li><a href="#all_os_windows-specific-error-constants">Windows-specific error constants</a></li>
</ul>
</li>
<li><a href="#all_os_dlopen-constants">dlopen constants</a></li>
<li><a href="#all_os_priority-constants">Priority constants</a></li>
<li><a href="#all_os_libuv-constants">libuv constants</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_path_path">Path</a></span>
<ul>
<li><a href="#all_path_windows-vs-posix">Windows vs. POSIX</a></li>
<li><a href="#all_path_pathbasenamepath-ext"><code>path.basename(path[, ext])</code></a></li>
<li><a href="#all_path_pathdelimiter"><code>path.delimiter</code></a></li>
<li><a href="#all_path_pathdirnamepath"><code>path.dirname(path)</code></a></li>
<li><a href="#all_path_pathextnamepath"><code>path.extname(path)</code></a></li>
<li><a href="#all_path_pathformatpathobject"><code>path.format(pathObject)</code></a></li>
<li><a href="#all_path_pathisabsolutepath"><code>path.isAbsolute(path)</code></a></li>
<li><a href="#all_path_pathjoinpaths"><code>path.join([...paths])</code></a></li>
<li><a href="#all_path_pathnormalizepath"><code>path.normalize(path)</code></a></li>
<li><a href="#all_path_pathparsepath"><code>path.parse(path)</code></a></li>
<li><a href="#all_path_pathposix"><code>path.posix</code></a></li>
<li><a href="#all_path_pathrelativefrom-to"><code>path.relative(from, to)</code></a></li>
<li><a href="#all_path_pathresolvepaths"><code>path.resolve([...paths])</code></a></li>
<li><a href="#all_path_pathsep"><code>path.sep</code></a></li>
<li><a href="#all_path_pathtonamespacedpathpath"><code>path.toNamespacedPath(path)</code></a></li>
<li><a href="#all_path_pathwin32"><code>path.win32</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_perf_hooks_performance-measurement-apis">Performance measurement APIs</a></span>
<ul>
<li><a href="#all_perf_hooks_perf_hooksperformance"><code>perf_hooks.performance</code></a>
<ul>
<li><a href="#all_perf_hooks_performanceclearmarksname"><code>performance.clearMarks([name])</code></a></li>
<li><a href="#all_perf_hooks_performanceclearmeasuresname"><code>performance.clearMeasures([name])</code></a></li>
<li><a href="#all_perf_hooks_performanceclearresourcetimingsname"><code>performance.clearResourceTimings([name])</code></a></li>
<li><a href="#all_perf_hooks_performanceeventlooputilizationutilization1-utilization2"><code>performance.eventLoopUtilization([utilization1[, utilization2]])</code></a></li>
<li><a href="#all_perf_hooks_performancegetentries"><code>performance.getEntries()</code></a></li>
<li><a href="#all_perf_hooks_performancegetentriesbynamename-type"><code>performance.getEntriesByName(name[, type])</code></a></li>
<li><a href="#all_perf_hooks_performancegetentriesbytypetype"><code>performance.getEntriesByType(type)</code></a></li>
<li><a href="#all_perf_hooks_performancemarkname-options"><code>performance.mark([name[, options]])</code></a></li>
<li><a href="#all_perf_hooks_performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode"><code>performance.markResourceTiming(timingInfo, requestedUrl, initiatorType, global, cacheMode)</code></a></li>
<li><a href="#all_perf_hooks_performancemeasurename-startmarkoroptions-endmark"><code>performance.measure(name[, startMarkOrOptions[, endMark]])</code></a></li>
<li><a href="#all_perf_hooks_performancenodetiming"><code>performance.nodeTiming</code></a></li>
<li><a href="#all_perf_hooks_performancenow"><code>performance.now()</code></a></li>
<li><a href="#all_perf_hooks_performancesetresourcetimingbuffersizemaxsize"><code>performance.setResourceTimingBufferSize(maxSize)</code></a></li>
<li><a href="#all_perf_hooks_performancetimeorigin"><code>performance.timeOrigin</code></a></li>
<li><a href="#all_perf_hooks_performancetimerifyfn-options"><code>performance.timerify(fn[, options])</code></a></li>
<li><a href="#all_perf_hooks_performancetojson"><code>performance.toJSON()</code></a>
<ul>
<li><a href="#all_perf_hooks_event-resourcetimingbufferfull">Event: <code>'resourcetimingbufferfull'</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-performanceentry">Class: <code>PerformanceEntry</code></a>
<ul>
<li><a href="#all_perf_hooks_performanceentrydetail"><code>performanceEntry.detail</code></a></li>
<li><a href="#all_perf_hooks_performanceentryduration"><code>performanceEntry.duration</code></a></li>
<li><a href="#all_perf_hooks_performanceentryentrytype"><code>performanceEntry.entryType</code></a></li>
<li><a href="#all_perf_hooks_performanceentryflags"><code>performanceEntry.flags</code></a></li>
<li><a href="#all_perf_hooks_performanceentryname"><code>performanceEntry.name</code></a></li>
<li><a href="#all_perf_hooks_performanceentrykind"><code>performanceEntry.kind</code></a></li>
<li><a href="#all_perf_hooks_performanceentrystarttime"><code>performanceEntry.startTime</code></a></li>
<li><a href="#all_perf_hooks_garbage-collection-gc-details">Garbage Collection ('gc') Details</a></li>
<li><a href="#all_perf_hooks_http-http-details">HTTP ('http') Details</a></li>
<li><a href="#all_perf_hooks_http2-http2-details">HTTP/2 ('http2') Details</a></li>
<li><a href="#all_perf_hooks_timerify-function-details">Timerify ('function') Details</a></li>
<li><a href="#all_perf_hooks_net-net-details">Net ('net') Details</a></li>
<li><a href="#all_perf_hooks_dns-dns-details">DNS ('dns') Details</a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-performancenodetiming">Class: <code>PerformanceNodeTiming</code></a>
<ul>
<li><a href="#all_perf_hooks_performancenodetimingbootstrapcomplete"><code>performanceNodeTiming.bootstrapComplete</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingenvironment"><code>performanceNodeTiming.environment</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingidletime"><code>performanceNodeTiming.idleTime</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingloopexit"><code>performanceNodeTiming.loopExit</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingloopstart"><code>performanceNodeTiming.loopStart</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingnodestart"><code>performanceNodeTiming.nodeStart</code></a></li>
<li><a href="#all_perf_hooks_performancenodetimingv8start"><code>performanceNodeTiming.v8Start</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-performanceresourcetiming">Class: <code>PerformanceResourceTiming</code></a>
<ul>
<li><a href="#all_perf_hooks_performanceresourcetimingworkerstart"><code>performanceResourceTiming.workerStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingredirectstart"><code>performanceResourceTiming.redirectStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingredirectend"><code>performanceResourceTiming.redirectEnd</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingfetchstart"><code>performanceResourceTiming.fetchStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingdomainlookupstart"><code>performanceResourceTiming.domainLookupStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingdomainlookupend"><code>performanceResourceTiming.domainLookupEnd</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingconnectstart"><code>performanceResourceTiming.connectStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingconnectend"><code>performanceResourceTiming.connectEnd</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingsecureconnectionstart"><code>performanceResourceTiming.secureConnectionStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingrequeststart"><code>performanceResourceTiming.requestStart</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingresponseend"><code>performanceResourceTiming.responseEnd</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingtransfersize"><code>performanceResourceTiming.transferSize</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingencodedbodysize"><code>performanceResourceTiming.encodedBodySize</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingdecodedbodysize"><code>performanceResourceTiming.decodedBodySize</code></a></li>
<li><a href="#all_perf_hooks_performanceresourcetimingtojson"><code>performanceResourceTiming.toJSON()</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-perf_hooksperformanceobserver">Class: <code>perf_hooks.PerformanceObserver</code></a>
<ul>
<li><a href="#all_perf_hooks_new-performanceobservercallback"><code>new PerformanceObserver(callback)</code></a></li>
<li><a href="#all_perf_hooks_performanceobserverdisconnect"><code>performanceObserver.disconnect()</code></a></li>
<li><a href="#all_perf_hooks_performanceobserverobserveoptions"><code>performanceObserver.observe(options)</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-performanceobserverentrylist">Class: <code>PerformanceObserverEntryList</code></a>
<ul>
<li><a href="#all_perf_hooks_performanceobserverentrylistgetentries"><code>performanceObserverEntryList.getEntries()</code></a></li>
<li><a href="#all_perf_hooks_performanceobserverentrylistgetentriesbynamename-type"><code>performanceObserverEntryList.getEntriesByName(name[, type])</code></a></li>
<li><a href="#all_perf_hooks_performanceobserverentrylistgetentriesbytypetype"><code>performanceObserverEntryList.getEntriesByType(type)</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_perf_hookscreatehistogramoptions"><code>perf_hooks.createHistogram([options])</code></a></li>
<li><a href="#all_perf_hooks_perf_hooksmonitoreventloopdelayoptions"><code>perf_hooks.monitorEventLoopDelay([options])</code></a></li>
<li><a href="#all_perf_hooks_class-histogram">Class: <code>Histogram</code></a>
<ul>
<li><a href="#all_perf_hooks_histogramcount"><code>histogram.count</code></a></li>
<li><a href="#all_perf_hooks_histogramcountbigint"><code>histogram.countBigInt</code></a></li>
<li><a href="#all_perf_hooks_histogramexceeds"><code>histogram.exceeds</code></a></li>
<li><a href="#all_perf_hooks_histogramexceedsbigint"><code>histogram.exceedsBigInt</code></a></li>
<li><a href="#all_perf_hooks_histogrammax"><code>histogram.max</code></a></li>
<li><a href="#all_perf_hooks_histogrammaxbigint"><code>histogram.maxBigInt</code></a></li>
<li><a href="#all_perf_hooks_histogrammean"><code>histogram.mean</code></a></li>
<li><a href="#all_perf_hooks_histogrammin"><code>histogram.min</code></a></li>
<li><a href="#all_perf_hooks_histogramminbigint"><code>histogram.minBigInt</code></a></li>
<li><a href="#all_perf_hooks_histogrampercentilepercentile"><code>histogram.percentile(percentile)</code></a></li>
<li><a href="#all_perf_hooks_histogrampercentilebigintpercentile"><code>histogram.percentileBigInt(percentile)</code></a></li>
<li><a href="#all_perf_hooks_histogrampercentiles"><code>histogram.percentiles</code></a></li>
<li><a href="#all_perf_hooks_histogrampercentilesbigint"><code>histogram.percentilesBigInt</code></a></li>
<li><a href="#all_perf_hooks_histogramreset"><code>histogram.reset()</code></a></li>
<li><a href="#all_perf_hooks_histogramstddev"><code>histogram.stddev</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-intervalhistogram-extends-histogram">Class: <code>IntervalHistogram extends Histogram</code></a>
<ul>
<li><a href="#all_perf_hooks_histogramdisable"><code>histogram.disable()</code></a></li>
<li><a href="#all_perf_hooks_histogramenable"><code>histogram.enable()</code></a></li>
<li><a href="#all_perf_hooks_cloning-an-intervalhistogram">Cloning an <code>IntervalHistogram</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_class-recordablehistogram-extends-histogram">Class: <code>RecordableHistogram extends Histogram</code></a>
<ul>
<li><a href="#all_perf_hooks_histogramaddother"><code>histogram.add(other)</code></a></li>
<li><a href="#all_perf_hooks_histogramrecordval"><code>histogram.record(val)</code></a></li>
<li><a href="#all_perf_hooks_histogramrecorddelta"><code>histogram.recordDelta()</code></a></li>
</ul>
</li>
<li><a href="#all_perf_hooks_examples">Examples</a>
<ul>
<li><a href="#all_perf_hooks_measuring-the-duration-of-async-operations">Measuring the duration of async operations</a></li>
<li><a href="#all_perf_hooks_measuring-how-long-it-takes-to-load-dependencies">Measuring how long it takes to load dependencies</a></li>
<li><a href="#all_perf_hooks_measuring-how-long-one-http-round-trip-takes">Measuring how long one HTTP round-trip takes</a></li>
<li><a href="#all_perf_hooks_measuring-how-long-the-netconnect-only-for-tcp-takes-when-the-connection-is-successful">Measuring how long the <code>net.connect</code> (only for TCP) takes when the connection is successful</a></li>
<li><a href="#all_perf_hooks_measuring-how-long-the-dns-takes-when-the-request-is-successful">Measuring how long the DNS takes when the request is successful</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_policy_policies">Policies</a></span>
<ul>
<li><a href="#all_policy_enabling">Enabling</a></li>
<li><a href="#all_policy_features">Features</a>
<ul>
<li><a href="#all_policy_error-behavior">Error behavior</a></li>
<li><a href="#all_policy_integrity-checks">Integrity checks</a></li>
<li><a href="#all_policy_dependency-redirection">Dependency redirection</a>
<ul>
<li><a href="#all_policy_example-patched-dependency">Example: Patched dependency</a></li>
</ul>
</li>
<li><a href="#all_policy_scopes">Scopes</a>
<ul>
<li><a href="#all_policy_example">Example</a></li>
<li><a href="#all_policy_integrity-using-scopes">Integrity using scopes</a></li>
<li><a href="#all_policy_dependency-redirection-using-scopes">Dependency redirection using scopes</a></li>
<li><a href="#all_policy_example-import-maps-emulation">Example: [import maps][] emulation</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_process_process">Process</a>
<ul>
<li><a href="#all_process_process-events">Process events</a>
<ul>
<li><a href="#all_process_event-beforeexit">Event: <code>'beforeExit'</code></a></li>
<li><a href="#all_process_event-disconnect">Event: <code>'disconnect'</code></a></li>
<li><a href="#all_process_event-exit">Event: <code>'exit'</code></a></li>
<li><a href="#all_process_event-message">Event: <code>'message'</code></a></li>
<li><span class="stability_0"><a href="#all_process_event-multipleresolves">Event: <code>'multipleResolves'</code></a></span></li>
<li><a href="#all_process_event-rejectionhandled">Event: <code>'rejectionHandled'</code></a></li>
<li><a href="#all_process_event-uncaughtexception">Event: <code>'uncaughtException'</code></a>
<ul>
<li><a href="#all_process_warning-using-uncaughtexception-correctly">Warning: Using <code>'uncaughtException'</code> correctly</a></li>
</ul>
</li>
<li><a href="#all_process_event-uncaughtexceptionmonitor">Event: <code>'uncaughtExceptionMonitor'</code></a></li>
<li><a href="#all_process_event-unhandledrejection">Event: <code>'unhandledRejection'</code></a></li>
<li><a href="#all_process_event-warning">Event: <code>'warning'</code></a></li>
<li><a href="#all_process_event-worker">Event: <code>'worker'</code></a>
<ul>
<li><a href="#all_process_emitting-custom-warnings">Emitting custom warnings</a></li>
<li><a href="#all_process_nodejs-warning-names">Node.js warning names</a></li>
</ul>
</li>
<li><a href="#all_process_signal-events">Signal events</a></li>
</ul>
</li>
<li><a href="#all_process_processabort"><code>process.abort()</code></a></li>
<li><a href="#all_process_processallowednodeenvironmentflags"><code>process.allowedNodeEnvironmentFlags</code></a></li>
<li><a href="#all_process_processarch"><code>process.arch</code></a></li>
<li><a href="#all_process_processargv"><code>process.argv</code></a></li>
<li><a href="#all_process_processargv0"><code>process.argv0</code></a></li>
<li><a href="#all_process_processchannel"><code>process.channel</code></a>
<ul>
<li><a href="#all_process_processchannelref"><code>process.channel.ref()</code></a></li>
<li><a href="#all_process_processchannelunref"><code>process.channel.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_process_processchdirdirectory"><code>process.chdir(directory)</code></a></li>
<li><a href="#all_process_processconfig"><code>process.config</code></a></li>
<li><a href="#all_process_processconnected"><code>process.connected</code></a></li>
<li><a href="#all_process_processcpuusagepreviousvalue"><code>process.cpuUsage([previousValue])</code></a></li>
<li><a href="#all_process_processcwd"><code>process.cwd()</code></a></li>
<li><a href="#all_process_processdebugport"><code>process.debugPort</code></a></li>
<li><a href="#all_process_processdisconnect"><code>process.disconnect()</code></a></li>
<li><a href="#all_process_processdlopenmodule-filename-flags"><code>process.dlopen(module, filename[, flags])</code></a></li>
<li><a href="#all_process_processemitwarningwarning-options"><code>process.emitWarning(warning[, options])</code></a></li>
<li><a href="#all_process_processemitwarningwarning-type-code-ctor"><code>process.emitWarning(warning[, type[, code]][, ctor])</code></a>
<ul>
<li><a href="#all_process_avoiding-duplicate-warnings">Avoiding duplicate warnings</a></li>
</ul>
</li>
<li><a href="#all_process_processenv"><code>process.env</code></a></li>
<li><a href="#all_process_processexecargv"><code>process.execArgv</code></a></li>
<li><a href="#all_process_processexecpath"><code>process.execPath</code></a></li>
<li><a href="#all_process_processexitcode"><code>process.exit([code])</code></a></li>
<li><a href="#all_process_processexitcode_1"><code>process.exitCode</code></a></li>
<li><span class="stability_1"><a href="#all_process_processgetactiveresourcesinfo"><code>process.getActiveResourcesInfo()</code></a></span></li>
<li><a href="#all_process_processgetegid"><code>process.getegid()</code></a></li>
<li><a href="#all_process_processgeteuid"><code>process.geteuid()</code></a></li>
<li><a href="#all_process_processgetgid"><code>process.getgid()</code></a></li>
<li><a href="#all_process_processgetgroups"><code>process.getgroups()</code></a></li>
<li><a href="#all_process_processgetuid"><code>process.getuid()</code></a></li>
<li><a href="#all_process_processhasuncaughtexceptioncapturecallback"><code>process.hasUncaughtExceptionCaptureCallback()</code></a></li>
<li><span class="stability_3"><a href="#all_process_processhrtimetime"><code>process.hrtime([time])</code></a></span></li>
<li><a href="#all_process_processhrtimebigint"><code>process.hrtime.bigint()</code></a></li>
<li><a href="#all_process_processinitgroupsuser-extragroup"><code>process.initgroups(user, extraGroup)</code></a></li>
<li><a href="#all_process_processkillpid-signal"><code>process.kill(pid[, signal])</code></a></li>
<li><span class="stability_0"><a href="#all_process_processmainmodule"><code>process.mainModule</code></a></span></li>
<li><a href="#all_process_processmemoryusage"><code>process.memoryUsage()</code></a></li>
<li><a href="#all_process_processmemoryusagerss"><code>process.memoryUsage.rss()</code></a></li>
<li><a href="#all_process_processnexttickcallback-args"><code>process.nextTick(callback[, ...args])</code></a>
<ul>
<li><a href="#all_process_when-to-use-queuemicrotask-vs-processnexttick">When to use <code>queueMicrotask()</code> vs. <code>process.nextTick()</code></a></li>
</ul>
</li>
<li><a href="#all_process_processnodeprecation"><code>process.noDeprecation</code></a></li>
<li><a href="#all_process_processpid"><code>process.pid</code></a></li>
<li><a href="#all_process_processplatform"><code>process.platform</code></a></li>
<li><a href="#all_process_processppid"><code>process.ppid</code></a></li>
<li><a href="#all_process_processrelease"><code>process.release</code></a></li>
<li><a href="#all_process_processreport"><code>process.report</code></a>
<ul>
<li><a href="#all_process_processreportcompact"><code>process.report.compact</code></a></li>
<li><a href="#all_process_processreportdirectory"><code>process.report.directory</code></a></li>
<li><a href="#all_process_processreportfilename"><code>process.report.filename</code></a></li>
<li><a href="#all_process_processreportgetreporterr"><code>process.report.getReport([err])</code></a></li>
<li><a href="#all_process_processreportreportonfatalerror"><code>process.report.reportOnFatalError</code></a></li>
<li><a href="#all_process_processreportreportonsignal"><code>process.report.reportOnSignal</code></a></li>
<li><a href="#all_process_processreportreportonuncaughtexception"><code>process.report.reportOnUncaughtException</code></a></li>
<li><a href="#all_process_processreportsignal"><code>process.report.signal</code></a></li>
<li><a href="#all_process_processreportwritereportfilename-err"><code>process.report.writeReport([filename][, err])</code></a></li>
</ul>
</li>
<li><a href="#all_process_processresourceusage"><code>process.resourceUsage()</code></a></li>
<li><a href="#all_process_processsendmessage-sendhandle-options-callback"><code>process.send(message[, sendHandle[, options]][, callback])</code></a></li>
<li><a href="#all_process_processsetegidid"><code>process.setegid(id)</code></a></li>
<li><a href="#all_process_processseteuidid"><code>process.seteuid(id)</code></a></li>
<li><a href="#all_process_processsetgidid"><code>process.setgid(id)</code></a></li>
<li><a href="#all_process_processsetgroupsgroups"><code>process.setgroups(groups)</code></a></li>
<li><a href="#all_process_processsetuidid"><code>process.setuid(id)</code></a></li>
<li><span class="stability_1"><a href="#all_process_processsetsourcemapsenabledval"><code>process.setSourceMapsEnabled(val)</code></a></span></li>
<li><a href="#all_process_processsetuncaughtexceptioncapturecallbackfn"><code>process.setUncaughtExceptionCaptureCallback(fn)</code></a></li>
<li><a href="#all_process_processstderr"><code>process.stderr</code></a>
<ul>
<li><a href="#all_process_processstderrfd"><code>process.stderr.fd</code></a></li>
</ul>
</li>
<li><a href="#all_process_processstdin"><code>process.stdin</code></a>
<ul>
<li><a href="#all_process_processstdinfd"><code>process.stdin.fd</code></a></li>
</ul>
</li>
<li><a href="#all_process_processstdout"><code>process.stdout</code></a>
<ul>
<li><a href="#all_process_processstdoutfd"><code>process.stdout.fd</code></a></li>
<li><a href="#all_process_a-note-on-process-io">A note on process I/O</a></li>
</ul>
</li>
<li><a href="#all_process_processthrowdeprecation"><code>process.throwDeprecation</code></a></li>
<li><a href="#all_process_processtitle"><code>process.title</code></a></li>
<li><a href="#all_process_processtracedeprecation"><code>process.traceDeprecation</code></a></li>
<li><span class="stability_0"><a href="#all_process_processumask"><code>process.umask()</code></a></span></li>
<li><a href="#all_process_processumaskmask"><code>process.umask(mask)</code></a></li>
<li><a href="#all_process_processuptime"><code>process.uptime()</code></a></li>
<li><a href="#all_process_processversion"><code>process.version</code></a></li>
<li><a href="#all_process_processversions"><code>process.versions</code></a></li>
<li><a href="#all_process_exit-codes">Exit codes</a></li>
</ul>
</li>
<li><span class="stability_0"><a href="#all_punycode_punycode">Punycode</a></span>
<ul>
<li><a href="#all_punycode_punycodedecodestring"><code>punycode.decode(string)</code></a></li>
<li><a href="#all_punycode_punycodeencodestring"><code>punycode.encode(string)</code></a></li>
<li><a href="#all_punycode_punycodetoasciidomain"><code>punycode.toASCII(domain)</code></a></li>
<li><a href="#all_punycode_punycodetounicodedomain"><code>punycode.toUnicode(domain)</code></a></li>
<li><a href="#all_punycode_punycodeucs2"><code>punycode.ucs2</code></a>
<ul>
<li><a href="#all_punycode_punycodeucs2decodestring"><code>punycode.ucs2.decode(string)</code></a></li>
<li><a href="#all_punycode_punycodeucs2encodecodepoints"><code>punycode.ucs2.encode(codePoints)</code></a></li>
</ul>
</li>
<li><a href="#all_punycode_punycodeversion"><code>punycode.version</code></a></li>
</ul>
</li>
<li><span class="stability_3"><a href="#all_querystring_query-string">Query string</a></span>
<ul>
<li><a href="#all_querystring_querystringdecode"><code>querystring.decode()</code></a></li>
<li><a href="#all_querystring_querystringencode"><code>querystring.encode()</code></a></li>
<li><a href="#all_querystring_querystringescapestr"><code>querystring.escape(str)</code></a></li>
<li><a href="#all_querystring_querystringparsestr-sep-eq-options"><code>querystring.parse(str[, sep[, eq[, options]]])</code></a></li>
<li><a href="#all_querystring_querystringstringifyobj-sep-eq-options"><code>querystring.stringify(obj[, sep[, eq[, options]]])</code></a></li>
<li><a href="#all_querystring_querystringunescapestr"><code>querystring.unescape(str)</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_readline_readline">Readline</a></span>
<ul>
<li><a href="#all_readline_class-interfaceconstructor">Class: <code>InterfaceConstructor</code></a>
<ul>
<li><a href="#all_readline_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_readline_event-line">Event: <code>'line'</code></a></li>
<li><a href="#all_readline_event-history">Event: <code>'history'</code></a></li>
<li><a href="#all_readline_event-pause">Event: <code>'pause'</code></a></li>
<li><a href="#all_readline_event-resume">Event: <code>'resume'</code></a></li>
<li><a href="#all_readline_event-sigcont">Event: <code>'SIGCONT'</code></a></li>
<li><a href="#all_readline_event-sigint">Event: <code>'SIGINT'</code></a></li>
<li><a href="#all_readline_event-sigtstp">Event: <code>'SIGTSTP'</code></a></li>
<li><a href="#all_readline_rlclose"><code>rl.close()</code></a></li>
<li><a href="#all_readline_rlpause"><code>rl.pause()</code></a></li>
<li><a href="#all_readline_rlpromptpreservecursor"><code>rl.prompt([preserveCursor])</code></a></li>
<li><a href="#all_readline_rlquestionquery-options-callback"><code>rl.question(query[, options], callback)</code></a></li>
<li><a href="#all_readline_rlresume"><code>rl.resume()</code></a></li>
<li><a href="#all_readline_rlsetpromptprompt"><code>rl.setPrompt(prompt)</code></a></li>
<li><a href="#all_readline_rlgetprompt"><code>rl.getPrompt()</code></a></li>
<li><a href="#all_readline_rlwritedata-key"><code>rl.write(data[, key])</code></a></li>
<li><a href="#all_readline_rlsymbolasynciterator"><code>rl[Symbol.asyncIterator]()</code></a></li>
<li><a href="#all_readline_rlline"><code>rl.line</code></a></li>
<li><a href="#all_readline_rlcursor"><code>rl.cursor</code></a></li>
<li><a href="#all_readline_rlgetcursorpos"><code>rl.getCursorPos()</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_readline_promises-api">Promises API</a></span>
<ul>
<li><a href="#all_readline_class-readlinepromisesinterface">Class: <code>readlinePromises.Interface</code></a>
<ul>
<li><a href="#all_readline_rlquestionquery-options"><code>rl.question(query[, options])</code></a></li>
</ul>
</li>
<li><a href="#all_readline_class-readlinepromisesreadline">Class: <code>readlinePromises.Readline</code></a>
<ul>
<li><a href="#all_readline_new-readlinepromisesreadlinestream-options"><code>new readlinePromises.Readline(stream[, options])</code></a></li>
<li><a href="#all_readline_rlclearlinedir"><code>rl.clearLine(dir)</code></a></li>
<li><a href="#all_readline_rlclearscreendown"><code>rl.clearScreenDown()</code></a></li>
<li><a href="#all_readline_rlcommit"><code>rl.commit()</code></a></li>
<li><a href="#all_readline_rlcursortox-y"><code>rl.cursorTo(x[, y])</code></a></li>
<li><a href="#all_readline_rlmovecursordx-dy"><code>rl.moveCursor(dx, dy)</code></a></li>
<li><a href="#all_readline_rlrollback"><code>rl.rollback()</code></a></li>
</ul>
</li>
<li><a href="#all_readline_readlinepromisescreateinterfaceoptions"><code>readlinePromises.createInterface(options)</code></a>
<ul>
<li><a href="#all_readline_use-of-the-completer-function">Use of the <code>completer</code> function</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_readline_callback-api">Callback API</a>
<ul>
<li><a href="#all_readline_class-readlineinterface">Class: <code>readline.Interface</code></a>
<ul>
<li><a href="#all_readline_rlquestionquery-options-callback_1"><code>rl.question(query[, options], callback)</code></a></li>
</ul>
</li>
<li><a href="#all_readline_readlineclearlinestream-dir-callback"><code>readline.clearLine(stream, dir[, callback])</code></a></li>
<li><a href="#all_readline_readlineclearscreendownstream-callback"><code>readline.clearScreenDown(stream[, callback])</code></a></li>
<li><a href="#all_readline_readlinecreateinterfaceoptions"><code>readline.createInterface(options)</code></a>
<ul>
<li><a href="#all_readline_use-of-the-completer-function_1">Use of the <code>completer</code> function</a></li>
</ul>
</li>
<li><a href="#all_readline_readlinecursortostream-x-y-callback"><code>readline.cursorTo(stream, x[, y][, callback])</code></a></li>
<li><a href="#all_readline_readlinemovecursorstream-dx-dy-callback"><code>readline.moveCursor(stream, dx, dy[, callback])</code></a></li>
</ul>
</li>
<li><a href="#all_readline_readlineemitkeypresseventsstream-interface"><code>readline.emitKeypressEvents(stream[, interface])</code></a></li>
<li><a href="#all_readline_example-tiny-cli">Example: Tiny CLI</a></li>
<li><a href="#all_readline_example-read-file-stream-line-by-line">Example: Read file stream line-by-Line</a></li>
<li><a href="#all_readline_tty-keybindings">TTY keybindings</a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_repl_repl">REPL</a></span>
<ul>
<li><a href="#all_repl_design-and-features">Design and features</a>
<ul>
<li><a href="#all_repl_commands-and-special-keys">Commands and special keys</a></li>
<li><a href="#all_repl_default-evaluation">Default evaluation</a>
<ul>
<li><a href="#all_repl_javascript-expressions">JavaScript expressions</a></li>
<li><a href="#all_repl_global-and-local-scope">Global and local scope</a></li>
<li><a href="#all_repl_accessing-core-nodejs-modules">Accessing core Node.js modules</a></li>
<li><a href="#all_repl_global-uncaught-exceptions">Global uncaught exceptions</a></li>
<li><a href="#all_repl_assignment-of-the-_-underscore-variable">Assignment of the <code>_</code> (underscore) variable</a></li>
<li><a href="#all_repl_await-keyword"><code>await</code> keyword</a></li>
</ul>
</li>
<li><a href="#all_repl_reverse-i-search">Reverse-i-search</a></li>
<li><a href="#all_repl_custom-evaluation-functions">Custom evaluation functions</a>
<ul>
<li><a href="#all_repl_recoverable-errors">Recoverable errors</a></li>
</ul>
</li>
<li><a href="#all_repl_customizing-repl-output">Customizing REPL output</a></li>
</ul>
</li>
<li><a href="#all_repl_class-replserver">Class: <code>REPLServer</code></a>
<ul>
<li><a href="#all_repl_event-exit">Event: <code>'exit'</code></a></li>
<li><a href="#all_repl_event-reset">Event: <code>'reset'</code></a></li>
<li><a href="#all_repl_replserverdefinecommandkeyword-cmd"><code>replServer.defineCommand(keyword, cmd)</code></a></li>
<li><a href="#all_repl_replserverdisplaypromptpreservecursor"><code>replServer.displayPrompt([preserveCursor])</code></a></li>
<li><a href="#all_repl_replserverclearbufferedcommand"><code>replServer.clearBufferedCommand()</code></a></li>
<li><span class="stability_0"><a href="#all_repl_replserverparsereplkeywordkeyword-rest"><code>replServer.parseREPLKeyword(keyword[, rest])</code></a></span></li>
<li><a href="#all_repl_replserversetuphistoryhistorypath-callback"><code>replServer.setupHistory(historyPath, callback)</code></a></li>
</ul>
</li>
<li><a href="#all_repl_replbuiltinmodules"><code>repl.builtinModules</code></a></li>
<li><a href="#all_repl_replstartoptions"><code>repl.start([options])</code></a></li>
<li><a href="#all_repl_the-nodejs-repl">The Node.js REPL</a>
<ul>
<li><a href="#all_repl_environment-variable-options">Environment variable options</a></li>
<li><a href="#all_repl_persistent-history">Persistent history</a></li>
<li><a href="#all_repl_using-the-nodejs-repl-with-advanced-line-editors">Using the Node.js REPL with advanced line-editors</a></li>
<li><a href="#all_repl_starting-multiple-repl-instances-against-a-single-running-instance">Starting multiple REPL instances against a single running instance</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_report_diagnostic-report">Diagnostic report</a></span>
<ul>
<li><a href="#all_report_usage">Usage</a></li>
<li><a href="#all_report_configuration">Configuration</a></li>
<li><a href="#all_report_interaction-with-workers">Interaction with workers</a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_stream_stream">Stream</a></span>
<ul>
<li><a href="#all_stream_organization-of-this-document">Organization of this document</a></li>
<li><a href="#all_stream_types-of-streams">Types of streams</a>
<ul>
<li><a href="#all_stream_streams-promises-api">Streams Promises API</a></li>
<li><a href="#all_stream_object-mode">Object mode</a></li>
<li><a href="#all_stream_buffering">Buffering</a></li>
</ul>
</li>
<li><a href="#all_stream_api-for-stream-consumers">API for stream consumers</a>
<ul>
<li><a href="#all_stream_writable-streams">Writable streams</a>
<ul>
<li><a href="#all_stream_class-streamwritable">Class: <code>stream.Writable</code></a>
<ul>
<li><a href="#all_stream_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_stream_event-drain">Event: <code>'drain'</code></a></li>
<li><a href="#all_stream_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_stream_event-finish">Event: <code>'finish'</code></a></li>
<li><a href="#all_stream_event-pipe">Event: <code>'pipe'</code></a></li>
<li><a href="#all_stream_event-unpipe">Event: <code>'unpipe'</code></a></li>
<li><a href="#all_stream_writablecork"><code>writable.cork()</code></a></li>
<li><a href="#all_stream_writabledestroyerror"><code>writable.destroy([error])</code></a></li>
<li><a href="#all_stream_writableclosed"><code>writable.closed</code></a></li>
<li><a href="#all_stream_writabledestroyed"><code>writable.destroyed</code></a></li>
<li><a href="#all_stream_writableendchunk-encoding-callback"><code>writable.end([chunk[, encoding]][, callback])</code></a></li>
<li><a href="#all_stream_writablesetdefaultencodingencoding"><code>writable.setDefaultEncoding(encoding)</code></a></li>
<li><a href="#all_stream_writableuncork"><code>writable.uncork()</code></a></li>
<li><a href="#all_stream_writablewritable"><code>writable.writable</code></a></li>
<li><span class="stability_1"><a href="#all_stream_writablewritableaborted"><code>writable.writableAborted</code></a></span></li>
<li><a href="#all_stream_writablewritableended"><code>writable.writableEnded</code></a></li>
<li><a href="#all_stream_writablewritablecorked"><code>writable.writableCorked</code></a></li>
<li><a href="#all_stream_writableerrored"><code>writable.errored</code></a></li>
<li><a href="#all_stream_writablewritablefinished"><code>writable.writableFinished</code></a></li>
<li><a href="#all_stream_writablewritablehighwatermark"><code>writable.writableHighWaterMark</code></a></li>
<li><a href="#all_stream_writablewritablelength"><code>writable.writableLength</code></a></li>
<li><a href="#all_stream_writablewritableneeddrain"><code>writable.writableNeedDrain</code></a></li>
<li><a href="#all_stream_writablewritableobjectmode"><code>writable.writableObjectMode</code></a></li>
<li><a href="#all_stream_writablewritechunk-encoding-callback"><code>writable.write(chunk[, encoding][, callback])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_stream_readable-streams">Readable streams</a>
<ul>
<li><a href="#all_stream_two-reading-modes">Two reading modes</a></li>
<li><a href="#all_stream_three-states">Three states</a></li>
<li><a href="#all_stream_choose-one-api-style">Choose one API style</a></li>
<li><a href="#all_stream_class-streamreadable">Class: <code>stream.Readable</code></a>
<ul>
<li><a href="#all_stream_event-close_1">Event: <code>'close'</code></a></li>
<li><a href="#all_stream_event-data">Event: <code>'data'</code></a></li>
<li><a href="#all_stream_event-end">Event: <code>'end'</code></a></li>
<li><a href="#all_stream_event-error_1">Event: <code>'error'</code></a></li>
<li><a href="#all_stream_event-pause">Event: <code>'pause'</code></a></li>
<li><a href="#all_stream_event-readable">Event: <code>'readable'</code></a></li>
<li><a href="#all_stream_event-resume">Event: <code>'resume'</code></a></li>
<li><a href="#all_stream_readabledestroyerror"><code>readable.destroy([error])</code></a></li>
<li><a href="#all_stream_readableclosed"><code>readable.closed</code></a></li>
<li><a href="#all_stream_readabledestroyed"><code>readable.destroyed</code></a></li>
<li><a href="#all_stream_readableispaused"><code>readable.isPaused()</code></a></li>
<li><a href="#all_stream_readablepause"><code>readable.pause()</code></a></li>
<li><a href="#all_stream_readablepipedestination-options"><code>readable.pipe(destination[, options])</code></a></li>
<li><a href="#all_stream_readablereadsize"><code>readable.read([size])</code></a></li>
<li><a href="#all_stream_readablereadable"><code>readable.readable</code></a></li>
<li><span class="stability_1"><a href="#all_stream_readablereadableaborted"><code>readable.readableAborted</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablereadabledidread"><code>readable.readableDidRead</code></a></span></li>
<li><a href="#all_stream_readablereadableencoding"><code>readable.readableEncoding</code></a></li>
<li><a href="#all_stream_readablereadableended"><code>readable.readableEnded</code></a></li>
<li><a href="#all_stream_readableerrored"><code>readable.errored</code></a></li>
<li><a href="#all_stream_readablereadableflowing"><code>readable.readableFlowing</code></a></li>
<li><a href="#all_stream_readablereadablehighwatermark"><code>readable.readableHighWaterMark</code></a></li>
<li><a href="#all_stream_readablereadablelength"><code>readable.readableLength</code></a></li>
<li><a href="#all_stream_readablereadableobjectmode"><code>readable.readableObjectMode</code></a></li>
<li><a href="#all_stream_readableresume"><code>readable.resume()</code></a></li>
<li><a href="#all_stream_readablesetencodingencoding"><code>readable.setEncoding(encoding)</code></a></li>
<li><a href="#all_stream_readableunpipedestination"><code>readable.unpipe([destination])</code></a></li>
<li><a href="#all_stream_readableunshiftchunk-encoding"><code>readable.unshift(chunk[, encoding])</code></a></li>
<li><a href="#all_stream_readablewrapstream"><code>readable.wrap(stream)</code></a></li>
<li><a href="#all_stream_readablesymbolasynciterator"><code>readable[Symbol.asyncIterator]()</code></a></li>
<li><span class="stability_1"><a href="#all_stream_readableiteratoroptions"><code>readable.iterator([options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablemapfn-options"><code>readable.map(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablefilterfn-options"><code>readable.filter(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readableforeachfn-options"><code>readable.forEach(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readabletoarrayoptions"><code>readable.toArray([options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablesomefn-options"><code>readable.some(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablefindfn-options"><code>readable.find(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readableeveryfn-options"><code>readable.every(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readableflatmapfn-options"><code>readable.flatMap(fn[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readabledroplimit-options"><code>readable.drop(limit[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readabletakelimit-options"><code>readable.take(limit[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readableasindexedpairsoptions"><code>readable.asIndexedPairs([options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_readablereducefn-initial-options"><code>readable.reduce(fn[, initial[, options]])</code></a></span></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_stream_duplex-and-transform-streams">Duplex and transform streams</a>
<ul>
<li><a href="#all_stream_class-streamduplex">Class: <code>stream.Duplex</code></a>
<ul>
<li><a href="#all_stream_duplexallowhalfopen"><code>duplex.allowHalfOpen</code></a></li>
</ul>
</li>
<li><a href="#all_stream_class-streamtransform">Class: <code>stream.Transform</code></a>
<ul>
<li><a href="#all_stream_transformdestroyerror"><code>transform.destroy([error])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_stream_streamfinishedstream-options-callback"><code>stream.finished(stream[, options], callback)</code></a></li>
<li><a href="#all_stream_streampipelinesource-transforms-destination-callback"><code>stream.pipeline(source[, ...transforms], destination, callback)</code></a></li>
<li><a href="#all_stream_streampipelinestreams-callback"><code>stream.pipeline(streams, callback)</code></a></li>
<li><span class="stability_1"><a href="#all_stream_streamcomposestreams"><code>stream.compose(...streams)</code></a></span></li>
<li><a href="#all_stream_streamreadablefromiterable-options"><code>stream.Readable.from(iterable[, options])</code></a></li>
<li><span class="stability_1"><a href="#all_stream_streamreadablefromwebreadablestream-options"><code>stream.Readable.fromWeb(readableStream[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamreadableisdisturbedstream"><code>stream.Readable.isDisturbed(stream)</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamiserroredstream"><code>stream.isErrored(stream)</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamisreadablestream"><code>stream.isReadable(stream)</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamreadabletowebstreamreadable-options"><code>stream.Readable.toWeb(streamReadable[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamwritablefromwebwritablestream-options"><code>stream.Writable.fromWeb(writableStream[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamwritabletowebstreamwritable"><code>stream.Writable.toWeb(streamWritable)</code></a></span></li>
<li><a href="#all_stream_streamduplexfromsrc"><code>stream.Duplex.from(src)</code></a></li>
<li><span class="stability_1"><a href="#all_stream_streamduplexfromwebpair-options"><code>stream.Duplex.fromWeb(pair[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_stream_streamduplextowebstreamduplex"><code>stream.Duplex.toWeb(streamDuplex)</code></a></span></li>
<li><a href="#all_stream_streamaddabortsignalsignal-stream"><code>stream.addAbortSignal(signal, stream)</code></a></li>
</ul>
</li>
<li><a href="#all_stream_api-for-stream-implementers">API for stream implementers</a>
<ul>
<li><a href="#all_stream_simplified-construction">Simplified construction</a></li>
<li><a href="#all_stream_implementing-a-writable-stream">Implementing a writable stream</a>
<ul>
<li><a href="#all_stream_new-streamwritableoptions"><code>new stream.Writable([options])</code></a></li>
<li><a href="#all_stream_writable_constructcallback"><code>writable._construct(callback)</code></a></li>
<li><a href="#all_stream_writable_writechunk-encoding-callback"><code>writable._write(chunk, encoding, callback)</code></a></li>
<li><a href="#all_stream_writable_writevchunks-callback"><code>writable._writev(chunks, callback)</code></a></li>
<li><a href="#all_stream_writable_destroyerr-callback"><code>writable._destroy(err, callback)</code></a></li>
<li><a href="#all_stream_writable_finalcallback"><code>writable._final(callback)</code></a></li>
<li><a href="#all_stream_errors-while-writing">Errors while writing</a></li>
<li><a href="#all_stream_an-example-writable-stream">An example writable stream</a></li>
<li><a href="#all_stream_decoding-buffers-in-a-writable-stream">Decoding buffers in a writable stream</a></li>
</ul>
</li>
<li><a href="#all_stream_implementing-a-readable-stream">Implementing a readable stream</a>
<ul>
<li><a href="#all_stream_new-streamreadableoptions"><code>new stream.Readable([options])</code></a></li>
<li><a href="#all_stream_readable_constructcallback"><code>readable._construct(callback)</code></a></li>
<li><a href="#all_stream_readable_readsize"><code>readable._read(size)</code></a></li>
<li><a href="#all_stream_readable_destroyerr-callback"><code>readable._destroy(err, callback)</code></a></li>
<li><a href="#all_stream_readablepushchunk-encoding"><code>readable.push(chunk[, encoding])</code></a></li>
<li><a href="#all_stream_errors-while-reading">Errors while reading</a></li>
<li><a href="#all_stream_an-example-counting-stream">An example counting stream</a></li>
</ul>
</li>
<li><a href="#all_stream_implementing-a-duplex-stream">Implementing a duplex stream</a>
<ul>
<li><a href="#all_stream_new-streamduplexoptions"><code>new stream.Duplex(options)</code></a></li>
<li><a href="#all_stream_an-example-duplex-stream">An example duplex stream</a></li>
<li><a href="#all_stream_object-mode-duplex-streams">Object mode duplex streams</a></li>
</ul>
</li>
<li><a href="#all_stream_implementing-a-transform-stream">Implementing a transform stream</a>
<ul>
<li><a href="#all_stream_new-streamtransformoptions"><code>new stream.Transform([options])</code></a></li>
<li><a href="#all_stream_event-end_1">Event: <code>'end'</code></a></li>
<li><a href="#all_stream_event-finish_1">Event: <code>'finish'</code></a></li>
<li><a href="#all_stream_transform_flushcallback"><code>transform._flush(callback)</code></a></li>
<li><a href="#all_stream_transform_transformchunk-encoding-callback"><code>transform._transform(chunk, encoding, callback)</code></a></li>
<li><a href="#all_stream_class-streampassthrough">Class: <code>stream.PassThrough</code></a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_stream_additional-notes">Additional notes</a>
<ul>
<li><a href="#all_stream_streams-compatibility-with-async-generators-and-async-iterators">Streams compatibility with async generators and async iterators</a>
<ul>
<li><a href="#all_stream_consuming-readable-streams-with-async-iterators">Consuming readable streams with async iterators</a></li>
<li><a href="#all_stream_creating-readable-streams-with-async-generators">Creating readable streams with async generators</a></li>
<li><a href="#all_stream_piping-to-writable-streams-from-async-iterators">Piping to writable streams from async iterators</a></li>
</ul>
</li>
<li><a href="#all_stream_compatibility-with-older-nodejs-versions">Compatibility with older Node.js versions</a></li>
<li><a href="#all_stream_readableread0"><code>readable.read(0)</code></a></li>
<li><a href="#all_stream_readablepush"><code>readable.push('')</code></a></li>
<li><a href="#all_stream_highwatermark-discrepancy-after-calling-readablesetencoding"><code>highWaterMark</code> discrepancy after calling <code>readable.setEncoding()</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_string_decoder_string-decoder">String decoder</a></span>
<ul>
<li><a href="#all_string_decoder_class-stringdecoder">Class: <code>StringDecoder</code></a>
<ul>
<li><a href="#all_string_decoder_new-stringdecoderencoding"><code>new StringDecoder([encoding])</code></a></li>
<li><a href="#all_string_decoder_stringdecoderendbuffer"><code>stringDecoder.end([buffer])</code></a></li>
<li><a href="#all_string_decoder_stringdecoderwritebuffer"><code>stringDecoder.write(buffer)</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_test_test-runner">Test runner</a></span>
<ul>
<li><a href="#all_test_subtests">Subtests</a></li>
<li><a href="#all_test_skipping-tests">Skipping tests</a></li>
<li><a href="#all_test_describeit-syntax"><code>describe</code>/<code>it</code> syntax</a>
<ul>
<li><a href="#all_test_only-tests"><code>only</code> tests</a></li>
</ul>
</li>
<li><a href="#all_test_extraneous-asynchronous-activity">Extraneous asynchronous activity</a></li>
<li><a href="#all_test_running-tests-from-the-command-line">Running tests from the command line</a>
<ul>
<li><a href="#all_test_test-runner-execution-model">Test runner execution model</a></li>
</ul>
</li>
<li><a href="#all_test_runoptions"><code>run([options])</code></a></li>
<li><a href="#all_test_testname-options-fn"><code>test([name][, options][, fn])</code></a></li>
<li><a href="#all_test_describename-options-fn"><code>describe([name][, options][, fn])</code></a></li>
<li><a href="#all_test_describeskipname-options-fn"><code>describe.skip([name][, options][, fn])</code></a></li>
<li><a href="#all_test_describetodoname-options-fn"><code>describe.todo([name][, options][, fn])</code></a></li>
<li><a href="#all_test_itname-options-fn"><code>it([name][, options][, fn])</code></a></li>
<li><a href="#all_test_itskipname-options-fn"><code>it.skip([name][, options][, fn])</code></a></li>
<li><a href="#all_test_ittodoname-options-fn"><code>it.todo([name][, options][, fn])</code></a>
<ul>
<li><a href="#all_test_before-fn-options"><code>before([, fn][, options])</code></a></li>
<li><a href="#all_test_after-fn-options"><code>after([, fn][, options])</code></a></li>
<li><a href="#all_test_beforeeach-fn-options"><code>beforeEach([, fn][, options])</code></a></li>
<li><a href="#all_test_aftereach-fn-options"><code>afterEach([, fn][, options])</code></a></li>
</ul>
</li>
<li><a href="#all_test_class-tapstream">Class: <code>TapStream</code></a>
<ul>
<li><a href="#all_test_event-testdiagnostic">Event: <code>'test:diagnostic'</code></a></li>
<li><a href="#all_test_event-testfail">Event: <code>'test:fail'</code></a></li>
<li><a href="#all_test_event-testpass">Event: <code>'test:pass'</code></a></li>
</ul>
</li>
<li><a href="#all_test_class-testcontext">Class: <code>TestContext</code></a>
<ul>
<li><a href="#all_test_contextbeforeeach-fn-options"><code>context.beforeEach([, fn][, options])</code></a></li>
<li><a href="#all_test_contextaftereach-fn-options"><code>context.afterEach([, fn][, options])</code></a></li>
<li><a href="#all_test_contextdiagnosticmessage"><code>context.diagnostic(message)</code></a></li>
<li><a href="#all_test_contextname"><code>context.name</code></a></li>
<li><a href="#all_test_contextrunonlyshouldrunonlytests"><code>context.runOnly(shouldRunOnlyTests)</code></a></li>
<li><a href="#all_test_contextsignal"><code>context.signal</code></a></li>
<li><a href="#all_test_contextskipmessage"><code>context.skip([message])</code></a></li>
<li><a href="#all_test_contexttodomessage"><code>context.todo([message])</code></a></li>
<li><a href="#all_test_contexttestname-options-fn"><code>context.test([name][, options][, fn])</code></a></li>
</ul>
</li>
<li><a href="#all_test_class-suitecontext">Class: <code>SuiteContext</code></a>
<ul>
<li><a href="#all_test_contextname_1"><code>context.name</code></a></li>
<li><a href="#all_test_contextsignal_1"><code>context.signal</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_timers_timers">Timers</a></span>
<ul>
<li><a href="#all_timers_class-immediate">Class: <code>Immediate</code></a>
<ul>
<li><a href="#all_timers_immediatehasref"><code>immediate.hasRef()</code></a></li>
<li><a href="#all_timers_immediateref"><code>immediate.ref()</code></a></li>
<li><a href="#all_timers_immediateunref"><code>immediate.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_timers_class-timeout">Class: <code>Timeout</code></a>
<ul>
<li><span class="stability_3"><a href="#all_timers_timeoutclose"><code>timeout.close()</code></a></span></li>
<li><a href="#all_timers_timeouthasref"><code>timeout.hasRef()</code></a></li>
<li><a href="#all_timers_timeoutref"><code>timeout.ref()</code></a></li>
<li><a href="#all_timers_timeoutrefresh"><code>timeout.refresh()</code></a></li>
<li><a href="#all_timers_timeoutunref"><code>timeout.unref()</code></a></li>
<li><a href="#all_timers_timeoutsymboltoprimitive"><code>timeout[Symbol.toPrimitive]()</code></a></li>
</ul>
</li>
<li><a href="#all_timers_scheduling-timers">Scheduling timers</a>
<ul>
<li><a href="#all_timers_setimmediatecallback-args"><code>setImmediate(callback[, ...args])</code></a></li>
<li><a href="#all_timers_setintervalcallback-delay-args"><code>setInterval(callback[, delay[, ...args]])</code></a></li>
<li><a href="#all_timers_settimeoutcallback-delay-args"><code>setTimeout(callback[, delay[, ...args]])</code></a></li>
</ul>
</li>
<li><a href="#all_timers_cancelling-timers">Cancelling timers</a>
<ul>
<li><a href="#all_timers_clearimmediateimmediate"><code>clearImmediate(immediate)</code></a></li>
<li><a href="#all_timers_clearintervaltimeout"><code>clearInterval(timeout)</code></a></li>
<li><a href="#all_timers_cleartimeouttimeout"><code>clearTimeout(timeout)</code></a></li>
</ul>
</li>
<li><a href="#all_timers_timers-promises-api">Timers Promises API</a>
<ul>
<li><a href="#all_timers_timerspromisessettimeoutdelay-value-options"><code>timersPromises.setTimeout([delay[, value[, options]]])</code></a></li>
<li><a href="#all_timers_timerspromisessetimmediatevalue-options"><code>timersPromises.setImmediate([value[, options]])</code></a></li>
<li><a href="#all_timers_timerspromisessetintervaldelay-value-options"><code>timersPromises.setInterval([delay[, value[, options]]])</code></a></li>
<li><span class="stability_1"><a href="#all_timers_timerspromisesschedulerwaitdelay-options"><code>timersPromises.scheduler.wait(delay[, options])</code></a></span></li>
<li><span class="stability_1"><a href="#all_timers_timerspromisesscheduleryield"><code>timersPromises.scheduler.yield()</code></a></span></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_tls_tls-ssl">TLS (SSL)</a></span>
<ul>
<li><a href="#all_tls_determining-if-crypto-support-is-unavailable">Determining if crypto support is unavailable</a></li>
<li><a href="#all_tls_tlsssl-concepts">TLS/SSL concepts</a>
<ul>
<li><a href="#all_tls_perfect-forward-secrecy">Perfect forward secrecy</a></li>
<li><a href="#all_tls_alpn-and-sni">ALPN and SNI</a></li>
<li><a href="#all_tls_pre-shared-keys">Pre-shared keys</a></li>
<li><a href="#all_tls_client-initiated-renegotiation-attack-mitigation">Client-initiated renegotiation attack mitigation</a></li>
<li><a href="#all_tls_session-resumption">Session resumption</a>
<ul>
<li><a href="#all_tls_session-identifiers">Session identifiers</a></li>
<li><a href="#all_tls_session-tickets">Session tickets</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_tls_modifying-the-default-tls-cipher-suite">Modifying the default TLS cipher suite</a></li>
<li><a href="#all_tls_x509-certificate-error-codes">X509 certificate error codes</a></li>
<li><span class="stability_0"><a href="#all_tls_class-tlscryptostream">Class: <code>tls.CryptoStream</code></a></span>
<ul>
<li><a href="#all_tls_cryptostreambyteswritten"><code>cryptoStream.bytesWritten</code></a></li>
</ul>
</li>
<li><span class="stability_0"><a href="#all_tls_class-tlssecurepair">Class: <code>tls.SecurePair</code></a></span>
<ul>
<li><a href="#all_tls_event-secure">Event: <code>'secure'</code></a></li>
</ul>
</li>
<li><a href="#all_tls_class-tlsserver">Class: <code>tls.Server</code></a>
<ul>
<li><a href="#all_tls_event-connection">Event: <code>'connection'</code></a></li>
<li><a href="#all_tls_event-keylog">Event: <code>'keylog'</code></a></li>
<li><a href="#all_tls_event-newsession">Event: <code>'newSession'</code></a></li>
<li><a href="#all_tls_event-ocsprequest">Event: <code>'OCSPRequest'</code></a></li>
<li><a href="#all_tls_event-resumesession">Event: <code>'resumeSession'</code></a></li>
<li><a href="#all_tls_event-secureconnection">Event: <code>'secureConnection'</code></a></li>
<li><a href="#all_tls_event-tlsclienterror">Event: <code>'tlsClientError'</code></a></li>
<li><a href="#all_tls_serveraddcontexthostname-context"><code>server.addContext(hostname, context)</code></a></li>
<li><a href="#all_tls_serveraddress"><code>server.address()</code></a></li>
<li><a href="#all_tls_serverclosecallback"><code>server.close([callback])</code></a></li>
<li><a href="#all_tls_servergetticketkeys"><code>server.getTicketKeys()</code></a></li>
<li><a href="#all_tls_serverlisten"><code>server.listen()</code></a></li>
<li><a href="#all_tls_serversetsecurecontextoptions"><code>server.setSecureContext(options)</code></a></li>
<li><a href="#all_tls_serversetticketkeyskeys"><code>server.setTicketKeys(keys)</code></a></li>
</ul>
</li>
<li><a href="#all_tls_class-tlstlssocket">Class: <code>tls.TLSSocket</code></a>
<ul>
<li><a href="#all_tls_new-tlstlssocketsocket-options"><code>new tls.TLSSocket(socket[, options])</code></a></li>
<li><a href="#all_tls_event-keylog_1">Event: <code>'keylog'</code></a></li>
<li><a href="#all_tls_event-ocspresponse">Event: <code>'OCSPResponse'</code></a></li>
<li><a href="#all_tls_event-secureconnect">Event: <code>'secureConnect'</code></a></li>
<li><a href="#all_tls_event-session">Event: <code>'session'</code></a></li>
<li><a href="#all_tls_tlssocketaddress"><code>tlsSocket.address()</code></a></li>
<li><a href="#all_tls_tlssocketauthorizationerror"><code>tlsSocket.authorizationError</code></a></li>
<li><a href="#all_tls_tlssocketauthorized"><code>tlsSocket.authorized</code></a></li>
<li><a href="#all_tls_tlssocketdisablerenegotiation"><code>tlsSocket.disableRenegotiation()</code></a></li>
<li><a href="#all_tls_tlssocketenabletrace"><code>tlsSocket.enableTrace()</code></a></li>
<li><a href="#all_tls_tlssocketencrypted"><code>tlsSocket.encrypted</code></a></li>
<li><a href="#all_tls_tlssocketexportkeyingmateriallength-label-context"><code>tlsSocket.exportKeyingMaterial(length, label[, context])</code></a></li>
<li><a href="#all_tls_tlssocketgetcertificate"><code>tlsSocket.getCertificate()</code></a></li>
<li><a href="#all_tls_tlssocketgetcipher"><code>tlsSocket.getCipher()</code></a></li>
<li><a href="#all_tls_tlssocketgetephemeralkeyinfo"><code>tlsSocket.getEphemeralKeyInfo()</code></a></li>
<li><a href="#all_tls_tlssocketgetfinished"><code>tlsSocket.getFinished()</code></a></li>
<li><a href="#all_tls_tlssocketgetpeercertificatedetailed"><code>tlsSocket.getPeerCertificate([detailed])</code></a>
<ul>
<li><a href="#all_tls_certificate-object">Certificate object</a></li>
</ul>
</li>
<li><a href="#all_tls_tlssocketgetpeerfinished"><code>tlsSocket.getPeerFinished()</code></a></li>
<li><a href="#all_tls_tlssocketgetpeerx509certificate"><code>tlsSocket.getPeerX509Certificate()</code></a></li>
<li><a href="#all_tls_tlssocketgetprotocol"><code>tlsSocket.getProtocol()</code></a></li>
<li><a href="#all_tls_tlssocketgetsession"><code>tlsSocket.getSession()</code></a></li>
<li><a href="#all_tls_tlssocketgetsharedsigalgs"><code>tlsSocket.getSharedSigalgs()</code></a></li>
<li><a href="#all_tls_tlssocketgettlsticket"><code>tlsSocket.getTLSTicket()</code></a></li>
<li><a href="#all_tls_tlssocketgetx509certificate"><code>tlsSocket.getX509Certificate()</code></a></li>
<li><a href="#all_tls_tlssocketissessionreused"><code>tlsSocket.isSessionReused()</code></a></li>
<li><a href="#all_tls_tlssocketlocaladdress"><code>tlsSocket.localAddress</code></a></li>
<li><a href="#all_tls_tlssocketlocalport"><code>tlsSocket.localPort</code></a></li>
<li><a href="#all_tls_tlssocketremoteaddress"><code>tlsSocket.remoteAddress</code></a></li>
<li><a href="#all_tls_tlssocketremotefamily"><code>tlsSocket.remoteFamily</code></a></li>
<li><a href="#all_tls_tlssocketremoteport"><code>tlsSocket.remotePort</code></a></li>
<li><a href="#all_tls_tlssocketrenegotiateoptions-callback"><code>tlsSocket.renegotiate(options, callback)</code></a></li>
<li><a href="#all_tls_tlssocketsetmaxsendfragmentsize"><code>tlsSocket.setMaxSendFragment(size)</code></a></li>
</ul>
</li>
<li><a href="#all_tls_tlscheckserveridentityhostname-cert"><code>tls.checkServerIdentity(hostname, cert)</code></a></li>
<li><a href="#all_tls_tlsconnectoptions-callback"><code>tls.connect(options[, callback])</code></a></li>
<li><a href="#all_tls_tlsconnectpath-options-callback"><code>tls.connect(path[, options][, callback])</code></a></li>
<li><a href="#all_tls_tlsconnectport-host-options-callback"><code>tls.connect(port[, host][, options][, callback])</code></a></li>
<li><a href="#all_tls_tlscreatesecurecontextoptions"><code>tls.createSecureContext([options])</code></a></li>
<li><span class="stability_0"><a href="#all_tls_tlscreatesecurepaircontext-isserver-requestcert-rejectunauthorized-options"><code>tls.createSecurePair([context][, isServer][, requestCert][, rejectUnauthorized][, options])</code></a></span></li>
<li><a href="#all_tls_tlscreateserveroptions-secureconnectionlistener"><code>tls.createServer([options][, secureConnectionListener])</code></a></li>
<li><a href="#all_tls_tlsgetciphers"><code>tls.getCiphers()</code></a></li>
<li><a href="#all_tls_tlsrootcertificates"><code>tls.rootCertificates</code></a></li>
<li><a href="#all_tls_tlsdefault_ecdh_curve"><code>tls.DEFAULT_ECDH_CURVE</code></a></li>
<li><a href="#all_tls_tlsdefault_max_version"><code>tls.DEFAULT_MAX_VERSION</code></a></li>
<li><a href="#all_tls_tlsdefault_min_version"><code>tls.DEFAULT_MIN_VERSION</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_tracing_trace-events">Trace events</a></span>
<ul>
<li><a href="#all_tracing_the-nodetrace_events-module">The <code>node:trace_events</code> module</a>
<ul>
<li><a href="#all_tracing_tracing-object"><code>Tracing</code> object</a>
<ul>
<li><a href="#all_tracing_tracingcategories"><code>tracing.categories</code></a></li>
<li><a href="#all_tracing_tracingdisable"><code>tracing.disable()</code></a></li>
<li><a href="#all_tracing_tracingenable"><code>tracing.enable()</code></a></li>
<li><a href="#all_tracing_tracingenabled"><code>tracing.enabled</code></a></li>
</ul>
</li>
<li><a href="#all_tracing_trace_eventscreatetracingoptions"><code>trace_events.createTracing(options)</code></a></li>
<li><a href="#all_tracing_trace_eventsgetenabledcategories"><code>trace_events.getEnabledCategories()</code></a></li>
</ul>
</li>
<li><a href="#all_tracing_examples">Examples</a>
<ul>
<li><a href="#all_tracing_collect-trace-events-data-by-inspector">Collect trace events data by inspector</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_tty_tty">TTY</a></span>
<ul>
<li><a href="#all_tty_class-ttyreadstream">Class: <code>tty.ReadStream</code></a>
<ul>
<li><a href="#all_tty_readstreamisraw"><code>readStream.isRaw</code></a></li>
<li><a href="#all_tty_readstreamistty"><code>readStream.isTTY</code></a></li>
<li><a href="#all_tty_readstreamsetrawmodemode"><code>readStream.setRawMode(mode)</code></a></li>
</ul>
</li>
<li><a href="#all_tty_class-ttywritestream">Class: <code>tty.WriteStream</code></a>
<ul>
<li><a href="#all_tty_event-resize">Event: <code>'resize'</code></a></li>
<li><a href="#all_tty_writestreamclearlinedir-callback"><code>writeStream.clearLine(dir[, callback])</code></a></li>
<li><a href="#all_tty_writestreamclearscreendowncallback"><code>writeStream.clearScreenDown([callback])</code></a></li>
<li><a href="#all_tty_writestreamcolumns"><code>writeStream.columns</code></a></li>
<li><a href="#all_tty_writestreamcursortox-y-callback"><code>writeStream.cursorTo(x[, y][, callback])</code></a></li>
<li><a href="#all_tty_writestreamgetcolordepthenv"><code>writeStream.getColorDepth([env])</code></a></li>
<li><a href="#all_tty_writestreamgetwindowsize"><code>writeStream.getWindowSize()</code></a></li>
<li><a href="#all_tty_writestreamhascolorscount-env"><code>writeStream.hasColors([count][, env])</code></a></li>
<li><a href="#all_tty_writestreamistty"><code>writeStream.isTTY</code></a></li>
<li><a href="#all_tty_writestreammovecursordx-dy-callback"><code>writeStream.moveCursor(dx, dy[, callback])</code></a></li>
<li><a href="#all_tty_writestreamrows"><code>writeStream.rows</code></a></li>
</ul>
</li>
<li><a href="#all_tty_ttyisattyfd"><code>tty.isatty(fd)</code></a></li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_dgram_udpdatagram-sockets">UDP/datagram sockets</a></span>
<ul>
<li><a href="#all_dgram_class-dgramsocket">Class: <code>dgram.Socket</code></a>
<ul>
<li><a href="#all_dgram_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_dgram_event-connect">Event: <code>'connect'</code></a></li>
<li><a href="#all_dgram_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_dgram_event-listening">Event: <code>'listening'</code></a></li>
<li><a href="#all_dgram_event-message">Event: <code>'message'</code></a></li>
<li><a href="#all_dgram_socketaddmembershipmulticastaddress-multicastinterface"><code>socket.addMembership(multicastAddress[, multicastInterface])</code></a></li>
<li><a href="#all_dgram_socketaddsourcespecificmembershipsourceaddress-groupaddress-multicastinterface"><code>socket.addSourceSpecificMembership(sourceAddress, groupAddress[, multicastInterface])</code></a></li>
<li><a href="#all_dgram_socketaddress"><code>socket.address()</code></a></li>
<li><a href="#all_dgram_socketbindport-address-callback"><code>socket.bind([port][, address][, callback])</code></a></li>
<li><a href="#all_dgram_socketbindoptions-callback"><code>socket.bind(options[, callback])</code></a></li>
<li><a href="#all_dgram_socketclosecallback"><code>socket.close([callback])</code></a></li>
<li><a href="#all_dgram_socketconnectport-address-callback"><code>socket.connect(port[, address][, callback])</code></a></li>
<li><a href="#all_dgram_socketdisconnect"><code>socket.disconnect()</code></a></li>
<li><a href="#all_dgram_socketdropmembershipmulticastaddress-multicastinterface"><code>socket.dropMembership(multicastAddress[, multicastInterface])</code></a></li>
<li><a href="#all_dgram_socketdropsourcespecificmembershipsourceaddress-groupaddress-multicastinterface"><code>socket.dropSourceSpecificMembership(sourceAddress, groupAddress[, multicastInterface])</code></a></li>
<li><a href="#all_dgram_socketgetrecvbuffersize"><code>socket.getRecvBufferSize()</code></a></li>
<li><a href="#all_dgram_socketgetsendbuffersize"><code>socket.getSendBufferSize()</code></a></li>
<li><a href="#all_dgram_socketgetsendqueuesize"><code>socket.getSendQueueSize()</code></a></li>
<li><a href="#all_dgram_socketgetsendqueuecount"><code>socket.getSendQueueCount()</code></a></li>
<li><a href="#all_dgram_socketref"><code>socket.ref()</code></a></li>
<li><a href="#all_dgram_socketremoteaddress"><code>socket.remoteAddress()</code></a></li>
<li><a href="#all_dgram_socketsendmsg-offset-length-port-address-callback"><code>socket.send(msg[, offset, length][, port][, address][, callback])</code></a>
<ul>
<li><a href="#all_dgram_note-about-udp-datagram-size">Note about UDP datagram size</a></li>
</ul>
</li>
<li><a href="#all_dgram_socketsetbroadcastflag"><code>socket.setBroadcast(flag)</code></a></li>
<li><a href="#all_dgram_socketsetmulticastinterfacemulticastinterface"><code>socket.setMulticastInterface(multicastInterface)</code></a>
<ul>
<li><a href="#all_dgram_example-ipv6-outgoing-multicast-interface">Example: IPv6 outgoing multicast interface</a></li>
<li><a href="#all_dgram_example-ipv4-outgoing-multicast-interface">Example: IPv4 outgoing multicast interface</a></li>
<li><a href="#all_dgram_call-results">Call results</a></li>
</ul>
</li>
<li><a href="#all_dgram_socketsetmulticastloopbackflag"><code>socket.setMulticastLoopback(flag)</code></a></li>
<li><a href="#all_dgram_socketsetmulticastttlttl"><code>socket.setMulticastTTL(ttl)</code></a></li>
<li><a href="#all_dgram_socketsetrecvbuffersizesize"><code>socket.setRecvBufferSize(size)</code></a></li>
<li><a href="#all_dgram_socketsetsendbuffersizesize"><code>socket.setSendBufferSize(size)</code></a></li>
<li><a href="#all_dgram_socketsetttlttl"><code>socket.setTTL(ttl)</code></a></li>
<li><a href="#all_dgram_socketunref"><code>socket.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_dgram_nodedgram-module-functions"><code>node:dgram</code> module functions</a>
<ul>
<li><a href="#all_dgram_dgramcreatesocketoptions-callback"><code>dgram.createSocket(options[, callback])</code></a></li>
<li><a href="#all_dgram_dgramcreatesockettype-callback"><code>dgram.createSocket(type[, callback])</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_url_url">URL</a></span>
<ul>
<li><a href="#all_url_url-strings-and-url-objects">URL strings and URL objects</a>
<ul>
<li><a href="#all_url_constructing-a-url-from-component-parts-and-getting-the-constructed-string">Constructing a URL from component parts and getting the constructed string</a></li>
</ul>
</li>
<li><a href="#all_url_the-whatwg-url-api">The WHATWG URL API</a>
<ul>
<li><a href="#all_url_class-url">Class: <code>URL</code></a>
<ul>
<li><a href="#all_url_new-urlinput-base"><code>new URL(input[, base])</code></a></li>
<li><a href="#all_url_urlhash"><code>url.hash</code></a></li>
<li><a href="#all_url_urlhost"><code>url.host</code></a></li>
<li><a href="#all_url_urlhostname"><code>url.hostname</code></a></li>
<li><a href="#all_url_urlhref"><code>url.href</code></a></li>
<li><a href="#all_url_urlorigin"><code>url.origin</code></a></li>
<li><a href="#all_url_urlpassword"><code>url.password</code></a></li>
<li><a href="#all_url_urlpathname"><code>url.pathname</code></a></li>
<li><a href="#all_url_urlport"><code>url.port</code></a></li>
<li><a href="#all_url_urlprotocol"><code>url.protocol</code></a>
<ul>
<li><a href="#all_url_special-schemes">Special schemes</a></li>
</ul>
</li>
<li><a href="#all_url_urlsearch"><code>url.search</code></a></li>
<li><a href="#all_url_urlsearchparams"><code>url.searchParams</code></a></li>
<li><a href="#all_url_urlusername"><code>url.username</code></a></li>
<li><a href="#all_url_urltostring"><code>url.toString()</code></a></li>
<li><a href="#all_url_urltojson"><code>url.toJSON()</code></a></li>
<li><span class="stability_1"><a href="#all_url_urlcreateobjecturlblob"><code>URL.createObjectURL(blob)</code></a></span></li>
<li><span class="stability_1"><a href="#all_url_urlrevokeobjecturlid"><code>URL.revokeObjectURL(id)</code></a></span></li>
</ul>
</li>
<li><a href="#all_url_class-urlsearchparams">Class: <code>URLSearchParams</code></a>
<ul>
<li><a href="#all_url_new-urlsearchparams"><code>new URLSearchParams()</code></a></li>
<li><a href="#all_url_new-urlsearchparamsstring"><code>new URLSearchParams(string)</code></a></li>
<li><a href="#all_url_new-urlsearchparamsobj"><code>new URLSearchParams(obj)</code></a></li>
<li><a href="#all_url_new-urlsearchparamsiterable"><code>new URLSearchParams(iterable)</code></a></li>
<li><a href="#all_url_urlsearchparamsappendname-value"><code>urlSearchParams.append(name, value)</code></a></li>
<li><a href="#all_url_urlsearchparamsdeletename"><code>urlSearchParams.delete(name)</code></a></li>
<li><a href="#all_url_urlsearchparamsentries"><code>urlSearchParams.entries()</code></a></li>
<li><a href="#all_url_urlsearchparamsforeachfn-thisarg"><code>urlSearchParams.forEach(fn[, thisArg])</code></a></li>
<li><a href="#all_url_urlsearchparamsgetname"><code>urlSearchParams.get(name)</code></a></li>
<li><a href="#all_url_urlsearchparamsgetallname"><code>urlSearchParams.getAll(name)</code></a></li>
<li><a href="#all_url_urlsearchparamshasname"><code>urlSearchParams.has(name)</code></a></li>
<li><a href="#all_url_urlsearchparamskeys"><code>urlSearchParams.keys()</code></a></li>
<li><a href="#all_url_urlsearchparamssetname-value"><code>urlSearchParams.set(name, value)</code></a></li>
<li><a href="#all_url_urlsearchparamssort"><code>urlSearchParams.sort()</code></a></li>
<li><a href="#all_url_urlsearchparamstostring"><code>urlSearchParams.toString()</code></a></li>
<li><a href="#all_url_urlsearchparamsvalues"><code>urlSearchParams.values()</code></a></li>
<li><a href="#all_url_urlsearchparamssymboliterator"><code>urlSearchParams[Symbol.iterator]()</code></a></li>
</ul>
</li>
<li><a href="#all_url_urldomaintoasciidomain"><code>url.domainToASCII(domain)</code></a></li>
<li><a href="#all_url_urldomaintounicodedomain"><code>url.domainToUnicode(domain)</code></a></li>
<li><a href="#all_url_urlfileurltopathurl"><code>url.fileURLToPath(url)</code></a></li>
<li><a href="#all_url_urlformaturl-options"><code>url.format(URL[, options])</code></a></li>
<li><a href="#all_url_urlpathtofileurlpath"><code>url.pathToFileURL(path)</code></a></li>
<li><a href="#all_url_urlurltohttpoptionsurl"><code>url.urlToHttpOptions(url)</code></a></li>
</ul>
</li>
<li><span class="stability_3"><a href="#all_url_legacy-url-api">Legacy URL API</a></span>
<ul>
<li><span class="stability_3"><a href="#all_url_legacy-urlobject">Legacy <code>urlObject</code></a></span>
<ul>
<li><a href="#all_url_urlobjectauth"><code>urlObject.auth</code></a></li>
<li><a href="#all_url_urlobjecthash"><code>urlObject.hash</code></a></li>
<li><a href="#all_url_urlobjecthost"><code>urlObject.host</code></a></li>
<li><a href="#all_url_urlobjecthostname"><code>urlObject.hostname</code></a></li>
<li><a href="#all_url_urlobjecthref"><code>urlObject.href</code></a></li>
<li><a href="#all_url_urlobjectpath"><code>urlObject.path</code></a></li>
<li><a href="#all_url_urlobjectpathname"><code>urlObject.pathname</code></a></li>
<li><a href="#all_url_urlobjectport"><code>urlObject.port</code></a></li>
<li><a href="#all_url_urlobjectprotocol"><code>urlObject.protocol</code></a></li>
<li><a href="#all_url_urlobjectquery"><code>urlObject.query</code></a></li>
<li><a href="#all_url_urlobjectsearch"><code>urlObject.search</code></a></li>
<li><a href="#all_url_urlobjectslashes"><code>urlObject.slashes</code></a></li>
</ul>
</li>
<li><span class="stability_3"><a href="#all_url_urlformaturlobject"><code>url.format(urlObject)</code></a></span></li>
<li><span class="stability_3"><a href="#all_url_urlparseurlstring-parsequerystring-slashesdenotehost"><code>url.parse(urlString[, parseQueryString[, slashesDenoteHost]])</code></a></span></li>
<li><span class="stability_3"><a href="#all_url_urlresolvefrom-to"><code>url.resolve(from, to)</code></a></span></li>
</ul>
</li>
<li><a href="#all_url_percent-encoding-in-urls">Percent-encoding in URLs</a>
<ul>
<li><a href="#all_url_legacy-api">Legacy API</a></li>
<li><a href="#all_url_whatwg-api">WHATWG API</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_util_util">Util</a></span>
<ul>
<li><a href="#all_util_utilcallbackifyoriginal"><code>util.callbackify(original)</code></a></li>
<li><a href="#all_util_utildebuglogsection-callback"><code>util.debuglog(section[, callback])</code></a>
<ul>
<li><a href="#all_util_debuglogenabled"><code>debuglog().enabled</code></a></li>
</ul>
</li>
<li><a href="#all_util_utildebugsection"><code>util.debug(section)</code></a></li>
<li><a href="#all_util_utildeprecatefn-msg-code"><code>util.deprecate(fn, msg[, code])</code></a></li>
<li><a href="#all_util_utilformatformat-args"><code>util.format(format[, ...args])</code></a></li>
<li><a href="#all_util_utilformatwithoptionsinspectoptions-format-args"><code>util.formatWithOptions(inspectOptions, format[, ...args])</code></a></li>
<li><a href="#all_util_utilgetsystemerrornameerr"><code>util.getSystemErrorName(err)</code></a></li>
<li><a href="#all_util_utilgetsystemerrormap"><code>util.getSystemErrorMap()</code></a></li>
<li><span class="stability_3"><a href="#all_util_utilinheritsconstructor-superconstructor"><code>util.inherits(constructor, superConstructor)</code></a></span></li>
<li><a href="#all_util_utilinspectobject-options"><code>util.inspect(object[, options])</code></a></li>
<li><a href="#all_util_utilinspectobject-showhidden-depth-colors"><code>util.inspect(object[, showHidden[, depth[, colors]]])</code></a>
<ul>
<li><a href="#all_util_customizing-utilinspect-colors">Customizing <code>util.inspect</code> colors</a>
<ul>
<li><a href="#all_util_modifiers">Modifiers</a></li>
<li><a href="#all_util_foreground-colors">Foreground colors</a></li>
<li><a href="#all_util_background-colors">Background colors</a></li>
</ul>
</li>
<li><a href="#all_util_custom-inspection-functions-on-objects">Custom inspection functions on objects</a></li>
<li><a href="#all_util_utilinspectcustom"><code>util.inspect.custom</code></a></li>
<li><a href="#all_util_utilinspectdefaultoptions"><code>util.inspect.defaultOptions</code></a></li>
</ul>
</li>
<li><a href="#all_util_utilisdeepstrictequalval1-val2"><code>util.isDeepStrictEqual(val1, val2)</code></a></li>
<li><span class="stability_1"><a href="#all_util_utilparseargsconfig"><code>util.parseArgs([config])</code></a></span>
<ul>
<li><a href="#all_util_parseargs-tokens"><code>parseArgs</code> <code>tokens</code></a></li>
</ul>
</li>
<li><a href="#all_util_utilpromisifyoriginal"><code>util.promisify(original)</code></a>
<ul>
<li><a href="#all_util_custom-promisified-functions">Custom promisified functions</a></li>
<li><a href="#all_util_utilpromisifycustom"><code>util.promisify.custom</code></a></li>
</ul>
</li>
<li><a href="#all_util_utilstripvtcontrolcharactersstr"><code>util.stripVTControlCharacters(str)</code></a></li>
<li><a href="#all_util_class-utiltextdecoder">Class: <code>util.TextDecoder</code></a>
<ul>
<li><a href="#all_util_whatwg-supported-encodings">WHATWG supported encodings</a>
<ul>
<li><a href="#all_util_encodings-supported-by-default-with-full-icu-data">Encodings supported by default (with full ICU data)</a></li>
<li><a href="#all_util_encodings-supported-when-nodejs-is-built-with-the-small-icu-option">Encodings supported when Node.js is built with the <code>small-icu</code> option</a></li>
<li><a href="#all_util_encodings-supported-when-icu-is-disabled">Encodings supported when ICU is disabled</a></li>
</ul>
</li>
<li><a href="#all_util_new-textdecoderencoding-options"><code>new TextDecoder([encoding[, options]])</code></a></li>
<li><a href="#all_util_textdecoderdecodeinput-options"><code>textDecoder.decode([input[, options]])</code></a></li>
<li><a href="#all_util_textdecoderencoding"><code>textDecoder.encoding</code></a></li>
<li><a href="#all_util_textdecoderfatal"><code>textDecoder.fatal</code></a></li>
<li><a href="#all_util_textdecoderignorebom"><code>textDecoder.ignoreBOM</code></a></li>
</ul>
</li>
<li><a href="#all_util_class-utiltextencoder">Class: <code>util.TextEncoder</code></a>
<ul>
<li><a href="#all_util_textencoderencodeinput"><code>textEncoder.encode([input])</code></a></li>
<li><a href="#all_util_textencoderencodeintosrc-dest"><code>textEncoder.encodeInto(src, dest)</code></a></li>
<li><a href="#all_util_textencoderencoding"><code>textEncoder.encoding</code></a></li>
</ul>
</li>
<li><a href="#all_util_utiltousvstringstring"><code>util.toUSVString(string)</code></a></li>
<li><a href="#all_util_utiltypes"><code>util.types</code></a>
<ul>
<li><a href="#all_util_utiltypesisanyarraybuffervalue"><code>util.types.isAnyArrayBuffer(value)</code></a></li>
<li><a href="#all_util_utiltypesisarraybufferviewvalue"><code>util.types.isArrayBufferView(value)</code></a></li>
<li><a href="#all_util_utiltypesisargumentsobjectvalue"><code>util.types.isArgumentsObject(value)</code></a></li>
<li><a href="#all_util_utiltypesisarraybuffervalue"><code>util.types.isArrayBuffer(value)</code></a></li>
<li><a href="#all_util_utiltypesisasyncfunctionvalue"><code>util.types.isAsyncFunction(value)</code></a></li>
<li><a href="#all_util_utiltypesisbigint64arrayvalue"><code>util.types.isBigInt64Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisbiguint64arrayvalue"><code>util.types.isBigUint64Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisbooleanobjectvalue"><code>util.types.isBooleanObject(value)</code></a></li>
<li><a href="#all_util_utiltypesisboxedprimitivevalue"><code>util.types.isBoxedPrimitive(value)</code></a></li>
<li><a href="#all_util_utiltypesiscryptokeyvalue"><code>util.types.isCryptoKey(value)</code></a></li>
<li><a href="#all_util_utiltypesisdataviewvalue"><code>util.types.isDataView(value)</code></a></li>
<li><a href="#all_util_utiltypesisdatevalue"><code>util.types.isDate(value)</code></a></li>
<li><a href="#all_util_utiltypesisexternalvalue"><code>util.types.isExternal(value)</code></a></li>
<li><a href="#all_util_utiltypesisfloat32arrayvalue"><code>util.types.isFloat32Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisfloat64arrayvalue"><code>util.types.isFloat64Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisgeneratorfunctionvalue"><code>util.types.isGeneratorFunction(value)</code></a></li>
<li><a href="#all_util_utiltypesisgeneratorobjectvalue"><code>util.types.isGeneratorObject(value)</code></a></li>
<li><a href="#all_util_utiltypesisint8arrayvalue"><code>util.types.isInt8Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisint16arrayvalue"><code>util.types.isInt16Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisint32arrayvalue"><code>util.types.isInt32Array(value)</code></a></li>
<li><a href="#all_util_utiltypesiskeyobjectvalue"><code>util.types.isKeyObject(value)</code></a></li>
<li><a href="#all_util_utiltypesismapvalue"><code>util.types.isMap(value)</code></a></li>
<li><a href="#all_util_utiltypesismapiteratorvalue"><code>util.types.isMapIterator(value)</code></a></li>
<li><a href="#all_util_utiltypesismodulenamespaceobjectvalue"><code>util.types.isModuleNamespaceObject(value)</code></a></li>
<li><a href="#all_util_utiltypesisnativeerrorvalue"><code>util.types.isNativeError(value)</code></a></li>
<li><a href="#all_util_utiltypesisnumberobjectvalue"><code>util.types.isNumberObject(value)</code></a></li>
<li><a href="#all_util_utiltypesispromisevalue"><code>util.types.isPromise(value)</code></a></li>
<li><a href="#all_util_utiltypesisproxyvalue"><code>util.types.isProxy(value)</code></a></li>
<li><a href="#all_util_utiltypesisregexpvalue"><code>util.types.isRegExp(value)</code></a></li>
<li><a href="#all_util_utiltypesissetvalue"><code>util.types.isSet(value)</code></a></li>
<li><a href="#all_util_utiltypesissetiteratorvalue"><code>util.types.isSetIterator(value)</code></a></li>
<li><a href="#all_util_utiltypesissharedarraybuffervalue"><code>util.types.isSharedArrayBuffer(value)</code></a></li>
<li><a href="#all_util_utiltypesisstringobjectvalue"><code>util.types.isStringObject(value)</code></a></li>
<li><a href="#all_util_utiltypesissymbolobjectvalue"><code>util.types.isSymbolObject(value)</code></a></li>
<li><a href="#all_util_utiltypesistypedarrayvalue"><code>util.types.isTypedArray(value)</code></a></li>
<li><a href="#all_util_utiltypesisuint8arrayvalue"><code>util.types.isUint8Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisuint8clampedarrayvalue"><code>util.types.isUint8ClampedArray(value)</code></a></li>
<li><a href="#all_util_utiltypesisuint16arrayvalue"><code>util.types.isUint16Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisuint32arrayvalue"><code>util.types.isUint32Array(value)</code></a></li>
<li><a href="#all_util_utiltypesisweakmapvalue"><code>util.types.isWeakMap(value)</code></a></li>
<li><a href="#all_util_utiltypesisweaksetvalue"><code>util.types.isWeakSet(value)</code></a></li>
<li><span class="stability_0"><a href="#all_util_utiltypesiswebassemblycompiledmodulevalue"><code>util.types.isWebAssemblyCompiledModule(value)</code></a></span></li>
</ul>
</li>
<li><a href="#all_util_deprecated-apis">Deprecated APIs</a>
<ul>
<li><span class="stability_0"><a href="#all_util_util_extendtarget-source"><code>util._extend(target, source)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisarrayobject"><code>util.isArray(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisbooleanobject"><code>util.isBoolean(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisbufferobject"><code>util.isBuffer(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisdateobject"><code>util.isDate(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utiliserrorobject"><code>util.isError(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisfunctionobject"><code>util.isFunction(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisnullobject"><code>util.isNull(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisnullorundefinedobject"><code>util.isNullOrUndefined(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisnumberobject"><code>util.isNumber(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisobjectobject"><code>util.isObject(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisprimitiveobject"><code>util.isPrimitive(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisregexpobject"><code>util.isRegExp(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisstringobject"><code>util.isString(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilissymbolobject"><code>util.isSymbol(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utilisundefinedobject"><code>util.isUndefined(object)</code></a></span></li>
<li><span class="stability_0"><a href="#all_util_utillogstring"><code>util.log(string)</code></a></span></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_v8_v8">V8</a>
<ul>
<li><a href="#all_v8_v8cacheddataversiontag"><code>v8.cachedDataVersionTag()</code></a></li>
<li><a href="#all_v8_v8getheapcodestatistics"><code>v8.getHeapCodeStatistics()</code></a></li>
<li><a href="#all_v8_v8getheapsnapshot"><code>v8.getHeapSnapshot()</code></a></li>
<li><a href="#all_v8_v8getheapspacestatistics"><code>v8.getHeapSpaceStatistics()</code></a></li>
<li><a href="#all_v8_v8getheapstatistics"><code>v8.getHeapStatistics()</code></a></li>
<li><a href="#all_v8_v8setflagsfromstringflags"><code>v8.setFlagsFromString(flags)</code></a></li>
<li><a href="#all_v8_v8stopcoverage"><code>v8.stopCoverage()</code></a></li>
<li><a href="#all_v8_v8takecoverage"><code>v8.takeCoverage()</code></a></li>
<li><a href="#all_v8_v8writeheapsnapshotfilename"><code>v8.writeHeapSnapshot([filename])</code></a></li>
<li><a href="#all_v8_serialization-api">Serialization API</a>
<ul>
<li><a href="#all_v8_v8serializevalue"><code>v8.serialize(value)</code></a></li>
<li><a href="#all_v8_v8deserializebuffer"><code>v8.deserialize(buffer)</code></a></li>
<li><a href="#all_v8_class-v8serializer">Class: <code>v8.Serializer</code></a>
<ul>
<li><a href="#all_v8_new-serializer"><code>new Serializer()</code></a></li>
<li><a href="#all_v8_serializerwriteheader"><code>serializer.writeHeader()</code></a></li>
<li><a href="#all_v8_serializerwritevaluevalue"><code>serializer.writeValue(value)</code></a></li>
<li><a href="#all_v8_serializerreleasebuffer"><code>serializer.releaseBuffer()</code></a></li>
<li><a href="#all_v8_serializertransferarraybufferid-arraybuffer"><code>serializer.transferArrayBuffer(id, arrayBuffer)</code></a></li>
<li><a href="#all_v8_serializerwriteuint32value"><code>serializer.writeUint32(value)</code></a></li>
<li><a href="#all_v8_serializerwriteuint64hi-lo"><code>serializer.writeUint64(hi, lo)</code></a></li>
<li><a href="#all_v8_serializerwritedoublevalue"><code>serializer.writeDouble(value)</code></a></li>
<li><a href="#all_v8_serializerwriterawbytesbuffer"><code>serializer.writeRawBytes(buffer)</code></a></li>
<li><a href="#all_v8_serializer_writehostobjectobject"><code>serializer._writeHostObject(object)</code></a></li>
<li><a href="#all_v8_serializer_getdatacloneerrormessage"><code>serializer._getDataCloneError(message)</code></a></li>
<li><a href="#all_v8_serializer_getsharedarraybufferidsharedarraybuffer"><code>serializer._getSharedArrayBufferId(sharedArrayBuffer)</code></a></li>
<li><a href="#all_v8_serializer_settreatarraybufferviewsashostobjectsflag"><code>serializer._setTreatArrayBufferViewsAsHostObjects(flag)</code></a></li>
</ul>
</li>
<li><a href="#all_v8_class-v8deserializer">Class: <code>v8.Deserializer</code></a>
<ul>
<li><a href="#all_v8_new-deserializerbuffer"><code>new Deserializer(buffer)</code></a></li>
<li><a href="#all_v8_deserializerreadheader"><code>deserializer.readHeader()</code></a></li>
<li><a href="#all_v8_deserializerreadvalue"><code>deserializer.readValue()</code></a></li>
<li><a href="#all_v8_deserializertransferarraybufferid-arraybuffer"><code>deserializer.transferArrayBuffer(id, arrayBuffer)</code></a></li>
<li><a href="#all_v8_deserializergetwireformatversion"><code>deserializer.getWireFormatVersion()</code></a></li>
<li><a href="#all_v8_deserializerreaduint32"><code>deserializer.readUint32()</code></a></li>
<li><a href="#all_v8_deserializerreaduint64"><code>deserializer.readUint64()</code></a></li>
<li><a href="#all_v8_deserializerreaddouble"><code>deserializer.readDouble()</code></a></li>
<li><a href="#all_v8_deserializerreadrawbyteslength"><code>deserializer.readRawBytes(length)</code></a></li>
<li><a href="#all_v8_deserializer_readhostobject"><code>deserializer._readHostObject()</code></a></li>
</ul>
</li>
<li><a href="#all_v8_class-v8defaultserializer">Class: <code>v8.DefaultSerializer</code></a></li>
<li><a href="#all_v8_class-v8defaultdeserializer">Class: <code>v8.DefaultDeserializer</code></a></li>
</ul>
</li>
<li><a href="#all_v8_promise-hooks">Promise hooks</a>
<ul>
<li><a href="#all_v8_promisehooksoninitinit"><code>promiseHooks.onInit(init)</code></a></li>
<li><a href="#all_v8_promisehooksonsettledsettled"><code>promiseHooks.onSettled(settled)</code></a></li>
<li><a href="#all_v8_promisehooksonbeforebefore"><code>promiseHooks.onBefore(before)</code></a></li>
<li><a href="#all_v8_promisehooksonafterafter"><code>promiseHooks.onAfter(after)</code></a></li>
<li><a href="#all_v8_promisehookscreatehookcallbacks"><code>promiseHooks.createHook(callbacks)</code></a></li>
<li><a href="#all_v8_hook-callbacks">Hook callbacks</a>
<ul>
<li><a href="#all_v8_initpromise-parent"><code>init(promise, parent)</code></a></li>
<li><a href="#all_v8_beforepromise"><code>before(promise)</code></a></li>
<li><a href="#all_v8_afterpromise"><code>after(promise)</code></a></li>
<li><a href="#all_v8_settledpromise"><code>settled(promise)</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_v8_startup-snapshot-api">Startup Snapshot API</a></span>
<ul>
<li><a href="#all_v8_v8startupsnapshotaddserializecallbackcallback-data"><code>v8.startupSnapshot.addSerializeCallback(callback[, data])</code></a></li>
<li><a href="#all_v8_v8startupsnapshotadddeserializecallbackcallback-data"><code>v8.startupSnapshot.addDeserializeCallback(callback[, data])</code></a></li>
<li><a href="#all_v8_v8startupsnapshotsetdeserializemainfunctioncallback-data"><code>v8.startupSnapshot.setDeserializeMainFunction(callback[, data])</code></a></li>
<li><a href="#all_v8_v8startupsnapshotisbuildingsnapshot"><code>v8.startupSnapshot.isBuildingSnapshot()</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_vm_vm-executing-javascript">VM (executing JavaScript)</a></span>
<ul>
<li><a href="#all_vm_class-vmscript">Class: <code>vm.Script</code></a>
<ul>
<li><a href="#all_vm_new-vmscriptcode-options"><code>new vm.Script(code[, options])</code></a></li>
<li><a href="#all_vm_scriptcreatecacheddata"><code>script.createCachedData()</code></a></li>
<li><a href="#all_vm_scriptrunincontextcontextifiedobject-options"><code>script.runInContext(contextifiedObject[, options])</code></a></li>
<li><a href="#all_vm_scriptruninnewcontextcontextobject-options"><code>script.runInNewContext([contextObject[, options]])</code></a></li>
<li><a href="#all_vm_scriptruninthiscontextoptions"><code>script.runInThisContext([options])</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_vm_class-vmmodule">Class: <code>vm.Module</code></a></span>
<ul>
<li><a href="#all_vm_moduledependencyspecifiers"><code>module.dependencySpecifiers</code></a></li>
<li><a href="#all_vm_moduleerror"><code>module.error</code></a></li>
<li><a href="#all_vm_moduleevaluateoptions"><code>module.evaluate([options])</code></a></li>
<li><a href="#all_vm_moduleidentifier"><code>module.identifier</code></a></li>
<li><a href="#all_vm_modulelinklinker"><code>module.link(linker)</code></a></li>
<li><a href="#all_vm_modulenamespace"><code>module.namespace</code></a></li>
<li><a href="#all_vm_modulestatus"><code>module.status</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_vm_class-vmsourcetextmodule">Class: <code>vm.SourceTextModule</code></a></span>
<ul>
<li><a href="#all_vm_new-vmsourcetextmodulecode-options"><code>new vm.SourceTextModule(code[, options])</code></a></li>
<li><a href="#all_vm_sourcetextmodulecreatecacheddata"><code>sourceTextModule.createCachedData()</code></a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_vm_class-vmsyntheticmodule">Class: <code>vm.SyntheticModule</code></a></span>
<ul>
<li><a href="#all_vm_new-vmsyntheticmoduleexportnames-evaluatecallback-options"><code>new vm.SyntheticModule(exportNames, evaluateCallback[, options])</code></a></li>
<li><a href="#all_vm_syntheticmodulesetexportname-value"><code>syntheticModule.setExport(name, value)</code></a></li>
</ul>
</li>
<li><a href="#all_vm_vmcompilefunctioncode-params-options"><code>vm.compileFunction(code[, params[, options]])</code></a></li>
<li><a href="#all_vm_vmcreatecontextcontextobject-options"><code>vm.createContext([contextObject[, options]])</code></a></li>
<li><a href="#all_vm_vmiscontextobject"><code>vm.isContext(object)</code></a></li>
<li><span class="stability_1"><a href="#all_vm_vmmeasurememoryoptions"><code>vm.measureMemory([options])</code></a></span></li>
<li><a href="#all_vm_vmrunincontextcode-contextifiedobject-options"><code>vm.runInContext(code, contextifiedObject[, options])</code></a></li>
<li><a href="#all_vm_vmruninnewcontextcode-contextobject-options"><code>vm.runInNewContext(code[, contextObject[, options]])</code></a></li>
<li><a href="#all_vm_vmruninthiscontextcode-options"><code>vm.runInThisContext(code[, options])</code></a></li>
<li><a href="#all_vm_example-running-an-http-server-within-a-vm">Example: Running an HTTP server within a VM</a></li>
<li><a href="#all_vm_what-does-it-mean-to-contextify-an-object">What does it mean to "contextify" an object?</a></li>
<li><a href="#all_vm_timeout-interactions-with-asynchronous-tasks-and-promises">Timeout interactions with asynchronous tasks and Promises</a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_wasi_webassembly-system-interface-wasi">WebAssembly System Interface (WASI)</a></span>
<ul>
<li><a href="#all_wasi_class-wasi">Class: <code>WASI</code></a>
<ul>
<li><a href="#all_wasi_new-wasioptions"><code>new WASI([options])</code></a></li>
<li><a href="#all_wasi_wasistartinstance"><code>wasi.start(instance)</code></a></li>
<li><a href="#all_wasi_wasiinitializeinstance"><code>wasi.initialize(instance)</code></a></li>
<li><a href="#all_wasi_wasiwasiimport"><code>wasi.wasiImport</code></a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_webcrypto_web-crypto-api">Web Crypto API</a></span>
<ul>
<li><a href="#all_webcrypto_examples">Examples</a>
<ul>
<li><a href="#all_webcrypto_generating-keys">Generating keys</a>
<ul>
<li><a href="#all_webcrypto_aes-keys">AES keys</a></li>
<li><a href="#all_webcrypto_ecdsa-key-pairs">ECDSA key pairs</a></li>
<li><span class="stability_1"><a href="#all_webcrypto_ed25519ed448x25519x448-key-pairs">Ed25519/Ed448/X25519/X448 key pairs</a></span></li>
<li><a href="#all_webcrypto_hmac-keys">HMAC keys</a></li>
<li><a href="#all_webcrypto_rsa-key-pairs">RSA key pairs</a></li>
</ul>
</li>
<li><a href="#all_webcrypto_encryption-and-decryption">Encryption and decryption</a></li>
<li><a href="#all_webcrypto_exporting-and-importing-keys">Exporting and importing keys</a></li>
<li><a href="#all_webcrypto_wrapping-and-unwrapping-keys">Wrapping and unwrapping keys</a></li>
<li><a href="#all_webcrypto_sign-and-verify">Sign and verify</a></li>
<li><a href="#all_webcrypto_deriving-bits-and-keys">Deriving bits and keys</a></li>
<li><a href="#all_webcrypto_digest">Digest</a></li>
</ul>
</li>
<li><a href="#all_webcrypto_algorithm-matrix">Algorithm matrix</a></li>
<li><a href="#all_webcrypto_class-crypto">Class: <code>Crypto</code></a>
<ul>
<li><a href="#all_webcrypto_cryptosubtle"><code>crypto.subtle</code></a></li>
<li><a href="#all_webcrypto_cryptogetrandomvaluestypedarray"><code>crypto.getRandomValues(typedArray)</code></a></li>
<li><a href="#all_webcrypto_cryptorandomuuid"><code>crypto.randomUUID()</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-cryptokey">Class: <code>CryptoKey</code></a>
<ul>
<li><a href="#all_webcrypto_cryptokeyalgorithm"><code>cryptoKey.algorithm</code></a></li>
<li><a href="#all_webcrypto_cryptokeyextractable"><code>cryptoKey.extractable</code></a></li>
<li><a href="#all_webcrypto_cryptokeytype"><code>cryptoKey.type</code></a></li>
<li><a href="#all_webcrypto_cryptokeyusages"><code>cryptoKey.usages</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-cryptokeypair">Class: <code>CryptoKeyPair</code></a>
<ul>
<li><a href="#all_webcrypto_cryptokeypairprivatekey"><code>cryptoKeyPair.privateKey</code></a></li>
<li><a href="#all_webcrypto_cryptokeypairpublickey"><code>cryptoKeyPair.publicKey</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-subtlecrypto">Class: <code>SubtleCrypto</code></a>
<ul>
<li><a href="#all_webcrypto_subtledecryptalgorithm-key-data"><code>subtle.decrypt(algorithm, key, data)</code></a></li>
<li><a href="#all_webcrypto_subtlederivebitsalgorithm-basekey-length"><code>subtle.deriveBits(algorithm, baseKey, length)</code></a></li>
<li><a href="#all_webcrypto_subtlederivekeyalgorithm-basekey-derivedkeyalgorithm-extractable-keyusages"><code>subtle.deriveKey(algorithm, baseKey, derivedKeyAlgorithm, extractable, keyUsages)</code></a></li>
<li><a href="#all_webcrypto_subtledigestalgorithm-data"><code>subtle.digest(algorithm, data)</code></a></li>
<li><a href="#all_webcrypto_subtleencryptalgorithm-key-data"><code>subtle.encrypt(algorithm, key, data)</code></a></li>
<li><a href="#all_webcrypto_subtleexportkeyformat-key"><code>subtle.exportKey(format, key)</code></a></li>
<li><a href="#all_webcrypto_subtlegeneratekeyalgorithm-extractable-keyusages"><code>subtle.generateKey(algorithm, extractable, keyUsages)</code></a></li>
<li><a href="#all_webcrypto_subtleimportkeyformat-keydata-algorithm-extractable-keyusages"><code>subtle.importKey(format, keyData, algorithm, extractable, keyUsages)</code></a></li>
<li><a href="#all_webcrypto_subtlesignalgorithm-key-data"><code>subtle.sign(algorithm, key, data)</code></a></li>
<li><a href="#all_webcrypto_subtleunwrapkeyformat-wrappedkey-unwrappingkey-unwrapalgo-unwrappedkeyalgo-extractable-keyusages"><code>subtle.unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgo, unwrappedKeyAlgo, extractable, keyUsages)</code></a></li>
<li><a href="#all_webcrypto_subtleverifyalgorithm-key-signature-data"><code>subtle.verify(algorithm, key, signature, data)</code></a></li>
<li><a href="#all_webcrypto_subtlewrapkeyformat-key-wrappingkey-wrapalgo"><code>subtle.wrapKey(format, key, wrappingKey, wrapAlgo)</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_algorithm-parameters">Algorithm parameters</a>
<ul>
<li><a href="#all_webcrypto_class-algorithmidentifier">Class: <code>AlgorithmIdentifier</code></a>
<ul>
<li><a href="#all_webcrypto_algorithmidentifiername"><code>algorithmIdentifier.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-aescbcparams">Class: <code>AesCbcParams</code></a>
<ul>
<li><a href="#all_webcrypto_aescbcparamsiv"><code>aesCbcParams.iv</code></a></li>
<li><a href="#all_webcrypto_aescbcparamsname"><code>aesCbcParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-aesctrparams">Class: <code>AesCtrParams</code></a>
<ul>
<li><a href="#all_webcrypto_aesctrparamscounter"><code>aesCtrParams.counter</code></a></li>
<li><a href="#all_webcrypto_aesctrparamslength"><code>aesCtrParams.length</code></a></li>
<li><a href="#all_webcrypto_aesctrparamsname"><code>aesCtrParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-aesgcmparams">Class: <code>AesGcmParams</code></a>
<ul>
<li><a href="#all_webcrypto_aesgcmparamsadditionaldata"><code>aesGcmParams.additionalData</code></a></li>
<li><a href="#all_webcrypto_aesgcmparamsiv"><code>aesGcmParams.iv</code></a></li>
<li><a href="#all_webcrypto_aesgcmparamsname"><code>aesGcmParams.name</code></a></li>
<li><a href="#all_webcrypto_aesgcmparamstaglength"><code>aesGcmParams.tagLength</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-aeskeygenparams">Class: <code>AesKeyGenParams</code></a>
<ul>
<li><a href="#all_webcrypto_aeskeygenparamslength"><code>aesKeyGenParams.length</code></a></li>
<li><a href="#all_webcrypto_aeskeygenparamsname"><code>aesKeyGenParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-ecdhkeyderiveparams">Class: <code>EcdhKeyDeriveParams</code></a>
<ul>
<li><a href="#all_webcrypto_ecdhkeyderiveparamsname"><code>ecdhKeyDeriveParams.name</code></a></li>
<li><a href="#all_webcrypto_ecdhkeyderiveparamspublic"><code>ecdhKeyDeriveParams.public</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-ecdsaparams">Class: <code>EcdsaParams</code></a>
<ul>
<li><a href="#all_webcrypto_ecdsaparamshash"><code>ecdsaParams.hash</code></a></li>
<li><a href="#all_webcrypto_ecdsaparamsname"><code>ecdsaParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-eckeygenparams">Class: <code>EcKeyGenParams</code></a>
<ul>
<li><a href="#all_webcrypto_eckeygenparamsname"><code>ecKeyGenParams.name</code></a></li>
<li><a href="#all_webcrypto_eckeygenparamsnamedcurve"><code>ecKeyGenParams.namedCurve</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-eckeyimportparams">Class: <code>EcKeyImportParams</code></a>
<ul>
<li><a href="#all_webcrypto_eckeyimportparamsname"><code>ecKeyImportParams.name</code></a></li>
<li><a href="#all_webcrypto_eckeyimportparamsnamedcurve"><code>ecKeyImportParams.namedCurve</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-ed448params">Class: <code>Ed448Params</code></a>
<ul>
<li><a href="#all_webcrypto_ed448paramsname"><code>ed448Params.name</code></a></li>
<li><a href="#all_webcrypto_ed448paramscontext"><code>ed448Params.context</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-hkdfparams">Class: <code>HkdfParams</code></a>
<ul>
<li><a href="#all_webcrypto_hkdfparamshash"><code>hkdfParams.hash</code></a></li>
<li><a href="#all_webcrypto_hkdfparamsinfo"><code>hkdfParams.info</code></a></li>
<li><a href="#all_webcrypto_hkdfparamsname"><code>hkdfParams.name</code></a></li>
<li><a href="#all_webcrypto_hkdfparamssalt"><code>hkdfParams.salt</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-hmacimportparams">Class: <code>HmacImportParams</code></a>
<ul>
<li><a href="#all_webcrypto_hmacimportparamshash"><code>hmacImportParams.hash</code></a></li>
<li><a href="#all_webcrypto_hmacimportparamslength"><code>hmacImportParams.length</code></a></li>
<li><a href="#all_webcrypto_hmacimportparamsname"><code>hmacImportParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-hmackeygenparams">Class: <code>HmacKeyGenParams</code></a>
<ul>
<li><a href="#all_webcrypto_hmackeygenparamshash"><code>hmacKeyGenParams.hash</code></a></li>
<li><a href="#all_webcrypto_hmackeygenparamslength"><code>hmacKeyGenParams.length</code></a></li>
<li><a href="#all_webcrypto_hmackeygenparamsname"><code>hmacKeyGenParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-pbkdf2params">Class: <code>Pbkdf2Params</code></a>
<ul>
<li><a href="#all_webcrypto_pbkdb2paramshash"><code>pbkdb2Params.hash</code></a></li>
<li><a href="#all_webcrypto_pbkdf2paramsiterations"><code>pbkdf2Params.iterations</code></a></li>
<li><a href="#all_webcrypto_pbkdf2paramsname"><code>pbkdf2Params.name</code></a></li>
<li><a href="#all_webcrypto_pbkdf2paramssalt"><code>pbkdf2Params.salt</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-rsahashedimportparams">Class: <code>RsaHashedImportParams</code></a>
<ul>
<li><a href="#all_webcrypto_rsahashedimportparamshash"><code>rsaHashedImportParams.hash</code></a></li>
<li><a href="#all_webcrypto_rsahashedimportparamsname"><code>rsaHashedImportParams.name</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-rsahashedkeygenparams">Class: <code>RsaHashedKeyGenParams</code></a>
<ul>
<li><a href="#all_webcrypto_rsahashedkeygenparamshash"><code>rsaHashedKeyGenParams.hash</code></a></li>
<li><a href="#all_webcrypto_rsahashedkeygenparamsmoduluslength"><code>rsaHashedKeyGenParams.modulusLength</code></a></li>
<li><a href="#all_webcrypto_rsahashedkeygenparamsname"><code>rsaHashedKeyGenParams.name</code></a></li>
<li><a href="#all_webcrypto_rsahashedkeygenparamspublicexponent"><code>rsaHashedKeyGenParams.publicExponent</code></a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-rsaoaepparams">Class: <code>RsaOaepParams</code></a>
<ul>
<li><a href="#all_webcrypto_rsaoaepparamslabel">rsaOaepParams.label</a></li>
<li><a href="#all_webcrypto_rsaoaepparamsname">rsaOaepParams.name</a></li>
</ul>
</li>
<li><a href="#all_webcrypto_class-rsapssparams">Class: <code>RsaPssParams</code></a>
<ul>
<li><a href="#all_webcrypto_rsapssparamsname"><code>rsaPssParams.name</code></a></li>
<li><a href="#all_webcrypto_rsapssparamssaltlength"><code>rsaPssParams.saltLength</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_webstreams_web-streams-api">Web Streams API</a></span>
<ul>
<li><a href="#all_webstreams_overview">Overview</a>
<ul>
<li><a href="#all_webstreams_example-readablestream">Example <code>ReadableStream</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_api">API</a>
<ul>
<li><a href="#all_webstreams_class-readablestream">Class: <code>ReadableStream</code></a>
<ul>
<li><a href="#all_webstreams_new-readablestreamunderlyingsource--strategy"><code>new ReadableStream([underlyingSource [, strategy]])</code></a></li>
<li><a href="#all_webstreams_readablestreamlocked"><code>readableStream.locked</code></a></li>
<li><a href="#all_webstreams_readablestreamcancelreason"><code>readableStream.cancel([reason])</code></a></li>
<li><a href="#all_webstreams_readablestreamgetreaderoptions"><code>readableStream.getReader([options])</code></a></li>
<li><a href="#all_webstreams_readablestreampipethroughtransform-options"><code>readableStream.pipeThrough(transform[, options])</code></a></li>
<li><a href="#all_webstreams_readablestreampipetodestination-options"><code>readableStream.pipeTo(destination, options)</code></a></li>
<li><a href="#all_webstreams_readablestreamtee"><code>readableStream.tee()</code></a></li>
<li><a href="#all_webstreams_readablestreamvaluesoptions"><code>readableStream.values([options])</code></a></li>
<li><a href="#all_webstreams_async-iteration">Async Iteration</a></li>
<li><a href="#all_webstreams_transferring-with-postmessage">Transferring with <code>postMessage()</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-readablestreamdefaultreader">Class: <code>ReadableStreamDefaultReader</code></a>
<ul>
<li><a href="#all_webstreams_new-readablestreamdefaultreaderstream"><code>new ReadableStreamDefaultReader(stream)</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultreadercancelreason"><code>readableStreamDefaultReader.cancel([reason])</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultreaderclosed"><code>readableStreamDefaultReader.closed</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultreaderread"><code>readableStreamDefaultReader.read()</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultreaderreleaselock"><code>readableStreamDefaultReader.releaseLock()</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-readablestreambyobreader">Class: <code>ReadableStreamBYOBReader</code></a>
<ul>
<li><a href="#all_webstreams_new-readablestreambyobreaderstream"><code>new ReadableStreamBYOBReader(stream)</code></a></li>
<li><a href="#all_webstreams_readablestreambyobreadercancelreason"><code>readableStreamBYOBReader.cancel([reason])</code></a></li>
<li><a href="#all_webstreams_readablestreambyobreaderclosed"><code>readableStreamBYOBReader.closed</code></a></li>
<li><a href="#all_webstreams_readablestreambyobreaderreadview"><code>readableStreamBYOBReader.read(view)</code></a></li>
<li><a href="#all_webstreams_readablestreambyobreaderreleaselock"><code>readableStreamBYOBReader.releaseLock()</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-readablestreamdefaultcontroller">Class: <code>ReadableStreamDefaultController</code></a>
<ul>
<li><a href="#all_webstreams_readablestreamdefaultcontrollerclose"><code>readableStreamDefaultController.close()</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultcontrollerdesiredsize"><code>readableStreamDefaultController.desiredSize</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultcontrollerenqueuechunk"><code>readableStreamDefaultController.enqueue(chunk)</code></a></li>
<li><a href="#all_webstreams_readablestreamdefaultcontrollererrorerror"><code>readableStreamDefaultController.error(error)</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-readablebytestreamcontroller">Class: <code>ReadableByteStreamController</code></a>
<ul>
<li><a href="#all_webstreams_readablebytestreamcontrollerbyobrequest"><code>readableByteStreamController.byobRequest</code></a></li>
<li><a href="#all_webstreams_readablebytestreamcontrollerclose"><code>readableByteStreamController.close()</code></a></li>
<li><a href="#all_webstreams_readablebytestreamcontrollerdesiredsize"><code>readableByteStreamController.desiredSize</code></a></li>
<li><a href="#all_webstreams_readablebytestreamcontrollerenqueuechunk"><code>readableByteStreamController.enqueue(chunk)</code></a></li>
<li><a href="#all_webstreams_readablebytestreamcontrollererrorerror"><code>readableByteStreamController.error(error)</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-readablestreambyobrequest">Class: <code>ReadableStreamBYOBRequest</code></a>
<ul>
<li><a href="#all_webstreams_readablestreambyobrequestrespondbyteswritten"><code>readableStreamBYOBRequest.respond(bytesWritten)</code></a></li>
<li><a href="#all_webstreams_readablestreambyobrequestrespondwithnewviewview"><code>readableStreamBYOBRequest.respondWithNewView(view)</code></a></li>
<li><a href="#all_webstreams_readablestreambyobrequestview"><code>readableStreamBYOBRequest.view</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-writablestream">Class: <code>WritableStream</code></a>
<ul>
<li><a href="#all_webstreams_new-writablestreamunderlyingsink-strategy"><code>new WritableStream([underlyingSink[, strategy]])</code></a></li>
<li><a href="#all_webstreams_writablestreamabortreason"><code>writableStream.abort([reason])</code></a></li>
<li><a href="#all_webstreams_writablestreamclose"><code>writableStream.close()</code></a></li>
<li><a href="#all_webstreams_writablestreamgetwriter"><code>writableStream.getWriter()</code></a></li>
<li><a href="#all_webstreams_writablestreamlocked"><code>writableStream.locked</code></a></li>
<li><a href="#all_webstreams_transferring-with-postmessage_1">Transferring with postMessage()</a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-writablestreamdefaultwriter">Class: <code>WritableStreamDefaultWriter</code></a>
<ul>
<li><a href="#all_webstreams_new-writablestreamdefaultwriterstream"><code>new WritableStreamDefaultWriter(stream)</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterabortreason"><code>writableStreamDefaultWriter.abort([reason])</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterclose"><code>writableStreamDefaultWriter.close()</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterclosed"><code>writableStreamDefaultWriter.closed</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterdesiredsize"><code>writableStreamDefaultWriter.desiredSize</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterready"><code>writableStreamDefaultWriter.ready</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterreleaselock"><code>writableStreamDefaultWriter.releaseLock()</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultwriterwritechunk"><code>writableStreamDefaultWriter.write([chunk])</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-writablestreamdefaultcontroller">Class: <code>WritableStreamDefaultController</code></a>
<ul>
<li><a href="#all_webstreams_writablestreamdefaultcontrollerabortreason"><code>writableStreamDefaultController.abortReason</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultcontrollererrorerror"><code>writableStreamDefaultController.error(error)</code></a></li>
<li><a href="#all_webstreams_writablestreamdefaultcontrollersignal"><code>writableStreamDefaultController.signal</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-transformstream">Class: <code>TransformStream</code></a>
<ul>
<li><a href="#all_webstreams_new-transformstreamtransformer-writablestrategy-readablestrategy"><code>new TransformStream([transformer[, writableStrategy[, readableStrategy]]])</code></a></li>
<li><a href="#all_webstreams_transformstreamreadable"><code>transformStream.readable</code></a></li>
<li><a href="#all_webstreams_transformstreamwritable"><code>transformStream.writable</code></a></li>
<li><a href="#all_webstreams_transferring-with-postmessage_2">Transferring with postMessage()</a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-transformstreamdefaultcontroller">Class: <code>TransformStreamDefaultController</code></a>
<ul>
<li><a href="#all_webstreams_transformstreamdefaultcontrollerdesiredsize"><code>transformStreamDefaultController.desiredSize</code></a></li>
<li><a href="#all_webstreams_transformstreamdefaultcontrollerenqueuechunk"><code>transformStreamDefaultController.enqueue([chunk])</code></a></li>
<li><a href="#all_webstreams_transformstreamdefaultcontrollererrorreason"><code>transformStreamDefaultController.error([reason])</code></a></li>
<li><a href="#all_webstreams_transformstreamdefaultcontrollerterminate"><code>transformStreamDefaultController.terminate()</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-bytelengthqueuingstrategy">Class: <code>ByteLengthQueuingStrategy</code></a>
<ul>
<li><a href="#all_webstreams_new-bytelengthqueuingstrategyoptions"><code>new ByteLengthQueuingStrategy(options)</code></a></li>
<li><a href="#all_webstreams_bytelengthqueuingstrategyhighwatermark"><code>byteLengthQueuingStrategy.highWaterMark</code></a></li>
<li><a href="#all_webstreams_bytelengthqueuingstrategysize"><code>byteLengthQueuingStrategy.size</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-countqueuingstrategy">Class: <code>CountQueuingStrategy</code></a>
<ul>
<li><a href="#all_webstreams_new-countqueuingstrategyoptions"><code>new CountQueuingStrategy(options)</code></a></li>
<li><a href="#all_webstreams_countqueuingstrategyhighwatermark"><code>countQueuingStrategy.highWaterMark</code></a></li>
<li><a href="#all_webstreams_countqueuingstrategysize"><code>countQueuingStrategy.size</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-textencoderstream">Class: <code>TextEncoderStream</code></a>
<ul>
<li><a href="#all_webstreams_new-textencoderstream"><code>new TextEncoderStream()</code></a></li>
<li><a href="#all_webstreams_textencoderstreamencoding"><code>textEncoderStream.encoding</code></a></li>
<li><a href="#all_webstreams_textencoderstreamreadable"><code>textEncoderStream.readable</code></a></li>
<li><a href="#all_webstreams_textencoderstreamwritable"><code>textEncoderStream.writable</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-textdecoderstream">Class: <code>TextDecoderStream</code></a>
<ul>
<li><a href="#all_webstreams_new-textdecoderstreamencoding-options"><code>new TextDecoderStream([encoding[, options]])</code></a></li>
<li><a href="#all_webstreams_textdecoderstreamencoding"><code>textDecoderStream.encoding</code></a></li>
<li><a href="#all_webstreams_textdecoderstreamfatal"><code>textDecoderStream.fatal</code></a></li>
<li><a href="#all_webstreams_textdecoderstreamignorebom"><code>textDecoderStream.ignoreBOM</code></a></li>
<li><a href="#all_webstreams_textdecoderstreamreadable"><code>textDecoderStream.readable</code></a></li>
<li><a href="#all_webstreams_textdecoderstreamwritable"><code>textDecoderStream.writable</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-compressionstream">Class: <code>CompressionStream</code></a>
<ul>
<li><a href="#all_webstreams_new-compressionstreamformat"><code>new CompressionStream(format)</code></a></li>
<li><a href="#all_webstreams_compressionstreamreadable"><code>compressionStream.readable</code></a></li>
<li><a href="#all_webstreams_compressionstreamwritable"><code>compressionStream.writable</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_class-decompressionstream">Class: <code>DecompressionStream</code></a>
<ul>
<li><a href="#all_webstreams_new-decompressionstreamformat"><code>new DecompressionStream(format)</code></a></li>
<li><a href="#all_webstreams_decompressionstreamreadable"><code>decompressionStream.readable</code></a></li>
<li><a href="#all_webstreams_decompressionstreamwritable"><code>decompressionStream.writable</code></a></li>
</ul>
</li>
<li><a href="#all_webstreams_utility-consumers">Utility Consumers</a>
<ul>
<li><a href="#all_webstreams_streamconsumersarraybufferstream"><code>streamConsumers.arrayBuffer(stream)</code></a></li>
<li><a href="#all_webstreams_streamconsumersblobstream"><code>streamConsumers.blob(stream)</code></a></li>
<li><a href="#all_webstreams_streamconsumersbufferstream"><code>streamConsumers.buffer(stream)</code></a></li>
<li><a href="#all_webstreams_streamconsumersjsonstream"><code>streamConsumers.json(stream)</code></a></li>
<li><a href="#all_webstreams_streamconsumerstextstream"><code>streamConsumers.text(stream)</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_worker_threads_worker-threads">Worker threads</a></span>
<ul>
<li><a href="#all_worker_threads_workergetenvironmentdatakey"><code>worker.getEnvironmentData(key)</code></a></li>
<li><a href="#all_worker_threads_workerismainthread"><code>worker.isMainThread</code></a></li>
<li><a href="#all_worker_threads_workermarkasuntransferableobject"><code>worker.markAsUntransferable(object)</code></a></li>
<li><a href="#all_worker_threads_workermovemessageporttocontextport-contextifiedsandbox"><code>worker.moveMessagePortToContext(port, contextifiedSandbox)</code></a></li>
<li><a href="#all_worker_threads_workerparentport"><code>worker.parentPort</code></a></li>
<li><a href="#all_worker_threads_workerreceivemessageonportport"><code>worker.receiveMessageOnPort(port)</code></a></li>
<li><a href="#all_worker_threads_workerresourcelimits"><code>worker.resourceLimits</code></a></li>
<li><a href="#all_worker_threads_workershare_env"><code>worker.SHARE_ENV</code></a></li>
<li><a href="#all_worker_threads_workersetenvironmentdatakey-value"><code>worker.setEnvironmentData(key[, value])</code></a></li>
<li><a href="#all_worker_threads_workerthreadid"><code>worker.threadId</code></a></li>
<li><a href="#all_worker_threads_workerworkerdata"><code>worker.workerData</code></a></li>
<li><a href="#all_worker_threads_class-broadcastchannel-extends-eventtarget">Class: <code>BroadcastChannel extends EventTarget</code></a>
<ul>
<li><a href="#all_worker_threads_new-broadcastchannelname"><code>new BroadcastChannel(name)</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelclose"><code>broadcastChannel.close()</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelonmessage"><code>broadcastChannel.onmessage</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelonmessageerror"><code>broadcastChannel.onmessageerror</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelpostmessagemessage"><code>broadcastChannel.postMessage(message)</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelref"><code>broadcastChannel.ref()</code></a></li>
<li><a href="#all_worker_threads_broadcastchannelunref"><code>broadcastChannel.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_worker_threads_class-messagechannel">Class: <code>MessageChannel</code></a></li>
<li><a href="#all_worker_threads_class-messageport">Class: <code>MessagePort</code></a>
<ul>
<li><a href="#all_worker_threads_event-close">Event: <code>'close'</code></a></li>
<li><a href="#all_worker_threads_event-message">Event: <code>'message'</code></a></li>
<li><a href="#all_worker_threads_event-messageerror">Event: <code>'messageerror'</code></a></li>
<li><a href="#all_worker_threads_portclose"><code>port.close()</code></a></li>
<li><a href="#all_worker_threads_portpostmessagevalue-transferlist"><code>port.postMessage(value[, transferList])</code></a>
<ul>
<li><a href="#all_worker_threads_considerations-when-transferring-typedarrays-and-buffers">Considerations when transferring TypedArrays and Buffers</a></li>
<li><a href="#all_worker_threads_considerations-when-cloning-objects-with-prototypes-classes-and-accessors">Considerations when cloning objects with prototypes, classes, and accessors</a></li>
</ul>
</li>
<li><span class="stability_1"><a href="#all_worker_threads_porthasref"><code>port.hasRef()</code></a></span></li>
<li><a href="#all_worker_threads_portref"><code>port.ref()</code></a></li>
<li><a href="#all_worker_threads_portstart"><code>port.start()</code></a></li>
<li><a href="#all_worker_threads_portunref"><code>port.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_worker_threads_class-worker">Class: <code>Worker</code></a>
<ul>
<li><a href="#all_worker_threads_new-workerfilename-options"><code>new Worker(filename[, options])</code></a></li>
<li><a href="#all_worker_threads_event-error">Event: <code>'error'</code></a></li>
<li><a href="#all_worker_threads_event-exit">Event: <code>'exit'</code></a></li>
<li><a href="#all_worker_threads_event-message_1">Event: <code>'message'</code></a></li>
<li><a href="#all_worker_threads_event-messageerror_1">Event: <code>'messageerror'</code></a></li>
<li><a href="#all_worker_threads_event-online">Event: <code>'online'</code></a></li>
<li><a href="#all_worker_threads_workergetheapsnapshot"><code>worker.getHeapSnapshot()</code></a></li>
<li><a href="#all_worker_threads_workerperformance"><code>worker.performance</code></a>
<ul>
<li><a href="#all_worker_threads_performanceeventlooputilizationutilization1-utilization2"><code>performance.eventLoopUtilization([utilization1[, utilization2]])</code></a></li>
</ul>
</li>
<li><a href="#all_worker_threads_workerpostmessagevalue-transferlist"><code>worker.postMessage(value[, transferList])</code></a></li>
<li><a href="#all_worker_threads_workerref"><code>worker.ref()</code></a></li>
<li><a href="#all_worker_threads_workerresourcelimits_1"><code>worker.resourceLimits</code></a></li>
<li><a href="#all_worker_threads_workerstderr"><code>worker.stderr</code></a></li>
<li><a href="#all_worker_threads_workerstdin"><code>worker.stdin</code></a></li>
<li><a href="#all_worker_threads_workerstdout"><code>worker.stdout</code></a></li>
<li><a href="#all_worker_threads_workerterminate"><code>worker.terminate()</code></a></li>
<li><a href="#all_worker_threads_workerthreadid_1"><code>worker.threadId</code></a></li>
<li><a href="#all_worker_threads_workerunref"><code>worker.unref()</code></a></li>
</ul>
</li>
<li><a href="#all_worker_threads_notes">Notes</a>
<ul>
<li><a href="#all_worker_threads_synchronous-blocking-of-stdio">Synchronous blocking of stdio</a></li>
<li><a href="#all_worker_threads_launching-worker-threads-from-preload-scripts">Launching worker threads from preload scripts</a></li>
</ul>
</li>
</ul>
</li>
<li><span class="stability_2"><a href="#all_zlib_zlib">Zlib</a></span>
<ul>
<li><a href="#all_zlib_threadpool-usage-and-performance-considerations">Threadpool usage and performance considerations</a></li>
<li><a href="#all_zlib_compressing-http-requests-and-responses">Compressing HTTP requests and responses</a></li>
<li><a href="#all_zlib_memory-usage-tuning">Memory usage tuning</a>
<ul>
<li><a href="#all_zlib_for-zlib-based-streams">For zlib-based streams</a></li>
<li><a href="#all_zlib_for-brotli-based-streams">For Brotli-based streams</a></li>
</ul>
</li>
<li><a href="#all_zlib_flushing">Flushing</a></li>
<li><a href="#all_zlib_constants">Constants</a>
<ul>
<li><a href="#all_zlib_zlib-constants">zlib constants</a></li>
<li><a href="#all_zlib_brotli-constants">Brotli constants</a>
<ul>
<li><a href="#all_zlib_flush-operations">Flush operations</a></li>
<li><a href="#all_zlib_compressor-options">Compressor options</a></li>
<li><a href="#all_zlib_decompressor-options">Decompressor options</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#all_zlib_class-options">Class: <code>Options</code></a></li>
<li><a href="#all_zlib_class-brotlioptions">Class: <code>BrotliOptions</code></a></li>
<li><a href="#all_zlib_class-zlibbrotlicompress">Class: <code>zlib.BrotliCompress</code></a></li>
<li><a href="#all_zlib_class-zlibbrotlidecompress">Class: <code>zlib.BrotliDecompress</code></a></li>
<li><a href="#all_zlib_class-zlibdeflate">Class: <code>zlib.Deflate</code></a></li>
<li><a href="#all_zlib_class-zlibdeflateraw">Class: <code>zlib.DeflateRaw</code></a></li>
<li><a href="#all_zlib_class-zlibgunzip">Class: <code>zlib.Gunzip</code></a></li>
<li><a href="#all_zlib_class-zlibgzip">Class: <code>zlib.Gzip</code></a></li>
<li><a href="#all_zlib_class-zlibinflate">Class: <code>zlib.Inflate</code></a></li>
<li><a href="#all_zlib_class-zlibinflateraw">Class: <code>zlib.InflateRaw</code></a></li>
<li><a href="#all_zlib_class-zlibunzip">Class: <code>zlib.Unzip</code></a></li>
<li><a href="#all_zlib_class-zlibzlibbase">Class: <code>zlib.ZlibBase</code></a>
<ul>
<li><span class="stability_0"><a href="#all_zlib_zlibbytesread"><code>zlib.bytesRead</code></a></span></li>
<li><a href="#all_zlib_zlibbyteswritten"><code>zlib.bytesWritten</code></a></li>
<li><a href="#all_zlib_zlibclosecallback"><code>zlib.close([callback])</code></a></li>
<li><a href="#all_zlib_zlibflushkind-callback"><code>zlib.flush([kind, ]callback)</code></a></li>
<li><a href="#all_zlib_zlibparamslevel-strategy-callback"><code>zlib.params(level, strategy, callback)</code></a></li>
<li><a href="#all_zlib_zlibreset"><code>zlib.reset()</code></a></li>
</ul>
</li>
<li><a href="#all_zlib_zlibconstants"><code>zlib.constants</code></a></li>
<li><a href="#all_zlib_zlibcreatebrotlicompressoptions"><code>zlib.createBrotliCompress([options])</code></a></li>
<li><a href="#all_zlib_zlibcreatebrotlidecompressoptions"><code>zlib.createBrotliDecompress([options])</code></a></li>
<li><a href="#all_zlib_zlibcreatedeflateoptions"><code>zlib.createDeflate([options])</code></a></li>
<li><a href="#all_zlib_zlibcreatedeflaterawoptions"><code>zlib.createDeflateRaw([options])</code></a></li>
<li><a href="#all_zlib_zlibcreategunzipoptions"><code>zlib.createGunzip([options])</code></a></li>
<li><a href="#all_zlib_zlibcreategzipoptions"><code>zlib.createGzip([options])</code></a></li>
<li><a href="#all_zlib_zlibcreateinflateoptions"><code>zlib.createInflate([options])</code></a></li>
<li><a href="#all_zlib_zlibcreateinflaterawoptions"><code>zlib.createInflateRaw([options])</code></a></li>
<li><a href="#all_zlib_zlibcreateunzipoptions"><code>zlib.createUnzip([options])</code></a></li>
<li><a href="#all_zlib_convenience-methods">Convenience methods</a>
<ul>
<li><a href="#all_zlib_zlibbrotlicompressbuffer-options-callback"><code>zlib.brotliCompress(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibbrotlicompresssyncbuffer-options"><code>zlib.brotliCompressSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibbrotlidecompressbuffer-options-callback"><code>zlib.brotliDecompress(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibbrotlidecompresssyncbuffer-options"><code>zlib.brotliDecompressSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibdeflatebuffer-options-callback"><code>zlib.deflate(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibdeflatesyncbuffer-options"><code>zlib.deflateSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibdeflaterawbuffer-options-callback"><code>zlib.deflateRaw(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibdeflaterawsyncbuffer-options"><code>zlib.deflateRawSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibgunzipbuffer-options-callback"><code>zlib.gunzip(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibgunzipsyncbuffer-options"><code>zlib.gunzipSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibgzipbuffer-options-callback"><code>zlib.gzip(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibgzipsyncbuffer-options"><code>zlib.gzipSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibinflatebuffer-options-callback"><code>zlib.inflate(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibinflatesyncbuffer-options"><code>zlib.inflateSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibinflaterawbuffer-options-callback"><code>zlib.inflateRaw(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibinflaterawsyncbuffer-options"><code>zlib.inflateRawSync(buffer[, options])</code></a></li>
<li><a href="#all_zlib_zlibunzipbuffer-options-callback"><code>zlib.unzip(buffer[, options], callback)</code></a></li>
<li><a href="#all_zlib_zlibunzipsyncbuffer-options"><code>zlib.unzipSync(buffer[, options])</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</details>


      <div id="apicontent">
        <section><h2>About this documentation<span><a class="mark" href="#all_documentation_about-this-documentation" id="all_documentation_about-this-documentation">#</a></span><a aria-hidden="true" class="legacy" id="documentation_about_this_documentation"></a></h2>


<p>Welcome to the official API reference documentation for Node.js!</p>
<p>Node.js is a JavaScript runtime built on the <a href="https://v8.dev/">V8 JavaScript engine</a>.</p>
<section><h3>Contributing<span><a class="mark" href="#all_documentation_contributing" id="all_documentation_contributing">#</a></span><a aria-hidden="true" class="legacy" id="documentation_contributing"></a></h3>
<p>Report errors in this documentation in <a href="https://github.com/nodejs/node/issues/new">the issue tracker</a>. See
<a href="https://github.com/nodejs/node/blob/HEAD/CONTRIBUTING.md">the contributing guide</a> for directions on how to submit pull requests.</p>
</section><section><h3>Stability index<span><a class="mark" href="#all_documentation_stability-index" id="all_documentation_stability-index">#</a></span><a aria-hidden="true" class="legacy" id="documentation_stability_index"></a></h3>

<p>Throughout the documentation are indications of a section's stability. Some APIs
are so proven and so relied upon that they are unlikely to ever change at all.
Others are brand new and experimental, or known to be hazardous.</p>
<p>The stability indices are as follows:</p>
<p></p><div class="api_stability api_stability_0">Stability: 0 - Deprecated. The feature may emit warnings. Backward
compatibility is not guaranteed.</div><p></p>
<!-- separator -->
<p></p><div class="api_stability api_stability_1">Stability: 1 - Experimental. The feature is not subject to
<a href="https://semver.org/">semantic versioning</a> rules. Non-backward compatible changes or removal may
occur in any future release. Use of the feature is not recommended in
production environments.</div><p></p>
<!-- separator -->
<p></p><div class="api_stability api_stability_2">Stability: 2 - Stable. Compatibility with the npm ecosystem is a high
priority.</div><p></p>
<!-- separator -->
<p></p><div class="api_stability api_stability_3">Stability: 3 - Legacy. Although this feature is unlikely to be removed and is
still covered by semantic versioning guarantees, it is no longer actively
maintained, and other alternatives are available.</div><p></p>
<p>Features are marked as legacy rather than being deprecated if their use does no
harm, and they are widely relied upon within the npm ecosystem. Bugs found in
legacy features are unlikely to be fixed.</p>
<p>Use caution when making use of Experimental features, particularly within
modules. Users may not be aware that experimental features are being used.
Bugs or behavior changes may surprise users when Experimental API
modifications occur. To avoid surprises, use of an Experimental feature may need
a command-line flag. Experimental features may also emit a <a href="#all_process_event-warning">warning</a>.</p>
</section><section><h3>Stability overview<span><a class="mark" href="#all_documentation_stability-overview" id="all_documentation_stability-overview">#</a></span><a aria-hidden="true" class="legacy" id="documentation_stability_overview"></a></h3>
<!-- STABILITY_OVERVIEW_SLOT_BEGIN -->
<!-- STABILITY_OVERVIEW_SLOT_END -->
</section><section><h3>JSON output<span><a class="mark" href="#all_documentation_json-output" id="all_documentation_json-output">#</a></span><a aria-hidden="true" class="legacy" id="documentation_json_output"></a></h3>
<div class="api_metadata">
<span>Added in: v0.6.12</span>
</div>
<p>Every <code>.html</code> document has a corresponding <code>.json</code> document. This is for IDEs
and other utilities that consume the documentation.</p>
</section><section><h3>System calls and man pages<span><a class="mark" href="#all_documentation_system-calls-and-man-pages" id="all_documentation_system-calls-and-man-pages">#</a></span><a aria-hidden="true" class="legacy" id="documentation_system_calls_and_man_pages"></a></h3>
<p>Node.js functions which wrap a system call will document that. The docs link
to the corresponding man pages which describe how the system call works.</p>
<p>Most Unix system calls have Windows analogues. Still, behavior differences may
be unavoidable.</p></section>
        </section>
<section><h2>Usage and example<span><a class="mark" href="#all_synopsis_usage-and-example" id="all_synopsis_usage-and-example">#</a></span><a aria-hidden="true" class="legacy" id="synopsis_usage_and_example"></a></h2>
<section><h3>Usage<span><a class="mark" href="#all_synopsis_usage" id="all_synopsis_usage">#</a></span><a aria-hidden="true" class="legacy" id="synopsis_usage"></a></h3>


<p><code>node [options] [V8 options] [script.js | -e "script" | - ] [arguments]</code></p>
<p>Please see the <a href="#all_cli_options">Command-line options</a> document for more information.</p>
</section><section><h3>Example<span><a class="mark" href="#all_synopsis_example" id="all_synopsis_example">#</a></span><a aria-hidden="true" class="legacy" id="synopsis_example"></a></h3>
<p>An example of a <a href="http.html">web server</a> written with Node.js which responds with
<code>'Hello, World!'</code>:</p>
<p>Commands in this document start with <code>$</code> or <code>></code> to replicate how they would
appear in a user's terminal. Do not include the <code>$</code> and <code>></code> characters. They are
there to show the start of each command.</p>
<p>Lines that don't start with <code>$</code> or <code>></code> character show the output of the previous
command.</p>
<p>First, make sure to have downloaded and installed Node.js. See
<a href="https://nodejs.org/en/download/package-manager/">Installing Node.js via package manager</a> for further install information.</p>
<p>Now, create an empty project folder called <code>projects</code>, then navigate into it.</p>
<p>Linux and Mac:</p>
<pre><code class="language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> ~/projects</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> ~/projects</span></code></pre>
<p>Windows CMD:</p>
<pre><code class="language-console"><span class="hljs-meta prompt_">> </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> %USERPROFILE%\projects</span>
<span class="hljs-meta prompt_">> </span><span class="language-bash"><span class="hljs-built_in">cd</span> %USERPROFILE%\projects</span></code></pre>
<p>Windows PowerShell:</p>
<pre><code class="language-console"><span class="hljs-meta prompt_">> </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$env</span>:USERPROFILE\projects</span>
<span class="hljs-meta prompt_">> </span><span class="language-bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$env</span>:USERPROFILE\projects</span></code></pre>
<p>Next, create a new source file in the <code>projects</code>
folder and call it <code>hello-world.js</code>.</p>
<p>Open <code>hello-world.js</code> in any preferred text editor and
paste in the following content:</p>
<pre><code class="language-js"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:http'</span>);

<span class="hljs-keyword">const</span> hostname = <span class="hljs-string">'127.0.0.1'</span>;
<span class="hljs-keyword">const</span> port = <span class="hljs-number">3000</span>;

<span class="hljs-keyword">const</span> server = http.<span class="hljs-title function_">createServer</span>(<span class="hljs-function">(<span class="hljs-params">req, res</span>) =></span> {
  res.<span class="hljs-property">statusCode</span> = <span class="hljs-number">200</span>;
  res.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">'Content-Type'</span>, <span class="hljs-string">'text/plain'</span>);
  res.<span class="hljs-title function_">end</span>(<span class="hljs-string">'Hello, World!\n'</span>);
});

server.<span class="hljs-title function_">listen</span>(port, hostname, <span class="hljs-function">() =></span> {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://<span class="hljs-subst">${hostname}</span>:<span class="hljs-subst">${port}</span>/`</span>);
});</code></pre>
<p>Save the file, go back to the terminal window, and enter the following command:</p>
<pre><code class="language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">node hello-world.js</span></code></pre>
<p>Output like this should appear in the terminal:</p>
<pre><code class="language-console">Server running at http://127.0.0.1:3000/</code></pre>
<p>Now, open any preferred web browser and visit <code>http://127.0.0.1:3000</code>.</p>
<p>If the browser displays the string <code>Hello, World!</code>, that indicates
the server is working.</p></section>
        </section>
<section><h2>Assert<span><a class="mark" href="#all_assert_assert" id="all_assert_assert">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert"></a></h2>

<p></p><div class="api_stability api_stability_2"><a href="#all_documentation_stability-index">Stability: 2</a> - Stable</div><p></p>
<p><strong>Source Code:</strong> <a href="https://github.com/nodejs/node/blob/v18.9.1/lib/assert.js">lib/assert.js</a></p>
<p>The <code>node:assert</code> module provides a set of assertion functions for verifying
invariants.</p>
<section><h3>Strict assertion mode<span><a class="mark" href="#all_assert_strict-assertion-mode" id="all_assert_strict-assertion-mode">#</a></span><a aria-hidden="true" class="legacy" id="assert_strict_assertion_mode"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v15.0.0</td>
<td><p>Exposed as <code>require('node:assert/strict')</code>.</p></td></tr>
<tr><td>v13.9.0, v12.16.2</td>
<td><p>Changed "strict mode" to "strict assertion mode" and "legacy mode" to "legacy assertion mode" to avoid confusion with the more usual meaning of "strict mode".</p></td></tr>
<tr><td>v9.9.0</td>
<td><p>Added error diffs to the strict assertion mode.</p></td></tr>
<tr><td>v9.9.0</td>
<td><p>Added strict assertion mode to the assert module.</p></td></tr>
<tr><td>v9.9.0</td>
<td><p><span>Added in: v9.9.0</span></p></td></tr>
</tbody></table>
</details>
</div>
<p>In strict assertion mode, non-strict methods behave like their corresponding
strict methods. For example, <a href="#all_assert_assertdeepequalactual-expected-message"><code>assert.deepEqual()</code></a> will behave like
<a href="#all_assert_assertdeepstrictequalactual-expected-message"><code>assert.deepStrictEqual()</code></a>.</p>
<p>In strict assertion mode, error messages for objects display a diff. In legacy
assertion mode, error messages for objects display the objects, often truncated.</p>
<p>To use strict assertion mode:</p>

<pre class="with-47-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> { strict <span class="hljs-keyword">as</span> assert } <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>).<span class="hljs-property">strict</span>;</code></pre>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);</code></pre>
<p>Example error diff:</p>

<pre class="with-47-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> { strict <span class="hljs-keyword">as</span> assert } <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

assert.<span class="hljs-title function_">deepEqual</span>([[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]], <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], [[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'3'</span>]], <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected ... Lines skipped</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   [</span>
<span class="hljs-comment">//     [</span>
<span class="hljs-comment">// ...</span>
<span class="hljs-comment">//       2,</span>
<span class="hljs-comment">// +     3</span>
<span class="hljs-comment">// -     '3'</span>
<span class="hljs-comment">//     ],</span>
<span class="hljs-comment">// ...</span>
<span class="hljs-comment">//     5</span>
<span class="hljs-comment">//   ]</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">deepEqual</span>([[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]], <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], [[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'3'</span>]], <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected ... Lines skipped</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   [</span>
<span class="hljs-comment">//     [</span>
<span class="hljs-comment">// ...</span>
<span class="hljs-comment">//       2,</span>
<span class="hljs-comment">// +     3</span>
<span class="hljs-comment">// -     '3'</span>
<span class="hljs-comment">//     ],</span>
<span class="hljs-comment">// ...</span>
<span class="hljs-comment">//     5</span>
<span class="hljs-comment">//   ]</span></code></pre>
<p>To deactivate the colors, use the <code>NO_COLOR</code> or <code>NODE_DISABLE_COLORS</code>
environment variables. This will also deactivate the colors in the REPL. For
more on color support in terminal environments, read the tty
<a href="#all_tty_writestreamgetcolordepthenv"><code>getColorDepth()</code></a> documentation.</p>
</section><section><h3>Legacy assertion mode<span><a class="mark" href="#all_assert_legacy-assertion-mode" id="all_assert_legacy-assertion-mode">#</a></span><a aria-hidden="true" class="legacy" id="assert_legacy_assertion_mode"></a></h3>
<p>Legacy assertion mode uses the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality"><code>==</code> operator</a> in:</p>
<ul>
<li><a href="#all_assert_assertdeepequalactual-expected-message"><code>assert.deepEqual()</code></a></li>
<li><a href="#all_assert_assertequalactual-expected-message"><code>assert.equal()</code></a></li>
<li><a href="#all_assert_assertnotdeepequalactual-expected-message"><code>assert.notDeepEqual()</code></a></li>
<li><a href="#all_assert_assertnotequalactual-expected-message"><code>assert.notEqual()</code></a></li>
</ul>
<p>To use legacy assertion mode:</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);</code></pre>
<p>Legacy assertion mode may have surprising results, especially when using
<a href="#all_assert_assertdeepequalactual-expected-message"><code>assert.deepEqual()</code></a>:</p>
<pre><code class="language-js cjs"><span class="hljs-comment">// WARNING: This does not throw an AssertionError in legacy assertion mode!</span>
assert.<span class="hljs-title function_">deepEqual</span>(<span class="hljs-regexp">/a/gi</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());</code></pre>
</section><section><h3>Class: assert.AssertionError<a class="srclink" href="https://github.com/nodejs/node/blob/df3ed1e89299e4c8f006fc20e22265a889c97919/lib/assert.js#L177">[src]</a><span><a class="mark" href="#all_assert_class-assertassertionerror" id="all_assert_class-assertassertionerror">#</a></span><a aria-hidden="true" class="legacy" id="assert_class_assert_assertionerror"></a></h3>
<ul>
<li>Extends: <a href="#all_errors_class-error" class="type">&#x3C;errors.Error></a></li>
</ul>
<p>Indicates the failure of an assertion. All errors thrown by the <code>node:assert</code>
module will be instances of the <code>AssertionError</code> class.</p>
<h4><code>new assert.AssertionError(options)</code><span><a class="mark" href="#all_assert_new-assertassertionerroroptions" id="all_assert_new-assertassertionerroroptions">#</a></span><a aria-hidden="true" class="legacy" id="assert_new_assert_assertionerror_options"></a></h4>
<div class="api_metadata">
<span>Added in: v0.1.21</span>
</div>
<ul>
<li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" class="type">&#x3C;Object></a>
<ul>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> If provided, the error message is set to this value.</li>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a> The <code>actual</code> property on the error instance.</li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a> The <code>expected</code> property on the error instance.</li>
<li><code>operator</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> The <code>operator</code> property on the error instance.</li>
<li><code>stackStartFn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> If provided, the generated stack trace omits
frames before this function.</li>
</ul>
</li>
</ul>
<p>A subclass of <code>Error</code> that indicates the failure of an assertion.</p>
<p>All instances contain the built-in <code>Error</code> properties (<code>message</code> and <code>name</code>)
and:</p>
<ul>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a> Set to the <code>actual</code> argument for methods such as
<a href="#all_assert_assertstrictequalactual-expected-message"><code>assert.strictEqual()</code></a>.</li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a> Set to the <code>expected</code> value for methods such as
<a href="#all_assert_assertstrictequalactual-expected-message"><code>assert.strictEqual()</code></a>.</li>
<li><code>generatedMessage</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" class="type">&#x3C;boolean></a> Indicates if the message was auto-generated
(<code>true</code>) or not.</li>
<li><code>code</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> Value is always <code>ERR_ASSERTION</code> to show that the error is an
assertion error.</li>
<li><code>operator</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> Set to the passed in operator value.</li>
</ul>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-comment">// Generate an AssertionError to compare the error message later:</span>
<span class="hljs-keyword">const</span> { message } = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">AssertionError</span>({
  <span class="hljs-attr">actual</span>: <span class="hljs-number">1</span>,
  <span class="hljs-attr">expected</span>: <span class="hljs-number">2</span>,
  <span class="hljs-attr">operator</span>: <span class="hljs-string">'strictEqual'</span>
});

<span class="hljs-comment">// Verify error output:</span>
<span class="hljs-keyword">try</span> {
  assert.<span class="hljs-title function_">strictEqual</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);
} <span class="hljs-keyword">catch</span> (err) {
  <span class="hljs-title function_">assert</span>(err <span class="hljs-keyword">instanceof</span> assert.<span class="hljs-property">AssertionError</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">message</span>, message);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">name</span>, <span class="hljs-string">'AssertionError'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">actual</span>, <span class="hljs-number">1</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">expected</span>, <span class="hljs-number">2</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">code</span>, <span class="hljs-string">'ERR_ASSERTION'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">operator</span>, <span class="hljs-string">'strictEqual'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">generatedMessage</span>, <span class="hljs-literal">true</span>);
}</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-comment">// Generate an AssertionError to compare the error message later:</span>
<span class="hljs-keyword">const</span> { message } = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">AssertionError</span>({
  <span class="hljs-attr">actual</span>: <span class="hljs-number">1</span>,
  <span class="hljs-attr">expected</span>: <span class="hljs-number">2</span>,
  <span class="hljs-attr">operator</span>: <span class="hljs-string">'strictEqual'</span>
});

<span class="hljs-comment">// Verify error output:</span>
<span class="hljs-keyword">try</span> {
  assert.<span class="hljs-title function_">strictEqual</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);
} <span class="hljs-keyword">catch</span> (err) {
  <span class="hljs-title function_">assert</span>(err <span class="hljs-keyword">instanceof</span> assert.<span class="hljs-property">AssertionError</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">message</span>, message);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">name</span>, <span class="hljs-string">'AssertionError'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">actual</span>, <span class="hljs-number">1</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">expected</span>, <span class="hljs-number">2</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">code</span>, <span class="hljs-string">'ERR_ASSERTION'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">operator</span>, <span class="hljs-string">'strictEqual'</span>);
  assert.<span class="hljs-title function_">strictEqual</span>(err.<span class="hljs-property">generatedMessage</span>, <span class="hljs-literal">true</span>);
}</code></pre>
</section><section><h3>Class: <code>assert.CallTracker</code><span><a class="mark" href="#all_assert_class-assertcalltracker" id="all_assert_class-assertcalltracker">#</a></span><a aria-hidden="true" class="legacy" id="assert_class_assert_calltracker"></a></h3>
<div class="api_metadata">
<span>Added in: v14.2.0, v12.19.0</span>
</div>
<p></p><div class="api_stability api_stability_1"><a href="#all_documentation_stability-index">Stability: 1</a> - Experimental</div><p></p>
<p>This feature is currently experimental and behavior might still change.</p>
<h4><code>new assert.CallTracker()</code><span><a class="mark" href="#all_assert_new-assertcalltracker" id="all_assert_new-assertcalltracker">#</a></span><a aria-hidden="true" class="legacy" id="assert_new_assert_calltracker"></a></h4>
<div class="api_metadata">
<span>Added in: v14.2.0, v12.19.0</span>
</div>
<p>Creates a new <a href="#all_assert_class-assertcalltracker"><code>CallTracker</code></a> object which can be used to track if functions
were called a specific number of times. The <code>tracker.verify()</code> must be called
for the verification to take place. The usual pattern would be to call it in a
<a href="#all_process_event-exit"><code>process.on('exit')</code></a> handler.</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;
<span class="hljs-keyword">import</span> process <span class="hljs-keyword">from</span> <span class="hljs-string">'node:process'</span>;

<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// callsfunc() must be called exactly 1 time before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">1</span>);

<span class="hljs-title function_">callsfunc</span>();

<span class="hljs-comment">// Calls tracker.verify() and verifies if all tracker.calls() functions have</span>
<span class="hljs-comment">// been called exact times.</span>
process.<span class="hljs-title function_">on</span>(<span class="hljs-string">'exit'</span>, <span class="hljs-function">() =></span> {
  tracker.<span class="hljs-title function_">verify</span>();
});</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// callsfunc() must be called exactly 1 time before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">1</span>);

<span class="hljs-title function_">callsfunc</span>();

<span class="hljs-comment">// Calls tracker.verify() and verifies if all tracker.calls() functions have</span>
<span class="hljs-comment">// been called exact times.</span>
process.<span class="hljs-title function_">on</span>(<span class="hljs-string">'exit'</span>, <span class="hljs-function">() =></span> {
  tracker.<span class="hljs-title function_">verify</span>();
});</code></pre>
<h4><code>tracker.calls([fn][, exact])</code><span><a class="mark" href="#all_assert_trackercallsfn-exact" id="all_assert_trackercallsfn-exact">#</a></span><a aria-hidden="true" class="legacy" id="assert_tracker_calls_fn_exact"></a></h4>
<div class="api_metadata">
<span>Added in: v14.2.0, v12.19.0</span>
</div>
<ul>
<li><code>fn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> <strong>Default:</strong> A no-op function.</li>
<li><code>exact</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" class="type">&#x3C;number></a> <strong>Default:</strong> <code>1</code>.</li>
<li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> that wraps <code>fn</code>.</li>
</ul>
<p>The wrapper function is expected to be called exactly <code>exact</code> times. If the
function has not been called exactly <code>exact</code> times when
<a href="#all_assert_trackerverify"><code>tracker.verify()</code></a> is called, then <a href="#all_assert_trackerverify"><code>tracker.verify()</code></a> will throw an
error.</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);</code></pre>
<h4><code>tracker.getCalls(fn)</code><span><a class="mark" href="#all_assert_trackergetcallsfn" id="all_assert_trackergetcallsfn">#</a></span><a aria-hidden="true" class="legacy" id="assert_tracker_getcalls_fn"></a></h4>
<div class="api_metadata">
<span>Added in: v18.8.0</span>
</div>
<ul>
<li>
<p><code>fn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a>.</p>
</li>
<li>
<p>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" class="type">&#x3C;Array></a> with all the calls to a tracked function.</p>
</li>
<li>
<p>Object <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" class="type">&#x3C;Object></a></p>
<ul>
<li><code>thisArg</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" class="type">&#x3C;Object></a></li>
<li><code>arguments</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" class="type">&#x3C;Array></a> the arguments passed to the tracked function</li>
</ul>
</li>
</ul>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);
<span class="hljs-title function_">callsfunc</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);

assert.<span class="hljs-title function_">deepStrictEqual</span>(tracker.<span class="hljs-title function_">getCalls</span>(callsfunc),
                       [{ <span class="hljs-attr">thisArg</span>: <span class="hljs-variable language_">this</span>, <span class="hljs-attr">arguments</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ] }]);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);
<span class="hljs-title function_">callsfunc</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);

assert.<span class="hljs-title function_">deepStrictEqual</span>(tracker.<span class="hljs-title function_">getCalls</span>(callsfunc),
                       [{ <span class="hljs-attr">thisArg</span>: <span class="hljs-variable language_">this</span>, <span class="hljs-attr">arguments</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ] }]);</code></pre>
<h4><code>tracker.report()</code><span><a class="mark" href="#all_assert_trackerreport" id="all_assert_trackerreport">#</a></span><a aria-hidden="true" class="legacy" id="assert_tracker_report"></a></h4>
<div class="api_metadata">
<span>Added in: v14.2.0, v12.19.0</span>
</div>
<ul>
<li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" class="type">&#x3C;Array></a> of objects containing information about the wrapper functions
returned by <a href="#all_assert_trackercallsfn-exact"><code>tracker.calls()</code></a>.</li>
<li>Object <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" class="type">&#x3C;Object></a>
<ul>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a></li>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" class="type">&#x3C;number></a> The actual number of times the function was called.</li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" class="type">&#x3C;number></a> The number of times the function was expected to be
called.</li>
<li><code>operator</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> The name of the function that is wrapped.</li>
<li><code>stack</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" class="type">&#x3C;Object></a> A stack trace of the function.</li>
</ul>
</li>
</ul>
<p>The arrays contains information about the expected and actual number of calls of
the functions that have not been called the expected number of times.</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">2</span>);

<span class="hljs-comment">// Returns an array containing information on callsfunc()</span>
tracker.<span class="hljs-title function_">report</span>();
<span class="hljs-comment">// [</span>
<span class="hljs-comment">//  {</span>
<span class="hljs-comment">//    message: 'Expected the func function to be executed 2 time(s) but was</span>
<span class="hljs-comment">//    executed 0 time(s).',</span>
<span class="hljs-comment">//    actual: 0,</span>
<span class="hljs-comment">//    expected: 2,</span>
<span class="hljs-comment">//    operator: 'func',</span>
<span class="hljs-comment">//    stack: stack trace</span>
<span class="hljs-comment">//  }</span>
<span class="hljs-comment">// ]</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">2</span>);

<span class="hljs-comment">// Returns an array containing information on callsfunc()</span>
tracker.<span class="hljs-title function_">report</span>();
<span class="hljs-comment">// [</span>
<span class="hljs-comment">//  {</span>
<span class="hljs-comment">//    message: 'Expected the func function to be executed 2 time(s) but was</span>
<span class="hljs-comment">//    executed 0 time(s).',</span>
<span class="hljs-comment">//    actual: 0,</span>
<span class="hljs-comment">//    expected: 2,</span>
<span class="hljs-comment">//    operator: 'func',</span>
<span class="hljs-comment">//    stack: stack trace</span>
<span class="hljs-comment">//  }</span>
<span class="hljs-comment">// ]</span></code></pre>
<h4><code>tracker.reset([fn])</code><span><a class="mark" href="#all_assert_trackerresetfn" id="all_assert_trackerresetfn">#</a></span><a aria-hidden="true" class="legacy" id="assert_tracker_reset_fn"></a></h4>
<div class="api_metadata">
<span>Added in: v18.8.0</span>
</div>
<ul>
<li><code>fn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> a tracked function to reset.</li>
</ul>
<p>reset calls of the call tracker.
if a tracked function is passed as an argument, the calls will be reset for it.
if no arguments are passed, all tracked functions will be reset</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);

<span class="hljs-title function_">callsfunc</span>();
<span class="hljs-comment">// Tracker was called once</span>
tracker.<span class="hljs-title function_">getCalls</span>(callsfunc).<span class="hljs-property">length</span> === <span class="hljs-number">1</span>;

tracker.<span class="hljs-title function_">reset</span>(callsfunc);
tracker.<span class="hljs-title function_">getCalls</span>(callsfunc).<span class="hljs-property">length</span> === <span class="hljs-number">0</span>;</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func);

<span class="hljs-title function_">callsfunc</span>();
<span class="hljs-comment">// Tracker was called once</span>
tracker.<span class="hljs-title function_">getCalls</span>(callsfunc).<span class="hljs-property">length</span> === <span class="hljs-number">1</span>;

tracker.<span class="hljs-title function_">reset</span>(callsfunc);
tracker.<span class="hljs-title function_">getCalls</span>(callsfunc).<span class="hljs-property">length</span> === <span class="hljs-number">0</span>;</code></pre>
<h4><code>tracker.verify()</code><span><a class="mark" href="#all_assert_trackerverify" id="all_assert_trackerverify">#</a></span><a aria-hidden="true" class="legacy" id="assert_tracker_verify"></a></h4>
<div class="api_metadata">
<span>Added in: v14.2.0, v12.19.0</span>
</div>
<p>Iterates through the list of functions passed to
<a href="#all_assert_trackercallsfn-exact"><code>tracker.calls()</code></a> and will throw an error for functions that
have not been called the expected number of times.</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">2</span>);

<span class="hljs-title function_">callsfunc</span>();

<span class="hljs-comment">// Will throw an error since callsfunc() was only called once.</span>
tracker.<span class="hljs-title function_">verify</span>();</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-comment">// Creates call tracker.</span>
<span class="hljs-keyword">const</span> tracker = <span class="hljs-keyword">new</span> assert.<span class="hljs-title class_">CallTracker</span>();

<span class="hljs-keyword">function</span> <span class="hljs-title function_">func</span>(<span class="hljs-params"></span>) {}

<span class="hljs-comment">// Returns a function that wraps func() that must be called exact times</span>
<span class="hljs-comment">// before tracker.verify().</span>
<span class="hljs-keyword">const</span> callsfunc = tracker.<span class="hljs-title function_">calls</span>(func, <span class="hljs-number">2</span>);

<span class="hljs-title function_">callsfunc</span>();

<span class="hljs-comment">// Will throw an error since callsfunc() was only called once.</span>
tracker.<span class="hljs-title function_">verify</span>();</code></pre>
</section><section><h3><code>assert(value[, message])</code><span><a class="mark" href="#all_assert_assertvalue-message" id="all_assert_assertvalue-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_value_message"></a></h3>
<div class="api_metadata">
<span>Added in: v0.5.9</span>
</div>
<ul>
<li><code>value</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a> The input that is checked for being truthy.</li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p>An alias of <a href="#all_assert_assertokvalue-message"><code>assert.ok()</code></a>.</p>
</section><section><h3><code>assert.deepEqual(actual, expected[, message])</code><span><a class="mark" href="#all_assert_assertdeepequalactual-expected-message" id="all_assert_assertdeepequalactual-expected-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_deepequal_actual_expected_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v18.0.0</td>
<td><p>Regular expressions lastIndex property is now compared as well.</p></td></tr>
<tr><td>v16.0.0, v14.18.0</td>
<td><p>In Legacy assertion mode, changed status from Deprecated to Legacy.</p></td></tr>
<tr><td>v14.0.0</td>
<td><p>NaN is now treated as being identical if both sides are NaN.</p></td></tr>
<tr><td>v12.0.0</td>
<td><p>The type tags are now properly compared and there are a couple minor comparison adjustments to make the check less surprising.</p></td></tr>
<tr><td>v9.0.0</td>
<td><p>The <code>Error</code> names and messages are now properly compared.</p></td></tr>
<tr><td>v8.0.0</td>
<td><p>The <code>Set</code> and <code>Map</code> content is also compared.</p></td></tr>
<tr><td>v6.4.0, v4.7.1</td>
<td><p>Typed array slices are handled correctly now.</p></td></tr>
<tr><td>v6.1.0, v4.5.0</td>
<td><p>Objects with circular references can be used as inputs now.</p></td></tr>
<tr><td>v5.10.1, v4.4.3</td>
<td><p>Handle non-<code>Uint8Array</code> typed arrays correctly.</p></td></tr>
<tr><td>v0.1.21</td>
<td><p><span>Added in: v0.1.21</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p><strong>Strict assertion mode</strong></p>
<p>An alias of <a href="#all_assert_assertdeepstrictequalactual-expected-message"><code>assert.deepStrictEqual()</code></a>.</p>
<p><strong>Legacy assertion mode</strong></p>
<p></p><div class="api_stability api_stability_3"><a href="#all_documentation_stability-index">Stability: 3</a> - Legacy: Use <a href="#all_assert_assertdeepstrictequalactual-expected-message"><code>assert.deepStrictEqual()</code></a> instead.</div><p></p>
<p>Tests for deep equality between the <code>actual</code> and <code>expected</code> parameters. Consider
using <a href="#all_assert_assertdeepstrictequalactual-expected-message"><code>assert.deepStrictEqual()</code></a> instead. <a href="#all_assert_assertdeepequalactual-expected-message"><code>assert.deepEqual()</code></a> can have
surprising results.</p>
<p><em>Deep equality</em> means that the enumerable "own" properties of child objects
are also recursively evaluated by the following rules.</p>
<h4>Comparison details<span><a class="mark" href="#all_assert_comparison-details" id="all_assert_comparison-details">#</a></span><a aria-hidden="true" class="legacy" id="assert_comparison_details"></a></h4>
<ul>
<li>Primitive values are compared with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality"><code>==</code> operator</a>,
with the exception of <code>NaN</code>. It is treated as being identical in case
both sides are <code>NaN</code>.</li>
<li><a href="https://tc39.github.io/ecma262/#sec-object.prototype.tostring">Type tags</a> of objects should be the same.</li>
<li>Only <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties">enumerable "own" properties</a> are considered.</li>
<li><a href="#all_errors_class-error"><code>Error</code></a> names and messages are always compared, even if these are not
enumerable properties.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive#Primitive_wrapper_objects_in_JavaScript">Object wrappers</a> are compared both as objects and unwrapped values.</li>
<li><code>Object</code> properties are compared unordered.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"><code>Map</code></a> keys and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"><code>Set</code></a> items are compared unordered.</li>
<li>Recursion stops when both sides differ or both sides encounter a circular
reference.</li>
<li>Implementation does not test the <a href="https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots"><code>[[Prototype]]</code></a> of
objects.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"><code>Symbol</code></a> properties are not compared.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"><code>WeakMap</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"><code>WeakSet</code></a> comparison does not rely on their values.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"><code>RegExp</code></a> lastIndex, flags, and source are always compared, even if these
are not enumerable properties.</li>
</ul>
<p>The following example does not throw an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> because the
primitives are compared using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality"><code>==</code> operator</a>.</p>

<pre class="with-50-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;
<span class="hljs-comment">// WARNING: This does not throw an AssertionError!</span>

assert.<span class="hljs-title function_">deepEqual</span>(<span class="hljs-string">'+00000000'</span>, <span class="hljs-literal">false</span>);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);
<span class="hljs-comment">// WARNING: This does not throw an AssertionError!</span>

assert.<span class="hljs-title function_">deepEqual</span>(<span class="hljs-string">'+00000000'</span>, <span class="hljs-literal">false</span>);</code></pre>
<p>"Deep" equality means that the enumerable "own" properties of child objects
are evaluated also:</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

<span class="hljs-keyword">const</span> obj1 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>
  }
};
<span class="hljs-keyword">const</span> obj2 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">2</span>
  }
};
<span class="hljs-keyword">const</span> obj3 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>
  }
};
<span class="hljs-keyword">const</span> obj4 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(obj1);

assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj1);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Values of b are different:</span>
assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj2);
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } deepEqual { a: { b: 2 } }</span>

assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj3);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Prototypes are ignored:</span>
assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj4);
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } deepEqual {}</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

<span class="hljs-keyword">const</span> obj1 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>
  }
};
<span class="hljs-keyword">const</span> obj2 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">2</span>
  }
};
<span class="hljs-keyword">const</span> obj3 = {
  <span class="hljs-attr">a</span>: {
    <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>
  }
};
<span class="hljs-keyword">const</span> obj4 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(obj1);

assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj1);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Values of b are different:</span>
assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj2);
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } deepEqual { a: { b: 2 } }</span>

assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj3);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Prototypes are ignored:</span>
assert.<span class="hljs-title function_">deepEqual</span>(obj1, obj4);
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } deepEqual {}</span></code></pre>
<p>If the values are not equal, an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown with a <code>message</code>
property set equal to the value of the <code>message</code> parameter. If the <code>message</code>
parameter is undefined, a default error message is assigned. If the <code>message</code>
parameter is an instance of an <a href="#all_errors_class-error"><code>Error</code></a> then it will be thrown instead of the
<a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a>.</p>
</section><section><h3><code>assert.deepStrictEqual(actual, expected[, message])</code><span><a class="mark" href="#all_assert_assertdeepstrictequalactual-expected-message" id="all_assert_assertdeepstrictequalactual-expected-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_deepstrictequal_actual_expected_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v18.0.0</td>
<td><p>Regular expressions lastIndex property is now compared as well.</p></td></tr>
<tr><td>v9.0.0</td>
<td><p>Enumerable symbol properties are now compared.</p></td></tr>
<tr><td>v9.0.0</td>
<td><p>The <code>NaN</code> is now compared using the <a href="https://tc39.github.io/ecma262/#sec-samevaluezero">SameValueZero</a> comparison.</p></td></tr>
<tr><td>v8.5.0</td>
<td><p>The <code>Error</code> names and messages are now properly compared.</p></td></tr>
<tr><td>v8.0.0</td>
<td><p>The <code>Set</code> and <code>Map</code> content is also compared.</p></td></tr>
<tr><td>v6.1.0</td>
<td><p>Objects with circular references can be used as inputs now.</p></td></tr>
<tr><td>v6.4.0, v4.7.1</td>
<td><p>Typed array slices are handled correctly now.</p></td></tr>
<tr><td>v5.10.1, v4.4.3</td>
<td><p>Handle non-<code>Uint8Array</code> typed arrays correctly.</p></td></tr>
<tr><td>v1.2.0</td>
<td><p><span>Added in: v1.2.0</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p>Tests for deep equality between the <code>actual</code> and <code>expected</code> parameters.
"Deep" equality means that the enumerable "own" properties of child objects
are recursively evaluated also by the following rules.</p>
<h4>Comparison details<span><a class="mark" href="#all_assert_comparison-details_1" id="all_assert_comparison-details_1">#</a></span><a aria-hidden="true" class="legacy" id="assert_comparison_details_1"></a></h4>
<ul>
<li>Primitive values are compared using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is"><code>Object.is()</code></a>.</li>
<li><a href="https://tc39.github.io/ecma262/#sec-object.prototype.tostring">Type tags</a> of objects should be the same.</li>
<li><a href="https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots"><code>[[Prototype]]</code></a> of objects are compared using
the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality"><code>===</code> operator</a>.</li>
<li>Only <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties">enumerable "own" properties</a> are considered.</li>
<li><a href="#all_errors_class-error"><code>Error</code></a> names and messages are always compared, even if these are not
enumerable properties.</li>
<li>Enumerable own <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"><code>Symbol</code></a> properties are compared as well.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive#Primitive_wrapper_objects_in_JavaScript">Object wrappers</a> are compared both as objects and unwrapped values.</li>
<li><code>Object</code> properties are compared unordered.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"><code>Map</code></a> keys and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"><code>Set</code></a> items are compared unordered.</li>
<li>Recursion stops when both sides differ or both sides encounter a circular
reference.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"><code>WeakMap</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"><code>WeakSet</code></a> comparison does not rely on their values. See
below for further details.</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"><code>RegExp</code></a> lastIndex, flags, and source are always compared, even if these
are not enumerable properties.</li>
</ul>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

<span class="hljs-comment">// This fails because 1 !== '1'.</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>({ <span class="hljs-attr">a</span>: <span class="hljs-number">1</span> }, { <span class="hljs-attr">a</span>: <span class="hljs-string">'1'</span> });
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   {</span>
<span class="hljs-comment">// +   a: 1</span>
<span class="hljs-comment">// -   a: '1'</span>
<span class="hljs-comment">//   }</span>

<span class="hljs-comment">// The following objects don't have own properties</span>
<span class="hljs-keyword">const</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();
<span class="hljs-keyword">const</span> object = {};
<span class="hljs-keyword">const</span> fakeDate = {};
<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">setPrototypeOf</span>(fakeDate, <span class="hljs-title class_">Date</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>);

<span class="hljs-comment">// Different [[Prototype]]:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(object, fakeDate);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + {}</span>
<span class="hljs-comment">// - Date {}</span>

<span class="hljs-comment">// Different type tags:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(date, fakeDate);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + 2018-04-26T00:49:08.604Z</span>
<span class="hljs-comment">// - Date {}</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-title class_">NaN</span>, <span class="hljs-title class_">NaN</span>);
<span class="hljs-comment">// OK because Object.is(NaN, NaN) is true.</span>

<span class="hljs-comment">// Different unwrapped numbers:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">1</span>), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">2</span>));
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + [Number: 1]</span>
<span class="hljs-comment">// - [Number: 2]</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">'foo'</span>), <span class="hljs-title class_">Object</span>(<span class="hljs-string">'foo'</span>));
<span class="hljs-comment">// OK because the object and the string are identical when unwrapped.</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(-<span class="hljs-number">0</span>, -<span class="hljs-number">0</span>);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Different zeros:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-number">0</span>, -<span class="hljs-number">0</span>);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + 0</span>
<span class="hljs-comment">// - -0</span>

<span class="hljs-keyword">const</span> symbol1 = <span class="hljs-title class_">Symbol</span>();
<span class="hljs-keyword">const</span> symbol2 = <span class="hljs-title class_">Symbol</span>();
assert.<span class="hljs-title function_">deepStrictEqual</span>({ [symbol1]: <span class="hljs-number">1</span> }, { [symbol1]: <span class="hljs-number">1</span> });
<span class="hljs-comment">// OK, because it is the same symbol on both objects.</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>({ [symbol1]: <span class="hljs-number">1</span> }, { [symbol2]: <span class="hljs-number">1</span> });
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: Inputs identical but not reference equal:</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// {</span>
<span class="hljs-comment">//   [Symbol()]: 1</span>
<span class="hljs-comment">// }</span>

<span class="hljs-keyword">const</span> weakMap1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>();
<span class="hljs-keyword">const</span> weakMap2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>([[{}, {}]]);
<span class="hljs-keyword">const</span> weakMap3 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>();
weakMap3.<span class="hljs-property">unequal</span> = <span class="hljs-literal">true</span>;

assert.<span class="hljs-title function_">deepStrictEqual</span>(weakMap1, weakMap2);
<span class="hljs-comment">// OK, because it is impossible to compare the entries</span>

<span class="hljs-comment">// Fails because weakMap3 has a property that weakMap1 does not contain:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(weakMap1, weakMap3);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   WeakMap {</span>
<span class="hljs-comment">// +   [items unknown]</span>
<span class="hljs-comment">// -   [items unknown],</span>
<span class="hljs-comment">// -   unequal: true</span>
<span class="hljs-comment">//   }</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

<span class="hljs-comment">// This fails because 1 !== '1'.</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>({ <span class="hljs-attr">a</span>: <span class="hljs-number">1</span> }, { <span class="hljs-attr">a</span>: <span class="hljs-string">'1'</span> });
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   {</span>
<span class="hljs-comment">// +   a: 1</span>
<span class="hljs-comment">// -   a: '1'</span>
<span class="hljs-comment">//   }</span>

<span class="hljs-comment">// The following objects don't have own properties</span>
<span class="hljs-keyword">const</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();
<span class="hljs-keyword">const</span> object = {};
<span class="hljs-keyword">const</span> fakeDate = {};
<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">setPrototypeOf</span>(fakeDate, <span class="hljs-title class_">Date</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>);

<span class="hljs-comment">// Different [[Prototype]]:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(object, fakeDate);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + {}</span>
<span class="hljs-comment">// - Date {}</span>

<span class="hljs-comment">// Different type tags:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(date, fakeDate);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + 2018-04-26T00:49:08.604Z</span>
<span class="hljs-comment">// - Date {}</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-title class_">NaN</span>, <span class="hljs-title class_">NaN</span>);
<span class="hljs-comment">// OK because Object.is(NaN, NaN) is true.</span>

<span class="hljs-comment">// Different unwrapped numbers:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">1</span>), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">2</span>));
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + [Number: 1]</span>
<span class="hljs-comment">// - [Number: 2]</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">'foo'</span>), <span class="hljs-title class_">Object</span>(<span class="hljs-string">'foo'</span>));
<span class="hljs-comment">// OK because the object and the string are identical when unwrapped.</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>(-<span class="hljs-number">0</span>, -<span class="hljs-number">0</span>);
<span class="hljs-comment">// OK</span>

<span class="hljs-comment">// Different zeros:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(<span class="hljs-number">0</span>, -<span class="hljs-number">0</span>);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// + 0</span>
<span class="hljs-comment">// - -0</span>

<span class="hljs-keyword">const</span> symbol1 = <span class="hljs-title class_">Symbol</span>();
<span class="hljs-keyword">const</span> symbol2 = <span class="hljs-title class_">Symbol</span>();
assert.<span class="hljs-title function_">deepStrictEqual</span>({ [symbol1]: <span class="hljs-number">1</span> }, { [symbol1]: <span class="hljs-number">1</span> });
<span class="hljs-comment">// OK, because it is the same symbol on both objects.</span>

assert.<span class="hljs-title function_">deepStrictEqual</span>({ [symbol1]: <span class="hljs-number">1</span> }, { [symbol2]: <span class="hljs-number">1</span> });
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: Inputs identical but not reference equal:</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">// {</span>
<span class="hljs-comment">//   [Symbol()]: 1</span>
<span class="hljs-comment">// }</span>

<span class="hljs-keyword">const</span> weakMap1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>();
<span class="hljs-keyword">const</span> weakMap2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>([[{}, {}]]);
<span class="hljs-keyword">const</span> weakMap3 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>();
weakMap3.<span class="hljs-property">unequal</span> = <span class="hljs-literal">true</span>;

assert.<span class="hljs-title function_">deepStrictEqual</span>(weakMap1, weakMap2);
<span class="hljs-comment">// OK, because it is impossible to compare the entries</span>

<span class="hljs-comment">// Fails because weakMap3 has a property that weakMap1 does not contain:</span>
assert.<span class="hljs-title function_">deepStrictEqual</span>(weakMap1, weakMap3);
<span class="hljs-comment">// AssertionError: Expected inputs to be strictly deep-equal:</span>
<span class="hljs-comment">// + actual - expected</span>
<span class="hljs-comment">//</span>
<span class="hljs-comment">//   WeakMap {</span>
<span class="hljs-comment">// +   [items unknown]</span>
<span class="hljs-comment">// -   [items unknown],</span>
<span class="hljs-comment">// -   unequal: true</span>
<span class="hljs-comment">//   }</span></code></pre>
<p>If the values are not equal, an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown with a <code>message</code>
property set equal to the value of the <code>message</code> parameter. If the <code>message</code>
parameter is undefined, a default error message is assigned. If the <code>message</code>
parameter is an instance of an <a href="#all_errors_class-error"><code>Error</code></a> then it will be thrown instead of the
<code>AssertionError</code>.</p>
</section><section><h3><code>assert.doesNotMatch(string, regexp[, message])</code><span><a class="mark" href="#all_assert_assertdoesnotmatchstring-regexp-message" id="all_assert_assertdoesnotmatchstring-regexp-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_doesnotmatch_string_regexp_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v16.0.0</td>
<td><p>This API is no longer experimental.</p></td></tr>
<tr><td>v13.6.0, v12.16.0</td>
<td><p><span>Added in: v13.6.0, v12.16.0</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>string</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a></li>
<li><code>regexp</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" class="type">&#x3C;RegExp></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p>Expects the <code>string</code> input not to match the regular expression.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-string">'I will fail'</span>, <span class="hljs-regexp">/fail/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The input was expected to not match the ...</span>

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-number">123</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.</span>

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-string">'I will pass'</span>, <span class="hljs-regexp">/different/</span>);
<span class="hljs-comment">// OK</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-string">'I will fail'</span>, <span class="hljs-regexp">/fail/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The input was expected to not match the ...</span>

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-number">123</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.</span>

assert.<span class="hljs-title function_">doesNotMatch</span>(<span class="hljs-string">'I will pass'</span>, <span class="hljs-regexp">/different/</span>);
<span class="hljs-comment">// OK</span></code></pre>
<p>If the values do match, or if the <code>string</code> argument is of another type than
<code>string</code>, an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown with a <code>message</code> property set equal
to the value of the <code>message</code> parameter. If the <code>message</code> parameter is
undefined, a default error message is assigned. If the <code>message</code> parameter is an
instance of an <a href="#all_errors_class-error"><code>Error</code></a> then it will be thrown instead of the
<a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a>.</p>
</section><section><h3><code>assert.doesNotReject(asyncFn[, error][, message])</code><span><a class="mark" href="#all_assert_assertdoesnotrejectasyncfn-error-message" id="all_assert_assertdoesnotrejectasyncfn-error-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_doesnotreject_asyncfn_error_message"></a></h3>
<div class="api_metadata">
<span>Added in: v10.0.0</span>
</div>
<ul>
<li><code>asyncFn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" class="type">&#x3C;Promise></a></li>
<li><code>error</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" class="type">&#x3C;RegExp></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a></li>
</ul>
<p>Awaits the <code>asyncFn</code> promise or, if <code>asyncFn</code> is a function, immediately
calls the function and awaits the returned promise to complete. It will then
check that the promise is not rejected.</p>
<p>If <code>asyncFn</code> is a function and it throws an error synchronously,
<code>assert.doesNotReject()</code> will return a rejected <code>Promise</code> with that error. If
the function does not return a promise, <code>assert.doesNotReject()</code> will return a
rejected <code>Promise</code> with an <a href="#all_errors_err_invalid_return_value"><code>ERR_INVALID_RETURN_VALUE</code></a> error. In both cases
the error handler is skipped.</p>
<p>Using <code>assert.doesNotReject()</code> is actually not useful because there is little
benefit in catching a rejection and then rejecting it again. Instead, consider
adding a comment next to the specific code path that should not reject and keep
error messages as expressive as possible.</p>
<p>If specified, <code>error</code> can be a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"><code>Class</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"><code>RegExp</code></a>, or a validation
function. See <a href="#all_assert_assertthrowsfn-error-message"><code>assert.throws()</code></a> for more details.</p>
<p>Besides the async nature to await the completion behaves identically to
<a href="#all_assert_assertdoesnotthrowfn-error-message"><code>assert.doesNotThrow()</code></a>.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

<span class="hljs-keyword">await</span> assert.<span class="hljs-title function_">doesNotReject</span>(
  <span class="hljs-keyword">async</span> () => {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-title class_">SyntaxError</span>
);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

(<span class="hljs-keyword">async</span> () => {
  <span class="hljs-keyword">await</span> assert.<span class="hljs-title function_">doesNotReject</span>(
    <span class="hljs-keyword">async</span> () => {
      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
    },
    <span class="hljs-title class_">SyntaxError</span>
  );
})();</code></pre>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">doesNotReject</span>(<span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>)))
  .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =></span> {
    <span class="hljs-comment">// ...</span>
  });</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">doesNotReject</span>(<span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>)))
  .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =></span> {
    <span class="hljs-comment">// ...</span>
  });</code></pre>
</section><section><h3><code>assert.doesNotThrow(fn[, error][, message])</code><span><a class="mark" href="#all_assert_assertdoesnotthrowfn-error-message" id="all_assert_assertdoesnotthrowfn-error-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_doesnotthrow_fn_error_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v5.11.0, v4.4.5</td>
<td><p>The <code>message</code> parameter is respected now.</p></td></tr>
<tr><td>v4.2.0</td>
<td><p>The <code>error</code> parameter can now be an arrow function.</p></td></tr>
<tr><td>v0.1.21</td>
<td><p><span>Added in: v0.1.21</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>fn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a></li>
<li><code>error</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" class="type">&#x3C;RegExp></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a></li>
</ul>
<p>Asserts that the function <code>fn</code> does not throw an error.</p>
<p>Using <code>assert.doesNotThrow()</code> is actually not useful because there
is no benefit in catching an error and then rethrowing it. Instead, consider
adding a comment next to the specific code path that should not throw and keep
error messages as expressive as possible.</p>
<p>When <code>assert.doesNotThrow()</code> is called, it will immediately call the <code>fn</code>
function.</p>
<p>If an error is thrown and it is the same type as that specified by the <code>error</code>
parameter, then an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown. If the error is of a
different type, or if the <code>error</code> parameter is undefined, the error is
propagated back to the caller.</p>
<p>If specified, <code>error</code> can be a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"><code>Class</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"><code>RegExp</code></a>, or a validation
function. See <a href="#all_assert_assertthrowsfn-error-message"><code>assert.throws()</code></a> for more details.</p>
<p>The following, for instance, will throw the <a href="#all_errors_class-typeerror"><code>TypeError</code></a> because there is no
matching error type in the assertion:</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-title class_">SyntaxError</span>
);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-title class_">SyntaxError</span>
);</code></pre>
<p>However, the following will result in an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> with the message
'Got unwanted exception...':</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-title class_">TypeError</span>
);</code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-title class_">TypeError</span>
);</code></pre>
<p>If an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown and a value is provided for the <code>message</code>
parameter, the value of <code>message</code> will be appended to the <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a>
message:</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-regexp">/Wrong value/</span>,
  <span class="hljs-string">'Whoops'</span>
);
<span class="hljs-comment">// Throws: AssertionError: Got unwanted exception: Whoops</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">doesNotThrow</span>(
  <span class="hljs-function">() =></span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'Wrong value'</span>);
  },
  <span class="hljs-regexp">/Wrong value/</span>,
  <span class="hljs-string">'Whoops'</span>
);
<span class="hljs-comment">// Throws: AssertionError: Got unwanted exception: Whoops</span></code></pre>
</section><section><h3><code>assert.equal(actual, expected[, message])</code><span><a class="mark" href="#all_assert_assertequalactual-expected-message" id="all_assert_assertequalactual-expected-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_equal_actual_expected_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v16.0.0, v14.18.0</td>
<td><p>In Legacy assertion mode, changed status from Deprecated to Legacy.</p></td></tr>
<tr><td>v14.0.0</td>
<td><p>NaN is now treated as being identical if both sides are NaN.</p></td></tr>
<tr><td>v0.1.21</td>
<td><p><span>Added in: v0.1.21</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p><strong>Strict assertion mode</strong></p>
<p>An alias of <a href="#all_assert_assertstrictequalactual-expected-message"><code>assert.strictEqual()</code></a>.</p>
<p><strong>Legacy assertion mode</strong></p>
<p></p><div class="api_stability api_stability_3"><a href="#all_documentation_stability-index">Stability: 3</a> - Legacy: Use <a href="#all_assert_assertstrictequalactual-expected-message"><code>assert.strictEqual()</code></a> instead.</div><p></p>
<p>Tests shallow, coercive equality between the <code>actual</code> and <code>expected</code> parameters
using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality"><code>==</code> operator</a>. <code>NaN</code> is specially handled
and treated as being identical if both sides are <code>NaN</code>.</p>

<pre class="with-38-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert'</span>;

assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>);
<span class="hljs-comment">// OK, 1 == 1</span>
assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-string">'1'</span>);
<span class="hljs-comment">// OK, 1 == '1'</span>
assert.<span class="hljs-title function_">equal</span>(<span class="hljs-title class_">NaN</span>, <span class="hljs-title class_">NaN</span>);
<span class="hljs-comment">// OK</span>

assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);
<span class="hljs-comment">// AssertionError: 1 == 2</span>
assert.<span class="hljs-title function_">equal</span>({ <span class="hljs-attr">a</span>: { <span class="hljs-attr">b</span>: <span class="hljs-number">1</span> } }, { <span class="hljs-attr">a</span>: { <span class="hljs-attr">b</span>: <span class="hljs-number">1</span> } });
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } == { a: { b: 1 } }</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert'</span>);

assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>);
<span class="hljs-comment">// OK, 1 == 1</span>
assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-string">'1'</span>);
<span class="hljs-comment">// OK, 1 == '1'</span>
assert.<span class="hljs-title function_">equal</span>(<span class="hljs-title class_">NaN</span>, <span class="hljs-title class_">NaN</span>);
<span class="hljs-comment">// OK</span>

assert.<span class="hljs-title function_">equal</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);
<span class="hljs-comment">// AssertionError: 1 == 2</span>
assert.<span class="hljs-title function_">equal</span>({ <span class="hljs-attr">a</span>: { <span class="hljs-attr">b</span>: <span class="hljs-number">1</span> } }, { <span class="hljs-attr">a</span>: { <span class="hljs-attr">b</span>: <span class="hljs-number">1</span> } });
<span class="hljs-comment">// AssertionError: { a: { b: 1 } } == { a: { b: 1 } }</span></code></pre>
<p>If the values are not equal, an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> is thrown with a <code>message</code>
property set equal to the value of the <code>message</code> parameter. If the <code>message</code>
parameter is undefined, a default error message is assigned. If the <code>message</code>
parameter is an instance of an <a href="#all_errors_class-error"><code>Error</code></a> then it will be thrown instead of the
<code>AssertionError</code>.</p>
</section><section><h3><code>assert.fail([message])</code><span><a class="mark" href="#all_assert_assertfailmessage" id="all_assert_assertfailmessage">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_fail_message"></a></h3>
<div class="api_metadata">
<span>Added in: v0.1.21</span>
</div>
<ul>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a> <strong>Default:</strong> <code>'Failed'</code></li>
</ul>
<p>Throws an <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a> with the provided error message or a default
error message. If the <code>message</code> parameter is an instance of an <a href="#all_errors_class-error"><code>Error</code></a> then
it will be thrown instead of the <a href="#all_assert_class-assertassertionerror"><code>AssertionError</code></a>.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">fail</span>();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: Failed</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'boom'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: boom</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'need array'</span>));
<span class="hljs-comment">// TypeError: need array</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">fail</span>();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: Failed</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'boom'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: boom</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'need array'</span>));
<span class="hljs-comment">// TypeError: need array</span></code></pre>
<p>Using <code>assert.fail()</code> with more than two arguments is possible but deprecated.
See below for further details.</p>
</section><section><h3><code>assert.fail(actual, expected[, message[, operator[, stackStartFn]]])</code><span><a class="mark" href="#all_assert_assertfailactual-expected-message-operator-stackstartfn" id="all_assert_assertfailactual-expected-message-operator-stackstartfn">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_fail_actual_expected_message_operator_stackstartfn"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v10.0.0</td>
<td><p>Calling <code>assert.fail()</code> with more than one argument is deprecated and emits a warning.</p></td></tr>
<tr><td>v0.1.21</td>
<td><p><span>Added in: v0.1.21</span></p></td></tr>
</tbody></table>
</details>
</div>
<p></p><div class="api_stability api_stability_0"><a href="#all_documentation_stability-index">Stability: 0</a> - Deprecated: Use <code>assert.fail([message])</code> or other assert
functions instead.</div><p></p>
<ul>
<li><code>actual</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>expected</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
<li><code>operator</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> <strong>Default:</strong> <code>'!='</code></li>
<li><code>stackStartFn</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" class="type">&#x3C;Function></a> <strong>Default:</strong> <code>assert.fail</code></li>
</ul>
<p>If <code>message</code> is falsy, the error message is set as the values of <code>actual</code> and
<code>expected</code> separated by the provided <code>operator</code>. If just the two <code>actual</code> and
<code>expected</code> arguments are provided, <code>operator</code> will default to <code>'!='</code>. If
<code>message</code> is provided as third argument it will be used as the error message and
the other arguments will be stored as properties on the thrown object. If
<code>stackStartFn</code> is provided, all stack frames above that function will be
removed from stacktrace (see <a href="#all_errors_errorcapturestacktracetargetobject-constructoropt"><code>Error.captureStackTrace</code></a>). If no arguments are
given, the default message <code>Failed</code> will be used.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 'a' != 'b'</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">'>'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 1 > 2</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'fail'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: fail</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'whoops'</span>, <span class="hljs-string">'>'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: whoops</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'need array'</span>));
<span class="hljs-comment">// TypeError: need array</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 'a' != 'b'</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">'>'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 1 > 2</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'fail'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: fail</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-string">'whoops'</span>, <span class="hljs-string">'>'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: whoops</span>

assert.<span class="hljs-title function_">fail</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">'need array'</span>));
<span class="hljs-comment">// TypeError: need array</span></code></pre>
<p>In the last three cases <code>actual</code>, <code>expected</code>, and <code>operator</code> have no
influence on the error message.</p>
<p>Example use of <code>stackStartFn</code> for truncating the exception's stacktrace:</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

<span class="hljs-keyword">function</span> <span class="hljs-title function_">suppressFrame</span>(<span class="hljs-params"></span>) {
  assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">'!=='</span>, suppressFrame);
}
<span class="hljs-title function_">suppressFrame</span>();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 'a' !== 'b'</span>
<span class="hljs-comment">//     at repl:1:1</span>
<span class="hljs-comment">//     at ContextifyScript.Script.runInThisContext (vm.js:44:33)</span>
<span class="hljs-comment">//     ...</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

<span class="hljs-keyword">function</span> <span class="hljs-title function_">suppressFrame</span>(<span class="hljs-params"></span>) {
  assert.<span class="hljs-title function_">fail</span>(<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">'!=='</span>, suppressFrame);
}
<span class="hljs-title function_">suppressFrame</span>();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: 'a' !== 'b'</span>
<span class="hljs-comment">//     at repl:1:1</span>
<span class="hljs-comment">//     at ContextifyScript.Script.runInThisContext (vm.js:44:33)</span>
<span class="hljs-comment">//     ...</span></code></pre>
</section><section><h3><code>assert.ifError(value)</code><span><a class="mark" href="#all_assert_assertiferrorvalue" id="all_assert_assertiferrorvalue">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_iferror_value"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v10.0.0</td>
<td><p>Instead of throwing the original error it is now wrapped into an [<code>AssertionError</code>][] that contains the full stack trace.</p></td></tr>
<tr><td>v10.0.0</td>
<td><p>Value may now only be <code>undefined</code> or <code>null</code>. Before all falsy values were handled the same as <code>null</code> and did not throw.</p></td></tr>
<tr><td>v0.1.97</td>
<td><p><span>Added in: v0.1.97</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>value</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types" class="type">&#x3C;any></a></li>
</ul>
<p>Throws <code>value</code> if <code>value</code> is not <code>undefined</code> or <code>null</code>. This is useful when
testing the <code>error</code> argument in callbacks. The stack trace contains all frames
from the error passed to <code>ifError()</code> including the potential new frames for
<code>ifError()</code> itself.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-literal">null</span>);
<span class="hljs-comment">// OK</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-number">0</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 0</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-string">'error'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 'error'</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>());
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Error</span>

<span class="hljs-comment">// Create some random error frames.</span>
<span class="hljs-keyword">let</span> err;
(<span class="hljs-keyword">function</span> <span class="hljs-title function_">errorFrame</span>(<span class="hljs-params"></span>) {
  err = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">'test error'</span>);
})();

(<span class="hljs-keyword">function</span> <span class="hljs-title function_">ifErrorFrame</span>(<span class="hljs-params"></span>) {
  assert.<span class="hljs-title function_">ifError</span>(err);
})();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error</span>
<span class="hljs-comment">//     at ifErrorFrame</span>
<span class="hljs-comment">//     at errorFrame</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-literal">null</span>);
<span class="hljs-comment">// OK</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-number">0</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 0</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-string">'error'</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 'error'</span>
assert.<span class="hljs-title function_">ifError</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>());
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Error</span>

<span class="hljs-comment">// Create some random error frames.</span>
<span class="hljs-keyword">let</span> err;
(<span class="hljs-keyword">function</span> <span class="hljs-title function_">errorFrame</span>(<span class="hljs-params"></span>) {
  err = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">'test error'</span>);
})();

(<span class="hljs-keyword">function</span> <span class="hljs-title function_">ifErrorFrame</span>(<span class="hljs-params"></span>) {
  assert.<span class="hljs-title function_">ifError</span>(err);
})();
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error</span>
<span class="hljs-comment">//     at ifErrorFrame</span>
<span class="hljs-comment">//     at errorFrame</span></code></pre>
</section><section><h3><code>assert.match(string, regexp[, message])</code><span><a class="mark" href="#all_assert_assertmatchstring-regexp-message" id="all_assert_assertmatchstring-regexp-message">#</a></span><a aria-hidden="true" class="legacy" id="assert_assert_match_string_regexp_message"></a></h3>
<div class="api_metadata">
<details class="changelog"><summary>History</summary>
<table>
<tbody><tr><th>Version</th><th>Changes</th></tr>
<tr><td>v16.0.0</td>
<td><p>This API is no longer experimental.</p></td></tr>
<tr><td>v13.6.0, v12.16.0</td>
<td><p><span>Added in: v13.6.0, v12.16.0</span></p></td></tr>
</tbody></table>
</details>
</div>
<ul>
<li><code>string</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a></li>
<li><code>regexp</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp" class="type">&#x3C;RegExp></a></li>
<li><code>message</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" class="type">&#x3C;string></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" class="type">&#x3C;Error></a></li>
</ul>
<p>Expects the <code>string</code> input to match the regular expression.</p>

<pre class="with-45-chars"><input class="js-flavor-selector" type="checkbox" checked aria-label="Show modern ES modules syntax"><code class="language-js mjs"><span class="hljs-keyword">import</span> assert <span class="hljs-keyword">from</span> <span class="hljs-string">'node:assert/strict'</span>;

assert.<span class="hljs-title function_">match</span>(<span class="hljs-string">'I will fail'</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The input did not match the regular ...</span>

assert.<span class="hljs-title function_">match</span>(<span class="hljs-number">123</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.</span>

assert.<span class="hljs-title function_">match</span>(<span class="hljs-string">'I will pass'</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// OK</span></code><code class="language-js cjs"><span class="hljs-keyword">const</span> assert = <span class="hljs-built_in">require</span>(<span class="hljs-string">'node:assert/strict'</span>);

assert.<span class="hljs-title function_">match</span>(<span class="hljs-string">'I will fail'</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The input did not match the regular ...</span>

assert.<span class="hljs-title function_">match</span>(<span class="hljs-number">123</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.</span>

assert.<span class="hljs-title function_">match</span>(<span class="hljs-string">'I will pass'</span>, <span class="hljs-regexp">/pass/</span>);
<span class="hljs-comment">// OK</span></code></pre>
<p>If the values do not match, or if the <code>string</code> argument is of another type than
<c